<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Cocos2dx Phong光照总结</title>
    <url>//posts/201601/</url>
    <content><![CDATA[<p>最近几天查看了Cocos2dx Sample源码，看到Cocos2dx光照和Shader部分，先说说光照部分，Cocos2dx光照部分我个人在网上调研的最好的参照要属这位大神 <a href="http://blog.csdn.net/bill_man/article/details/51668897">bill_man</a>，不过看后感觉收获不大，<br>之前接触过OpenGL，看的是Android3D游戏开发宝典，OpenGL光照部分讲的也挺详细</p>
<h2 id="OpenGL光照"><a href="#OpenGL光照" class="headerlink" title="OpenGL光照"></a>OpenGL光照</h2><p>&ensp;&ensp;OpenGL ES 2.0中采用的光照模型对比现实世界场景中还是做了相应的简化。OpenGL中的光照分为三种元素，也称为3个通道，包括环境光（Ambient）、散射光（Diffuse）以及镜面光（Specular），本文介绍三种光照通道的数学模型计算。</p>
<span id="more"></span> 
<h3 id="环境光（Ambient）"><a href="#环境光（Ambient）" class="headerlink" title="环境光（Ambient）"></a>环境光（Ambient）</h3><p>&ensp;&ensp;环境光（Ambient）指的是环境中均匀、物体各顶点亮度统一的光，也就是现实场景中的光源发出，而后经过多次反射，各个方向都大致均匀的光。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/Phong/0.webp"></p>
<p>&ensp;&ensp;环境光与光源位置无关，故而物体各顶点处亮度统一，其入射和反射的光照都大致均匀，计算公式如下：<br>&emsp;&emsp;&emsp;&emsp;环境光照射结果 &#x3D; 材质的反射系数 * 环境光强度<br>&ensp;&ensp;其中，材质的反射系数指的是物体被照射处的颜色四通道RGBA值，环境光强度指的是被反射后的光的颜色三通道的值，在计算时必须要对环境光强度作齐次坐标变换。<br>PS：现实世界场景中，环境光是比较偏暗的.</p>
<h3 id="散射光（Diffuse）"><a href="#散射光（Diffuse）" class="headerlink" title="散射光（Diffuse）"></a>散射光（Diffuse）</h3><p>&ensp;&ensp;仅仅有环境光的场景效果没有层次感，相对现实生活中的场景，还是比较差，本节介绍另一种光照通道——散射光，指的是从物体表面向全方位360度均匀反射的光.<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/Phong/1.webp"><br>&ensp;&ensp;散射光在现实场景中表现为漫反射，反射光在各个方向基本均匀，反射的强度与入射光的强度以及入射的角度密切相关。具体计算公式如下：<br>&emsp;&emsp;&emsp;&emsp;散射光照射结果 &#x3D;材质的反射系数 * 散射光强度 * max（cos（入射角），0）<br>&ensp;&ensp;其中，材质的反射系数为物体被照射处的颜色四通道RGBA值，散射光强度指的是散射光中颜色三通道的强度值，和环境光一致，在计算时也需要对散射光强度作齐次坐标变换。当入射角大于90度时，cos（入射角）的值会小于零，可用max函数处理为0，这是因为入射角的范围在实际中不会大于90度，必须做相应的处理。入射角越大，散射光强度越小，要得到余弦值，只需分别将法向量和入射光向量归一化，而后再求叉积.</p>
<h3 id="镜面光（Specular）"><a href="#镜面光（Specular）" class="headerlink" title="镜面光（Specular）"></a>镜面光（Specular）</h3><p>&ensp;&ensp;介绍完以上两种光通道，绘制的场景效果应该得到了改善，接下来介绍第三种光通道，这就是镜面光（Specular），代表的是表面较为光滑时的反射光，在物理学上也称之为“反射光”。镜面光最终强度不仅依赖于入射光与被照射点法向量的夹角，而且也依赖于观察者的位置，即摄像机的位置。如下图所示:<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/Phong/2.webp"><br>公式如下所示：<br>&ensp;&ensp;&ensp;&ensp;镜面光最终强度 &#x3D; 材质的反射系数 * 镜面光强度 * max（0，pow（cos（半向量与法向量的夹角），粗糙度））<br>&ensp;&ensp;镜面光照射结果 &#x3D; 材质的反射系数 * 镜面光最终强度<br>&ensp;&ensp;其中，半向量指的是从被照射点到光源的向量与从被照射点到观察点向量的平均向量，另外，等式右边式子也加了粗糙度因子，使渲染的图形更贴近现实场景，达到粗糙度越小，镜面光面积越大的效果。<br>&ensp;&ensp;关于上面三种光通道的计算如何产生，请参考其他相关资料，本文只介绍计算公式和如何使用这些公式。<br>&ensp;&ensp;从上面三个公式也可以看出，环境光与光源位置无关，散射光和镜面光与光源位置有关。</p>
<h2 id="Cocos2dx光照"><a href="#Cocos2dx光照" class="headerlink" title="Cocos2dx光照"></a>Cocos2dx光照</h2><p>类似于OpenGL光照，只是Cocos2dx光照中没有镜面光，有四种光源，Ambient Light, Directional Light, Spot Light, Point Light,可以使用下面源码做光照测试.<br>可以看看大神<a href="http://blog.csdn.net/bill_man/article/details/51668897">bill_man</a>如何说.</p>
<p>源码链接: <a href="http://pan.baidu.com/s/1nvMYgYX">http://pan.baidu.com/s/1nvMYgYX</a> 密码: ujvj</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>OpenGL</tag>
        <tag>Cocos2dx</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu常用工具</title>
    <url>//posts/201602/</url>
    <content><![CDATA[<h3 id="鼠标右键打开终端"><a href="#鼠标右键打开终端" class="headerlink" title="鼠标右键打开终端"></a>鼠标右键打开终端</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install nautilus-open-terminal</span><br></pre></td></tr></table></figure>
<p>重新加载文件管理器</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ nautilus -q</span><br></pre></td></tr></table></figure>
<p>或注销再登陆  </p>
<span id="more"></span>

<h3 id="Oh-My-Zsh"><a href="#Oh-My-Zsh" class="headerlink" title="Oh My Zsh"></a><a href="https://github.com/robbyrussell/oh-my-zsh">Oh My Zsh</a></h3><p>首先安装zsh</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install zsh</span><br></pre></td></tr></table></figure>
<p>安装完成后，通过<code>zsh --version</code>查看是否安装成功，然后通过wget安装oh my zsh</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sh -c <span class="string">&quot;<span class="subst">$(wget https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>到这就结束了，要想应用到全局，还得</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ chsh -s /bin/zsh</span><br></pre></td></tr></table></figure>
<p>设置完后重启.<br>如果想移除oh my zsh，　运行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ uninstall_oh_my_zsh</span><br></pre></td></tr></table></figure>

<h3 id="Catfish"><a href="#Catfish" class="headerlink" title="Catfish"></a><a href="https://launchpad.net/catfish-search/+download">Catfish</a></h3><p>一款Ubuntu下的文件搜索工具<br>命令行安裝方法</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install catfish</span><br></pre></td></tr></table></figure>
<p>然後運行命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ catfish</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows平台Cmd工具Cmder</title>
    <url>//posts/201604/</url>
    <content><![CDATA[<h2 id="1-Cmder-Sublime-实现多Window共存"><a href="#1-Cmder-Sublime-实现多Window共存" class="headerlink" title="1. Cmder + Sublime 实现多Window共存"></a>1. Cmder + Sublime 实现多Window共存</h2><p>配置过程比较简单。</p>
<span id="more"></span>
<p>打开Cmder安装目录下的config文件夹下的aliases文件。<br>在aliases中增加一行，添加别名。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subl=&quot;D:\PROGRA~1\sublimeText3\sublime_text.exe&quot; $1 -new_console:s50H</span><br></pre></td></tr></table></figure>
<p>其中，subl为别名，后面是您的Sublime所在的路径，-new_console:s50H代表在新增的Tab中打开sublime，同时横向排列，占比50%， H表示Horizontal, 水平方向创建.<br>下面的操作也可以，我来添加sublime text 2的快捷方式，纵向分布，占比75%， V表示Vertical，垂直方向创建。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">subl2=&quot;D:\PROGRA~1\sublimeText2\sublime_text.exe&quot; $1 -new_console:s75V</span><br></pre></td></tr></table></figure>
<p>注意，其中的路径有空格时, c:\progra<del>1 替代 C:\Program Files， c:\progra</del>2 替代 C:\Program Files (x86)。<br>如果想退出Sublime而保留Cmd, 将光标保持在Sublime上. 按下Alt+F+X, 你就能回到cmd上.</p>
<h2 id="将Cmder添加到右键菜单"><a href="#将Cmder添加到右键菜单" class="headerlink" title="将Cmder添加到右键菜单"></a>将Cmder添加到右键菜单</h2><p>以管理员模式打开命令行提示符，cd到Cmder.exe目录下，执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cmder.exe /REGISTER ALL</span><br></pre></td></tr></table></figure>

<h2 id="给Vim添加插件"><a href="#给Vim添加插件" class="headerlink" title="给Vim添加插件"></a>给Vim添加插件</h2><p>首当其冲的当然是强大的<a href="https://github.com/VundleVim/Vundle.vim">Vundle</a> vim插件管理， Vundle在Windows的安装可以参考<br><a href="https://github.com/VundleVim/Vundle.vim/wiki/Vundle-for-Windows">Vundle for Windows</a>.  </p>
<ol>
<li>安装Vundle for Windows前，需安装两个依赖，git和curl， 因为Cmder full版已经包含git，这里只需安装curl，安装curl最简单的方式是通过.cmd执行，只需将下面代码复制到C:\Program Files\Git\cmd\curl.cmd(没有则新建，touch curl.cmd)</li>
</ol>
<figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line"><span class="comment">@rem Do not use &quot;echo off&quot; to not affect any child calls.</span></span><br><span class="line">@<span class="built_in">setlocal</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@rem Get the abolute path to the parent directory, which is assumed to be the</span></span><br><span class="line"><span class="comment">@rem Git installation root.</span></span><br><span class="line">@<span class="keyword">for</span> /F &quot;delims=&quot; <span class="variable">%%I</span> <span class="keyword">in</span> (&quot;%~dp0..&quot;) <span class="keyword">do</span> @<span class="built_in">set</span> git_install_root=<span class="variable">%%~</span>fI</span><br><span class="line">@<span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%git_install_root%</span>\bin;<span class="variable">%git_install_root%</span>\mingw\bin;<span class="variable">%git_install_root%</span>\mingw64\bin;<span class="variable">%PATH%</span></span><br><span class="line"><span class="comment">@rem !!!!!!! For 64bit msysgit, replace &#x27;mingw&#x27; above with &#x27;mingw64&#x27; !!!!!!!</span></span><br><span class="line"></span><br><span class="line">@<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exist</span> &quot;<span class="variable">%HOME%</span>&quot; @<span class="built_in">set</span> HOME=<span class="variable">%HOMEDRIVE%</span><span class="variable">%HOMEPATH%</span></span><br><span class="line">@<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exist</span> &quot;<span class="variable">%HOME%</span>&quot; @<span class="built_in">set</span> HOME=<span class="variable">%USERPROFILE%</span></span><br><span class="line"></span><br><span class="line">@curl.exe %*</span><br></pre></td></tr></table></figure>
<p>注意：需要将上面的git_install_root替换为你的git安装根目录，然后验证curl是否安装成功</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">C:\&gt; curl --version</span><br><span class="line">curl 7.21.1 (i686-pc-mingw32) libcurl/7.21.1 OpenSSL/0.9.8k zlib/1.2.3</span><br><span class="line">Protocols: dict file ftp ftps http https imap imaps ldap ldaps pop3 pop3s rtsp smtp smtps telnet tftp</span><br><span class="line">Features: Largefile NTLM SSL SSPI libz</span><br></pre></td></tr></table></figure>
<p>在命令行执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> %USERPROFILE%</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/gmarik/Vundle.vim.git %USERPROFILE%/vimfiles/bundle/Vundle.vim</span><br><span class="line">gvim _vimrc</span><br></pre></td></tr></table></figure>
<p>如果没安装gvim，可以使用vim替换  </p>
<ol start="2">
<li>接下来修改.vimrc配置文件, 将下面Vundle 例子配置文件复制到.vimrc中</li>
</ol>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> nocompatible              <span class="comment">&quot; be iMproved, required</span></span><br><span class="line"><span class="keyword">filetype</span> off                  <span class="comment">&quot; required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; set the runtime path to include Vundle and initialize</span></span><br><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br><span class="line"><span class="comment">&quot; alternatively, pass a path where Vundle should install plugins</span></span><br><span class="line"><span class="comment">&quot;call vundle#begin(&#x27;~/some/path/here&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; let Vundle manage Vundle, required</span></span><br><span class="line">Plugin <span class="string">&#x27;VundleVim/Vundle.vim&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; The following are examples of different formats supported.</span></span><br><span class="line"><span class="comment">&quot; Keep Plugin commands between vundle#begin/end.</span></span><br><span class="line"><span class="comment">&quot; plugin on GitHub repo</span></span><br><span class="line">Plugin <span class="string">&#x27;tpope/vim-fugitive&#x27;</span></span><br><span class="line"><span class="comment">&quot; plugin from http://vim-scripts.org/vim/scripts.html</span></span><br><span class="line">Plugin <span class="string">&#x27;L9&#x27;</span></span><br><span class="line"><span class="comment">&quot; Git plugin not hosted on GitHub</span></span><br><span class="line">Plugin <span class="string">&#x27;git://git.wincent.com/command-t.git&#x27;</span></span><br><span class="line"><span class="comment">&quot; git repos on your local machine (i.e. when working on your own plugin)</span></span><br><span class="line">Plugin <span class="string">&#x27;file:///home/gmarik/path/to/plugin&#x27;</span></span><br><span class="line"><span class="comment">&quot; The sparkup vim script is in a subdirectory of this repo called vim.</span></span><br><span class="line"><span class="comment">&quot; Pass the path to set the runtimepath properly.</span></span><br><span class="line">Plugin <span class="string">&#x27;rstacruz/sparkup&#x27;</span>, &#123;<span class="string">&#x27;rtp&#x27;</span>: <span class="string">&#x27;vim/&#x27;</span>&#125;</span><br><span class="line"><span class="comment">&quot; Install L9 and avoid a Naming conflict if you&#x27;ve already installed a</span></span><br><span class="line"><span class="comment">&quot; different version somewhere else.</span></span><br><span class="line">Plugin <span class="string">&#x27;ascenator/L9&#x27;</span>, &#123;<span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;newL9&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; All of your Plugins must be added before the following line</span></span><br><span class="line"><span class="keyword">call</span> vundle#end()            <span class="comment">&quot; required</span></span><br><span class="line"><span class="keyword">filetype</span> plugin <span class="built_in">indent</span> <span class="keyword">on</span>    <span class="comment">&quot; required</span></span><br><span class="line"><span class="comment">&quot; To ignore plugin indent changes, instead use:</span></span><br><span class="line"><span class="comment">&quot;filetype plugin on</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; Brief help</span></span><br><span class="line"><span class="comment">&quot; :PluginList       - lists configured plugins</span></span><br><span class="line"><span class="comment">&quot; :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate</span></span><br><span class="line"><span class="comment">&quot; :PluginSearch foo - searches for foo; append `!` to refresh local cache</span></span><br><span class="line"><span class="comment">&quot; :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; see :h vundle for more details or wiki for FAQ</span></span><br><span class="line"><span class="comment">&quot; Put your non-Plugin stuff after this line</span></span><br></pre></td></tr></table></figure>
<p>同时还需要将上面的</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> rtp+=~/.<span class="keyword">vim</span>/bundle/Vundle.<span class="keyword">vim</span></span><br><span class="line"><span class="keyword">call</span> vundle#begin()</span><br></pre></td></tr></table></figure>
<p>替换为</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> rtp+=$HOME/vimfiles/bundle/Vundle.<span class="keyword">vim</span>/</span><br><span class="line"><span class="keyword">call</span> vundle#begin(<span class="string">&#x27;$USERPROFILE/vimfiles/bundle/&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：如果没有配置$HOME的环境变量，可以将上面的代码替换为  </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> rtp+=~/vimfiles/bundle/Vundle.<span class="keyword">vim</span>/</span><br><span class="line"><span class="keyword">call</span> vundle#begin(<span class="string">&#x27;~/vimfiles/bundle/&#x27;</span>)</span><br></pre></td></tr></table></figure>
<p>Windows上出现Vundle 插件路径安装错误，需要修改Plugin ‘file:’为  </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">Plugin <span class="string">&#x27;file:///~/vimfiles/plugin&#x27;</span></span><br></pre></td></tr></table></figure>

<p>可以参照 <a href="https://github.com/VundleVim/Vundle.vim/issues/472">(Windows) Vundle installs plugins to wrong directory</a></p>
<p>现在，可以开始安装我们的Vim插件了<br>启动vim并运行   </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">:PluginInstall</span><br></pre></td></tr></table></figure>
<p>也可以通过命令行安装： </p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vim</span> +PluginInstall +<span class="keyword">qall</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2dx透明背景 + 植入广告</title>
    <url>//posts/201603/</url>
    <content><![CDATA[<blockquote>
<ul>
<li>Android Studio 1.5.1</li>
<li>Cocos2d-x v3.8.1</li>
<li>Android SDK 5.1</li>
</ul>
</blockquote>
<h1 id="1-实现Cocos2dx背景透明"><a href="#1-实现Cocos2dx背景透明" class="headerlink" title="1. 实现Cocos2dx背景透明"></a>1. 实现Cocos2dx背景透明</h1><h2 id="1-1-新建Cocos2dx工程"><a href="#1-1-新建Cocos2dx工程" class="headerlink" title="1.1 新建Cocos2dx工程"></a>1.1 新建Cocos2dx工程</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cocos new AdTransparent -p com.cocos2dx.adtransparent -l cpp -d .</span><br></pre></td></tr></table></figure>
<h2 id="1-2-进入工程根目录，-编译并运行"><a href="#1-2-进入工程根目录，-编译并运行" class="headerlink" title="1.2 进入工程根目录， 编译并运行"></a>1.2 进入工程根目录， 编译并运行</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cocos compile -p android --android-studio</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="1-3-修改CCDirector-cpp，该文件在cocos-base-目录下"><a href="#1-3-修改CCDirector-cpp，该文件在cocos-base-目录下" class="headerlink" title="1.3 修改CCDirector.cpp，该文件在cocos&#x2F;base&#x2F; 目录下"></a>1.3 修改CCDirector.cpp，该文件在cocos&#x2F;base&#x2F; 目录下</h2><p>在drawScene()方法中</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if (_nextScene)</span><br><span class="line">&#123;</span><br><span class="line">    setNextScene();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之前添加下面两行代码，用来每帧时对屏幕做透明清除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">glClearColor(0.0f,0.0f,0.0f,0.0f); // add it to make 3D transparent  </span><br><span class="line">glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);  </span><br></pre></td></tr></table></figure>
<p>如下图所示：<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/clearDraw.webp"><br>此外，在初始化时也得清除一下，在setGLDefaultValues()方法结束前，添加一行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">glClearColor(0.0f, 0.0f, 0.0f, 0.0f);</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/initClear.webp"></p>
<h2 id="1-4-修改Cocos2dxActivity-java内容，该文件在下面红圈目录下，也就是目录"><a href="#1-4-修改Cocos2dxActivity-java内容，该文件在下面红圈目录下，也就是目录" class="headerlink" title="1.4 修改Cocos2dxActivity.java内容，该文件在下面红圈目录下，也就是目录"></a>1.4 修改Cocos2dxActivity.java内容，该文件在下面红圈目录下，也就是目录</h2><p><strong>cocos&#x2F;platform&#x2F;android&#x2F;java&#x2F;src&#x2F;org&#x2F;cocos2dx&#x2F;lib</strong><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/Cocos2dxActivity.webp"></p>
<p>接下来，还得把我们的View容器给透明化，在init()方法体里修改，因为view底层有个文本编辑框EditBox, 我们需要事先屏蔽掉，而后将SurfaceView透明，添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// Cocos2dxGLSurfaceView</span><br><span class="line">this.mGLSurfaceView = this.onCreateView();</span><br><span class="line">this.mGLSurfaceView.setZOrderOnTop(true);</span><br><span class="line">this.mGLSurfaceView.getHolder().setFormat(PixelFormat.TRANSLUCENT);</span><br><span class="line">this.mGLSurfaceView.setEGLConfigChooser(8, 8, 8, 8, 16, 0);</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/ActivityInit.webp"></p>
<h2 id="1-5-最后修改AndroidManifest-xml"><a href="#1-5-最后修改AndroidManifest-xml" class="headerlink" title="1.5 最后修改AndroidManifest.xml"></a>1.5 最后修改AndroidManifest.xml</h2><p>修改activity的主题为半透明</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">android:theme=&quot;@android:style/Theme.Translucent.NoTitleBar.Fullscreen&quot;</span><br></pre></td></tr></table></figure>
<h2 id="最终效果如图"><a href="#最终效果如图" class="headerlink" title="最终效果如图"></a>最终效果如图</h2><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/effect.webp"></p>
<h1 id="2-植入Google-Admob广告"><a href="#2-植入Google-Admob广告" class="headerlink" title="2. 植入Google Admob广告"></a>2. 植入Google Admob广告</h1><h2 id="2-1-注册Admob账号"><a href="#2-1-注册Admob账号" class="headerlink" title="2.1 注册Admob账号"></a>2.1 注册<a href="https://apps.admob.com/">Admob</a>账号</h2><pre><code>登录需要用谷歌账户，根据说明填写就行了
添加新应用，填入应用名称，新建，选择广告类型，这里选的是横幅广告
</code></pre>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/addApp.webp"></p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/addApp2.webp"></p>
<h2 id="2-2-得到应用的广告单元ID-后面会用到这个ID"><a href="#2-2-得到应用的广告单元ID-后面会用到这个ID" class="headerlink" title="2.2 得到应用的广告单元ID, 后面会用到这个ID"></a>2.2 得到应用的广告单元ID, 后面会用到这个ID</h2><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/AdUnitId.webp"></p>
<h2 id="2-3-开始代码部分"><a href="#2-3-开始代码部分" class="headerlink" title="2.3 开始代码部分"></a>2.3 开始代码部分</h2><h3 id="2-3-1-使用google-play-service"><a href="#2-3-1-使用google-play-service" class="headerlink" title="2.3.1 使用google play service"></a>2.3.1 使用google play service</h3><p>在app&#x2F;build.gradle里，添加Google play service依赖项</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">compile &#x27;com.google.android.gms:play-services:4.0.30&#x27;</span><br></pre></td></tr></table></figure>
<h3 id="2-3-2-修改AppActivity-该文件在-app-src-org-cocos2dx-cpp目录下"><a href="#2-3-2-修改AppActivity-该文件在-app-src-org-cocos2dx-cpp目录下" class="headerlink" title="2.3.2 修改AppActivity, 该文件在&#x2F;app&#x2F;src&#x2F;org&#x2F;cocos2dx&#x2F;cpp目录下"></a>2.3.2 修改AppActivity, 该文件在&#x2F;app&#x2F;src&#x2F;org&#x2F;cocos2dx&#x2F;cpp目录下</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.cocos2dx.cpp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.graphics.Color;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.Gravity;</span><br><span class="line"><span class="keyword">import</span> android.view.ViewGroup.LayoutParams;</span><br><span class="line"><span class="keyword">import</span> android.view.WindowManager;</span><br><span class="line"><span class="keyword">import</span> android.widget.FrameLayout;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.android.gms.ads.AdRequest;</span><br><span class="line"><span class="keyword">import</span> com.google.android.gms.ads.AdSize;</span><br><span class="line"><span class="keyword">import</span> com.google.android.gms.ads.AdView;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> android.provider.Settings;</span><br><span class="line"><span class="keyword">import</span> android.util.Log;</span><br><span class="line"><span class="keyword">import</span> java.security.NoSuchAlgorithmException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.cocos2dx.lib.Cocos2dxActivity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AppActivity</span> <span class="keyword">extends</span> <span class="title class_">Cocos2dxActivity</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> AdView adView;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">AD_UNIT_ID</span> <span class="operator">=</span> <span class="string">&quot;ca-app-pub-4514291455344558/5495177228&quot;</span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onCreate</span><span class="params">(Bundle savedInstanceState)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">        getWindow().addFlags(WindowManager.LayoutParams.FLAG_KEEP_SCREEN_ON);</span><br><span class="line"></span><br><span class="line">        adView = <span class="keyword">new</span> <span class="title class_">AdView</span>(<span class="built_in">this</span>);</span><br><span class="line">        adView.setAdSize(AdSize.BANNER);</span><br><span class="line">        adView.setAdUnitId(AD_UNIT_ID);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">android_id</span> <span class="operator">=</span> Settings.Secure.getString(<span class="built_in">this</span>.getContentResolver(), Settings.Secure.ANDROID_ID);</span><br><span class="line">        <span class="type">String</span> <span class="variable">deviceId</span> <span class="operator">=</span> md5(android_id).toUpperCase();</span><br><span class="line"></span><br><span class="line"><span class="comment">//      AdRequest adRequest = new AdRequest.Builder().addTestDevice(&quot;4595175973376A75D45C9C7F424562A5&quot;).build();</span></span><br><span class="line">        <span class="type">AdRequest</span> <span class="variable">adRequest</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AdRequest</span>.Builder().addTestDevice(deviceId).build();</span><br><span class="line">        Log.e(<span class="string">&quot;device Id: %s&quot;</span>, deviceId);</span><br><span class="line"></span><br><span class="line">        adView.loadAd(adRequest);</span><br><span class="line">        adView.setBackgroundColor(Color.BLACK);</span><br><span class="line">        adView.setBackgroundColor(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        FrameLayout.<span class="type">LayoutParams</span> <span class="variable">params</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FrameLayout</span>.LayoutParams(</span><br><span class="line">                LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT);</span><br><span class="line">        params.gravity = Gravity.BOTTOM;</span><br><span class="line"></span><br><span class="line">        addContentView(adView, params);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String <span class="title function_">md5</span><span class="params">(<span class="keyword">final</span> String s)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// Create MD5 Hash</span></span><br><span class="line">            <span class="type">MessageDigest</span> <span class="variable">digest</span> <span class="operator">=</span> java.security.MessageDigest</span><br><span class="line">                    .getInstance(<span class="string">&quot;MD5&quot;</span>);</span><br><span class="line">            digest.update(s.getBytes());</span><br><span class="line">            <span class="type">byte</span> messageDigest[] = digest.digest();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create Hex String</span></span><br><span class="line">            <span class="type">StringBuffer</span> <span class="variable">hexString</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; messageDigest.length; i++) &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">h</span> <span class="operator">=</span> Integer.toHexString(<span class="number">0xFF</span> &amp; messageDigest[i]);</span><br><span class="line">                <span class="keyword">while</span> (h.length() &lt; <span class="number">2</span>)</span><br><span class="line">                    h = <span class="string">&quot;0&quot;</span> + h;</span><br><span class="line">                hexString.append(h);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> hexString.toString();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line"><span class="comment">//            Logger.logStackTrace(TAG,e);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onResume</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onResume();</span><br><span class="line">        <span class="keyword">if</span>(adView != <span class="literal">null</span>)</span><br><span class="line">            adView.resume();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onPause</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(adView != <span class="literal">null</span>)</span><br><span class="line">            adView.pause();</span><br><span class="line">        <span class="built_in">super</span>.onPause();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">        adView.destroy();</span><br><span class="line">        <span class="built_in">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>AD_UNIT_ID是广告单元ID，这是在2.2部分得到的， 上面的代码还有个Device Id，需要根据你的测试设备ID而定，如果用的是模拟器，对应部分可以修改为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AdRequest adRequest = new AdRequest.Builder().addTestDevice(AdRequest.DEVICE_ID_EMULATOR).addTestDevice(deviceId).build();</span><br></pre></td></tr></table></figure>
<p>貌似还是需要deviceId，但我没用模拟器测试，而用真机测试的<br>参照链接：<a href="http://stackoverflow.com/questions/4524752/how-can-i-get-device-id-for-admob">http://stackoverflow.com/questions/4524752/how-can-i-get-device-id-for-admob</a></p>
<h3 id="2-3-3-修改AndroidManifest-xml"><a href="#2-3-3-修改AndroidManifest-xml" class="headerlink" title="2.3.3 修改AndroidManifest.xml"></a>2.3.3 修改AndroidManifest.xml</h3><p>在manifest结束前的最末端添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;meta-data</span><br><span class="line">            android:name= &quot;com.google.android.gms.version&quot;</span><br><span class="line">            android:value=&quot;@integer/google_play_services_version&quot; /&gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name=&quot;com.google.android.gms.ads.AdActivity&quot;</span><br><span class="line">            android:configChanges=&quot;keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize&quot;/&gt;</span><br><span class="line">    &lt;/application&gt;</span><br><span class="line"></span><br><span class="line">    &lt;supports-screen</span><br><span class="line">        android:anyDensity=&quot;true&quot;</span><br><span class="line">        android:largeScreens=&quot;true&quot;</span><br><span class="line">        android:normalScreens=&quot;true&quot;</span><br><span class="line">        android:smallScreens=&quot;true&quot;</span><br><span class="line">        android:xlargeScreens=&quot;true&quot; /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;</span><br><span class="line">    &lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;</span><br></pre></td></tr></table></figure>

<h2 id="最终效果图"><a href="#最终效果图" class="headerlink" title="最终效果图"></a>最终效果图</h2><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/A/AdTransparent/AdBannerCopy.webp"></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio学习</title>
    <url>//posts/201605/</url>
    <content><![CDATA[<p>&emsp;&emsp;这个系列教程在Android Studio Beta版本的时候就开始着手编写，感觉作者的教程对Gradle的说明及在Android Studio的常用方法介绍的很详细，做个链接总结吧，以便经常学习，相信作者的教程稳定可以帮助从未接触过AS和Gradle的初学者很快上手。</p>
<blockquote>
<ul>
<li><a href="http://geek.csdn.net/news/detail/86144">给 Android 初学者的 Gradle 知识普及</a></li>
</ul>
</blockquote>
<span id="more"></span>
<h2 id="Android-Studio系列教程"><a href="#Android-Studio系列教程" class="headerlink" title="Android Studio系列教程"></a>Android Studio系列教程</h2><blockquote>
<ul>
<li><a href="http://stormzhang.com/devtools/2014/11/25/android-studio-tutorial1/">Android Studio系列教程一–下载与安装</a></li>
<li><a href="http://stormzhang.com/devtools/2014/11/28/android-studio-tutorial2/">Android Studio系列教程二–基本设置与运行</a></li>
<li><a href="http://stormzhang.com/devtools/2014/12/09/android-studio-tutorial3/">Android Studio系列教程三–快捷键</a></li>
<li><a href="http://stormzhang.com/devtools/2014/12/18/android-studio-tutorial4/">Android Studio系列教程四–Gradle基础</a></li>
<li><a href="http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/">Android Studio系列教程五–Gradle命令详解与导入第三方包</a></li>
<li><a href="http://stormzhang.com/devtools/2015/01/15/android-studio-tutorial6/">Android Studio系列教程六–Gradle多渠道打包</a></li>
</ul>
</blockquote>
<h2 id="Android-Studio技巧合集"><a href="#Android-Studio技巧合集" class="headerlink" title="Android Studio技巧合集"></a>Android Studio技巧合集</h2><blockquote>
<ul>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402416974&idx=1&sn=a8fd70a65ff3973758e4a7975c361139&scene=21#wechat_redirect">AS技巧合集「常用技巧篇」</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402416974&idx=2&sn=136e2a77c9bdd2cf971143d7f35e57d2&scene=21#wechat_redirect">AS技巧合集「编码技巧篇」</a></li>
<li><a href="http://mp.weixin.qq.com/s?__biz=MzA4NTQwNDcyMA==&mid=402416974&idx=3&sn=3a0f99a753e7e8372cb98b696542d2cb&scene=21#wechat_redirect">AS技巧合集「调试技巧篇」</a></li>
</ul>
</blockquote>
<h2 id="认识下几个Gradle命令"><a href="#认识下几个Gradle命令" class="headerlink" title="认识下几个Gradle命令"></a>认识下几个Gradle命令</h2><blockquote>
<ul>
<li>.&#x2F;gradlew -v 版本号</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>.&#x2F;gradlew clean 清除9GAG&#x2F;app目录下的build文件夹</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>.&#x2F;gradlew build 检查依赖并编译打包</li>
</ul>
</blockquote>
<p>这里注意的是 .&#x2F;gradlew build 命令把 debug、release 环境的包都打出来，如果正式发布只需要打 Release 的包，该怎么办呢，下面介绍一个很有用的命令 assemble , 如</p>
<blockquote>
<ul>
<li>.&#x2F;gradlew assembleDebug 编译并打Debug包</li>
</ul>
</blockquote>
<blockquote>
<ul>
<li>.&#x2F;gradlew assembleRelease 编译并打Release的包</li>
</ul>
</blockquote>
<p>值得注意的是，以上所有命令都是在终端里执行，并且必须要切换到所在项目的根目录下执行，win系统直接执行 gradlew 。</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>阿里云服务器搭建Gitlab</title>
    <url>//posts/201606/</url>
    <content><![CDATA[<h3 id="选择服务器系统"><a href="#选择服务器系统" class="headerlink" title="选择服务器系统"></a>选择服务器系统</h3><p><a href="https://www.zhihu.com/question/19599986">服务器操作系统应该选择 Debian&#x2F;Ubuntu 还是 CentOS？</a><br>对于个人使用，觉得Ubuntu已经够用了，我用的服务器是Ubuntu.</p>
<span id="more"></span>
<h3 id="软件环境："><a href="#软件环境：" class="headerlink" title="软件环境："></a>软件环境：</h3><table>
<thead>
<tr>
<th align="center">软件</th>
<th align="center">版本</th>
</tr>
</thead>
<tbody><tr>
<td align="center">Ubuntu</td>
<td align="center">14.04</td>
</tr>
<tr>
<td align="center">Git</td>
<td align="center">1.9.1</td>
</tr>
<tr>
<td align="center">Ruby</td>
<td align="center">2.1.2</td>
</tr>
<tr>
<td align="center">Bundle</td>
<td align="center">1.12.5</td>
</tr>
<tr>
<td align="center">Redis</td>
<td align="center">2.8.4</td>
</tr>
</tbody></table>
<h3 id="CentOS-参考链接："><a href="#CentOS-参考链接：" class="headerlink" title="CentOS 参考链接："></a>CentOS 参考链接：</h3><ol>
<li><a href="http://www.tuicool.com/articles/fYVZ3ar">阿里云部署gitlab填坑记</a></li>
<li><a href="http://blog.csdn.net/caib1109/article/details/51756246#3-%E9%85%8D%E7%BD%AE%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1">在阿里云服务器上搭建Gitlab</a></li>
<li><a href="https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md">Gitlab官方安装文档 </a>—(<strong>很重要</strong>)</li>
</ol>
<h3 id="Ubuntu-参考链接："><a href="#Ubuntu-参考链接：" class="headerlink" title="Ubuntu 参考链接："></a>Ubuntu 参考链接：</h3><ol>
<li><a href="https://www.linode.com/docs/applications/development/install-gitlab-on-ubuntu-14-04-trusty-tahr">Install GitLab on Ubuntu 14.04</a>—(<strong>很重要</strong>)</li>
<li><a href="https://packages.gitlab.com/gitlab/gitlab-ce">gitlab deb package</a></li>
<li><a href="https://gitlab.com/gitlab-org/omnibus-gitlab/blob/master/README.md#installation">Config Instruction</a></li>
<li><a href="https://github.com/gitlabhq/gitlabhq/blob/master/doc/install/installation.md">Gitlab官方安装文档 </a>—(<strong>很重要</strong>)</li>
</ol>
<h3 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h3><p>&emsp;&emsp;步骤可以看<a href="https://www.linode.com/docs/applications/development/install-gitlab-on-ubuntu-14-04-trusty-tahr">Install GitLab on Ubuntu 14.04</a>，虽然文档不新，但亲测，按照步骤就可以成功，尝试过官方的安装文档，但bug层出不穷，有砸电脑的冲动<br><strong>&emsp;&emsp;需要注意的是配置<code>gitlab.yml</code>和Nginx的配置<code>gitlab</code>,以及gitlab-shell的<code>config.yml</code>时把信息更改对</strong></p>
<blockquote>
<p><code>gitlab.yml</code>中，要更改三项<code>host</code>,  <code>email_from</code>, <code>support_email</code>，其中<code>email_from</code>和<code>support_email</code>填的是一样的邮箱</p>
</blockquote>
<blockquote>
<p><code>config.yml</code>中，要更改<code>gitlab_url</code>为http:&#x2F;&#x2F;(服务器公网ip)</p>
</blockquote>
<blockquote>
<p><code>gitlab</code>中， 更改<code>server_name</code>为IP或服务器的URL, 没尝试过其他的域名</p>
</blockquote>
<h3 id="方法二-强烈推荐-："><a href="#方法二-强烈推荐-：" class="headerlink" title="方法二(强烈推荐)："></a>方法二(<strong>强烈推荐</strong>)：</h3><p> 在Bitnami上下载gitlab包<a href="https://bitnami.com/stack/gitlab/installer">bitnami-gitlab-8.9.6-0-linux-x64-installer.run</a>直接安装就行了, 非常简单，因为bitnami全都给你打包好了，直接next, next…就好了<br> <a href="http://www.vincentguo.cn/default/96.html">用GitLab搭建自己的私有GitHub</a><br> <a href="https://wiki.bitnami.com/Components/Apache">Bitnami Apache FAQ</a><br> 启用SSL支持：<a href="https://wiki.bitnami.com/Components/Apache#How_to_enable_HTTPS_support_with_SSL_certificates">How_to_enable_HTTPS_support_with_SSL_certificates</a><br>上两个安装成功的图  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/G/GitLab/gitlab.webp">  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/G/GitLab/gitres.webp">  </p>
<p>下面这图是check gitlab是否安装成功<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/G/GitLab/gitlabcheck.webp">  </p>
<h3 id="问题1：-ls-cannot-open-directory-Permission-denied"><a href="#问题1：-ls-cannot-open-directory-Permission-denied" class="headerlink" title="问题1： ls: cannot open directory .: Permission denied"></a>问题1： ls: cannot open directory .: Permission denied</h3><p>解决方案： </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ls -alZ</span><br></pre></td></tr></table></figure>
<p>参考：<a href="http://unix.stackexchange.com/questions/208736/permission-errors-even-though-permissions-are-wide-open">http://unix.stackexchange.com/questions/208736/permission-errors-even-though-permissions-are-wide-open</a></p>
<h3 id="问题2：-xxx-is-not-in-the-sudoers-file"><a href="#问题2：-xxx-is-not-in-the-sudoers-file" class="headerlink" title="问题2： xxx is not in the sudoers file"></a>问题2： xxx is not in the sudoers file</h3><p>解决方案：</p>
<ol>
<li>进入超级用户模式。也就是输入”su -“,系统会让你输入超级用户密码，输入密码后就进入了超级用户模式。（当然，你也可以直接用root用） </li>
<li>添加文件的写权限。也就是输入命令”chmod u+w &#x2F;etc&#x2F;sudoers”。 </li>
<li>编辑&#x2F;etc&#x2F;sudoers文件。也就是输入命令”vim &#x2F;etc&#x2F;sudoers”,输入”i”进入编辑模式，找到这一 行：”root ALL&#x3D;(ALL) ALL”在起下面添加”xxx ALL&#x3D;(ALL) ALL”(这里的xxx是你的用户名)，然后保存（就是先按一 下Esc键，然后输入”:wq”）退出。 </li>
<li>撤销文件的写权限。也就是输入命令”chmod u-w &#x2F;etc&#x2F;sudoers”。<br>参考： <a href="http://www.centoscn.com/CentosBug/osbug/2015/0114/4496.html">http://www.centoscn.com/CentosBug/osbug/2015/0114/4496.html</a><br>&emsp;&emsp;&emsp;&ensp;<a href="http://blog.sina.com.cn/s/blog_70555b550100o6li.html">http://blog.sina.com.cn/s/blog_70555b550100o6li.html</a></li>
</ol>
<h3 id="问题3：-couldn’t-be-verified-because-the-public-key-is-not-available"><a href="#问题3：-couldn’t-be-verified-because-the-public-key-is-not-available" class="headerlink" title="问题3： couldn’t be verified because the public key is not available"></a>问题3： couldn’t be verified because the public key is not available</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//后面数字是你缺失的公钥</span><br><span class="line"> sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3C962022012520A0 </span><br><span class="line"> sudo apt-get update</span><br></pre></td></tr></table></figure>
<h3 id="问题4：-为什么Bundle-install半天没反应"><a href="#问题4：-为什么Bundle-install半天没反应" class="headerlink" title="问题4： 为什么Bundle install半天没反应"></a>问题4： 为什么Bundle install半天没反应</h3><p>解决方案： <a href="https://ruby.taobao.org/">https://ruby.taobao.org/</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ gem sources --add https://ruby.taobao.org/ --remove https://rubygems.org/</span><br><span class="line">$ gem sources -l</span><br><span class="line">*** CURRENT SOURCES ***</span><br><span class="line"></span><br><span class="line">https://ruby.taobao.org</span><br><span class="line"># 请确保只有 ruby.taobao.org</span><br></pre></td></tr></table></figure>
<p>并断开本地vpn<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/G/GitLab/ruby.taobao.webp"></p>
<h3 id="问题5：-Getting-error-Peer-authentication-failed-for-user-“postgres”-when-trying-to-get-pgsql-working-with-rails"><a href="#问题5：-Getting-error-Peer-authentication-failed-for-user-“postgres”-when-trying-to-get-pgsql-working-with-rails" class="headerlink" title="问题5： Getting error: Peer authentication failed for user “postgres”, when trying to get pgsql working with rails"></a>问题5： <a href="http://stackoverflow.com/questions/18664074/getting-error-peer-authentication-failed-for-user-postgres-when-trying-to-ge">Getting error: Peer authentication failed for user “postgres”, when trying to get pgsql working with rails</a></h3><p>解决方案：<br>问题是在<code>/etc/postgresql/9.1/main/pg_hba.conf</code>.下面这行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local   all             postgres                                peer</span><br></pre></td></tr></table></figure>
<p>应该是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">local   all             postgres                                md5</span><br></pre></td></tr></table></figure>
<p>重启服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo service postgresql restart</span><br></pre></td></tr></table></figure>

<h3 id="问题6：-“the-following-packages-have-unmet-dependencies-libgdbm-dev”-”Unable-to-locate-package-libidnll-dev”"><a href="#问题6：-“the-following-packages-have-unmet-dependencies-libgdbm-dev”-”Unable-to-locate-package-libidnll-dev”" class="headerlink" title="问题6： “the following packages have unmet dependencies libgdbm-dev”,”Unable to locate package libidnll-dev”"></a>问题6： “the following packages have unmet dependencies libgdbm-dev”,”Unable to locate package libidnll-dev”</h3><p>解决方案：<br>复制下面源追加到&#x2F;etc&#x2F;apt&#x2F;sources.list文件末尾</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># deb cdrom:[Ubuntu 14.04.2 LTS _Trusty Tahr_ - Release amd64 (20150218.1)]/ trusty main restricted</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># See http://help.ubuntu.com/community/UpgradeNotes for how to upgrade to</span></span><br><span class="line"><span class="comment"># newer versions of the distribution.</span></span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty main restricted</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty main restricted</span><br><span class="line"></span><br><span class="line"><span class="comment">## Major bug fix updates produced after the final release of the</span></span><br><span class="line"><span class="comment">## distribution.</span></span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty-updates main restricted</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates main restricted</span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu</span></span><br><span class="line"><span class="comment">## team. Also, please note that software in universe WILL NOT receive any</span></span><br><span class="line"><span class="comment">## review or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty universe</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty universe</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty-updates universe</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates universe</span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository is ENTIRELY UNSUPPORTED by the Ubuntu </span></span><br><span class="line"><span class="comment">## team, and may not be under a free licence. Please satisfy yourself as to </span></span><br><span class="line"><span class="comment">## your rights to use the software. Also, please note that software in </span></span><br><span class="line"><span class="comment">## multiverse WILL NOT receive any review or updates from the Ubuntu</span></span><br><span class="line"><span class="comment">## security team.</span></span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty multiverse</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty multiverse</span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty-updates multiverse</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-updates multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment">## N.B. software from this repository may not have been tested as</span></span><br><span class="line"><span class="comment">## extensively as that contained in the main release, although it includes</span></span><br><span class="line"><span class="comment">## newer versions of some applications which may provide useful features.</span></span><br><span class="line"><span class="comment">## Also, please note that software in backports WILL NOT receive any review</span></span><br><span class="line"><span class="comment">## or updates from the Ubuntu security team.</span></span><br><span class="line">deb http://cn.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://cn.archive.ubuntu.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http://security.ubuntu.com/ubuntu trusty-security main restricted</span><br><span class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security main restricted</span><br><span class="line">deb http://security.ubuntu.com/ubuntu trusty-security universe</span><br><span class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security universe</span><br><span class="line">deb http://security.ubuntu.com/ubuntu trusty-security multiverse</span><br><span class="line">deb-src http://security.ubuntu.com/ubuntu trusty-security multiverse</span><br><span class="line"></span><br><span class="line"><span class="comment">## Uncomment the following two lines to add software from Canonical&#x27;s</span></span><br><span class="line"><span class="comment">## &#x27;partner&#x27; repository.</span></span><br><span class="line"><span class="comment">## This software is not part of Ubuntu, but is offered by Canonical and the</span></span><br><span class="line"><span class="comment">## respective vendors as a service to Ubuntu users.</span></span><br><span class="line"><span class="comment"># deb http://archive.canonical.com/ubuntu trusty partner</span></span><br><span class="line"><span class="comment"># deb-src http://archive.canonical.com/ubuntu trusty partner</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## This software is not part of Ubuntu, but is offered by third-party</span></span><br><span class="line"><span class="comment">## developers who want to ship their latest software.</span></span><br><span class="line">deb http://extras.ubuntu.com/ubuntu trusty main</span><br><span class="line">deb-src http://extras.ubuntu.com/ubuntu trusty main</span><br></pre></td></tr></table></figure>

<p>&emsp;&emsp;前面都是在搭建阿里云服务器时遇到的坑，因为阿里云服务器给我们的是一个完全干净的系统，我使用的是Ubuntu14.04 64位，而且发现系统干净的连镜像源也木有，安装ruby依赖时就出现了上面这个依赖问题，在这块google了好久，网上大多是清一色的<code>sudo apt-get update &amp;&amp; sudo apt-get upgrade</code>， 但还是木有解决，最后把我原来ubuntu系统上的sources.list拷到服务器的&#x2F;etc&#x2F;apt&#x2F;sources.list里就好了</p>
<p>安装完成后：</p>
<h3 id="问题1：-gitlab-cannot-download-zip"><a href="#问题1：-gitlab-cannot-download-zip" class="headerlink" title="问题1： gitlab cannot download zip"></a>问题1： <a href="http://stackoverflow.com/questions/34342035/gitlab-8-with-nginx-proxy-cant-download-a-zip-clone-a-public-repo-as-guest-ca">gitlab cannot download zip</a></h3><p>修改 &#x2F;etc&#x2F;nginx&#x2F;sites-available&#x2F;gitlab文件<br>将<code>gzip off</code>前的注释去掉<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/G/GitLab/downloadzip.webp"><br>然后重启gitlab</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ sudo service gitlab stop</span><br><span class="line">$ sudo service gitlab start</span><br></pre></td></tr></table></figure>










]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>关于PositiveSSL在自己Ubuntu服务器上安装失败的问题</title>
    <url>//posts/201607/</url>
    <content><![CDATA[<h3 id="安装PositiveSSL证书简要步骤"><a href="#安装PositiveSSL证书简要步骤" class="headerlink" title="安装PositiveSSL证书简要步骤"></a>安装PositiveSSL证书简要步骤</h3><ol>
<li>首先我是先在阿里云服务器上产生一个csr码和一个私钥，因为服务器使用的是Apache + OpenSSL，可以通过命令</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl req -new -newkey rsa:2048 -nodes -keyout server.key -out server.csr</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>可以参考namecheap官方文档<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9446/0/apache-opensslmodsslnginx">Generating CSR on Apache + OpenSSL&#x2F;ModSSL&#x2F;Nginx + Heroku</a><br>2. 得到CSR码后，需要在namecheap上验证激活SSL，得到证书<br><a href="https://www.namecheap.com/support/knowledgebase/article.aspx/794/67/how-do-i-activate-an-ssl-certificate">How do I activate an SSL certificate?</a><br>3. 激活后，官方会往发一封确认激活邮件给你，你确认以后，就会再给你发一封邮件，这一封邮件的附件就是你的证书，证书里包含一个.crt和.ca-bundle文件，具体的介绍可以参照<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/986/69/what-is-ca-bundle">What is CA bundle?</a>,crt文件就是你的Positive SSL证书<br>4. 接下来就只是需要把这个证书安装到你的服务器上就可以了</p>
<p>可以参照这篇文章去检验你的CA Chain是否正确安装<a href="https://www.namecheap.com/support/knowledgebase/article.aspx/9605/69/how-to-check-ca-chain-installation">How to check CA Chain installation?</a>, 很感激的是它提供了两个链接去根据你的域名检测证书安装情况<br><a href="https://www.sslchecker.com/sslchecker">https://www.sslchecker.com/sslchecker</a><br><a href="https://certlogik.com/ssl-checker/">https://certlogik.com/ssl-checker/</a><br>如果你是用的linux，并且安装有OpenSSL, 可以直接通过命令去检测</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl s_client -connect example.com:443</span><br></pre></td></tr></table></figure>
<p>如果一个IP上安装有多个证书，还需要添加 -servername example.com 标志</p>
<p><a href="http://stackoverflow.com/questions/991758/how-to-get-an-openssl-pem-file-from-key-and-crt-files">How to get an OpenSSL .pem file from .key and .crt files?</a><br>如果是二进制文件，对于server.crt，可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl x509 -inform DER -outform PEM -in server.crt -out server.crt.pem</span><br></pre></td></tr></table></figure>
<p>对于server.key，可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl rsa -inform DER -outform PEM -in server.crt -out server.crt.pem</span><br></pre></td></tr></table></figure>
<h3 id="问题1：出现域名手动添加https，可以显示小绿锁，但直接访问还是无安全链接"><a href="#问题1：出现域名手动添加https，可以显示小绿锁，但直接访问还是无安全链接" class="headerlink" title="问题1：出现域名手动添加https，可以显示小绿锁，但直接访问还是无安全链接"></a>问题1：出现域名手动添加https，可以显示小绿锁，但直接访问还是无安全链接</h3><p>我直接暴力解决，强制http重定向为https，并重定向到我应用上<br>在<code>/opt/bitnami/apache2/conf/bitnami/bitnami.conf</code>里，修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTPS&#125; !=on</span><br><span class="line">RewriteRule ^/(.*) https://%&#123;SERVER_NAME&#125;/$1 [R,L]</span><br><span class="line">...</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>
<p>然后在我的应用<code>your_installation_directory/apps/your_application/conf/httpd-vhosts.conf</code>里，</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">RewriteEngine On</span><br><span class="line">RewriteCond %&#123;HTTPS&#125; !=on</span><br><span class="line">RewriteRule ^/(.*) https://%&#123;SERVER_NAME&#125;/$1 [R,L]</span><br><span class="line">...</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line">&lt;VirtualHost *:443&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>

<h3 id="问题2：在服务器上安装PositiveSSL证书时，进行证书校验出现了-PEM-routines-PEM-read-bio-no-start-line-pem-lib-c-703-Expecting-TRUSTED-CERTIFICATE"><a href="#问题2：在服务器上安装PositiveSSL证书时，进行证书校验出现了-PEM-routines-PEM-read-bio-no-start-line-pem-lib-c-703-Expecting-TRUSTED-CERTIFICATE" class="headerlink" title="问题2：在服务器上安装PositiveSSL证书时，进行证书校验出现了 PEM routines PEM_read_bio no start line pem_lib.c 703:Expecting TRUSTED CERTIFICATE"></a>问题2：在服务器上安装PositiveSSL证书时，进行证书校验出现了 <a href="http://stackoverflow.com/questions/28712088/unable-to-load-certificate-6300error0906d06cpem-routinespem-read-biono-star">PEM routines PEM_read_bio no start line pem_lib.c 703:Expecting TRUSTED CERTIFICATE</a></h3><p>对server.crt校验</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl x509 -noout -text -in server.crt -modulus | grep Modulus</span><br><span class="line">Modulus=D6E23C2E6140707EA63F3250...</span><br></pre></td></tr></table></figure>
<p>校验server.key</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl rsa -noout -text -in server.key -modulus | grep Modulus</span><br><span class="line">Modulus=D6E23C2E6140707EA63F3250...</span><br></pre></td></tr></table></figure>
<p>不一样的话，key有问题，Apache无法start, 然后我就出现了如题所示的问题，最后在stackoverflow上找到解决了，<br>首先解密</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openssl rsa -in protected.key -out unprotected.key</span><br></pre></td></tr></table></figure>
<p>然后重新创建PEM</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat unprotected.key yourcert.crt &gt; yourcert.pem</span><br></pre></td></tr></table></figure>

<p>查看listen port</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo grep -ir &quot;^listen&quot; /opt/gitlab-8.9.6-0/apache2/*</span><br></pre></td></tr></table></figure>
<p>我的结果是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/opt/gitlab-8.9.6-0/apache2/conf/extra/httpd-ssl.conf:Listen 443</span><br><span class="line">/opt/gitlab-8.9.6-0/apache2/conf/original/extra/httpd-ssl.conf:Listen 443</span><br><span class="line">/opt/gitlab-8.9.6-0/apache2/conf/original/httpd.conf:Listen 80</span><br><span class="line">/opt/gitlab-8.9.6-0/apache2/conf/httpd.conf:Listen 80</span><br><span class="line">/opt/gitlab-8.9.6-0/apache2/conf/bitnami/bitnami.conf:Listen 443</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>C++纯虚函数，非纯虚函数，非虚函数</title>
    <url>//posts/201608/</url>
    <content><![CDATA[<p>先定义一个类</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Shape</span>&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="title">draw</span><span class="params">()</span> <span class="type">const</span> </span>= <span class="number">0</span>;   <span class="comment">//纯虚函数</span></span><br><span class="line">    <span class="function"><span class="keyword">virtual</span> <span class="title">color</span><span class="params">()</span></span>;    <span class="comment">//非纯虚函数</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">objectID</span><span class="params">()</span></span>;   <span class="comment">//非虚函数</span></span><br><span class="line">    、、、</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Rectangle</span>: <span class="keyword">public</span> Shape&#123;&#125;</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Ellipse</span>: <span class="keyword">public</span> Shape&#123;&#125;</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h2 id="纯虚函数-pure-virtual-function"><a href="#纯虚函数-pure-virtual-function" class="headerlink" title="纯虚函数(pure virtual function)"></a>纯虚函数(pure virtual function)</h2><p><strong>纯虚函数的目的是让派生类只继承函数接口，具体的实现留给派生类</strong><br>纯虚函数最突出的特性：</p>
<blockquote>
<p>它的派生类必须继承它的声明，有纯虚函数的类为抽象类<br>一般在抽象类它不会提供自身的定义</p>
</blockquote>
<p>注意：它可以提供但是一般不提供，也就是说Shape::draw可以提供一份实现代码，但调用它只能显示指明类名称</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Shape* p1 = <span class="keyword">new</span> Shape; <span class="comment">//Error, Shape是抽象的</span></span><br><span class="line">Shape* p2 = <span class="keyword">new</span> Rectangle; <span class="comment">//Right</span></span><br><span class="line">p2-&gt;<span class="built_in">draw</span>();             <span class="comment">//调用Rectangle::draw</span></span><br><span class="line">p2-&gt;Shape::<span class="built_in">draw</span>();      <span class="comment">//调用Shape::draw</span></span><br></pre></td></tr></table></figure>

<h2 id="非纯虚函数-impure-virtual-function"><a href="#非纯虚函数-impure-virtual-function" class="headerlink" title="非纯虚函数(impure virtual function)"></a>非纯虚函数(impure virtual function)</h2><p><strong>非纯虚函数的目的是让派生类继承函数接口和缺省实现</strong><br>拿上面的Shape类来说，派生类必须支持一个color()函数，如果派生类并未给定，可以直接使用基类缺省的color()函数，上面的例子就是Shape::color()函数，这种表示也会造成一定的问题，如果派生类未实现继承来的虚函数，而执行了基类的缺省行为，会与实际所需目的违背而并未报错，问题不在于基类的缺省行为，而在于派生类没有表达自己所需要的执行行为</p>
<h2 id="非虚函数"><a href="#非虚函数" class="headerlink" title="非虚函数"></a>非虚函数</h2><p><strong>非虚函数的目的是让派生类继承函数接口和强制性实现</strong><br>这种情况所代表的意义是不变性凌驾于特异性之上，派生类不需要添加函数的特异行为，与基类行为一致，派生类都不应该尝试改变其行为</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu常用软件包deb的安装与卸载命令</title>
    <url>//posts/201609/</url>
    <content><![CDATA[<p>主要用到<code>apt-get</code>, <code>dpkg</code>两个命令</p>
<h1 id="快速使用"><a href="#快速使用" class="headerlink" title="快速使用"></a>快速使用</h1><h2 id="apt-get的常用命令"><a href="#apt-get的常用命令" class="headerlink" title="apt-get的常用命令"></a>apt-get的常用命令</h2><table>
<thead>
<tr>
<th align="left">Apt-Get</th>
<th align="left">Discription</th>
</tr>
</thead>
<tbody><tr>
<td align="left">apt-get install softname1 softname2 softname3…</td>
<td align="left">安装软件</td>
</tr>
<tr>
<td align="left">apt-get remove softname1 softname2 softname3…</td>
<td align="left">卸载软件</td>
</tr>
<tr>
<td align="left">apt-get remove –purge softname1</td>
<td align="left">卸载并清除配置</td>
</tr>
<tr>
<td align="left">apt-get update</td>
<td align="left">更新软件信息数据库</td>
</tr>
<tr>
<td align="left">apt-get upgrade</td>
<td align="left">进行系统升级</td>
</tr>
<tr>
<td align="left">apt-cache search softname1 softname2 softname3…</td>
<td align="left">搜索软件包</td>
</tr>
<tr>
<td align="left">apt-get -f install</td>
<td align="left">修正（依赖关系）安装</td>
</tr>
</tbody></table>
<span id="more"></span>
<h2 id="Dpkg的常用命令"><a href="#Dpkg的常用命令" class="headerlink" title="Dpkg的常用命令"></a>Dpkg的常用命令</h2><table>
<thead>
<tr>
<th align="left">Dpkg</th>
<th align="left">Discription</th>
</tr>
</thead>
<tbody><tr>
<td align="left">dpkg -i xxx.deb</td>
<td align="left">安装deb软件包</td>
</tr>
<tr>
<td align="left">dpkg -r xxx.deb</td>
<td align="left">删除软件包</td>
</tr>
<tr>
<td align="left">dpkg -r –purge xxx.deb</td>
<td align="left">连同配置文件一起删除</td>
</tr>
<tr>
<td align="left">dpkg -info xxx.deb</td>
<td align="left">查看软件包信息</td>
</tr>
<tr>
<td align="left">dpkg -L xxx.deb</td>
<td align="left">查看文件拷贝详情</td>
</tr>
<tr>
<td align="left">dpkg -l</td>
<td align="left">查看系统中已安装软件包信息</td>
</tr>
<tr>
<td align="left">dpkg-reconfigure xx</td>
<td align="left">重新配置软件包</td>
</tr>
<tr>
<td align="left">sudo dpkg -p package_name</td>
<td align="left">卸载软件包及其配置文件，但无法解决依赖关系</td>
</tr>
<tr>
<td align="left">sudo aptitude purge pkgname</td>
<td align="left">卸载软件包及其配置文件与依赖关系包</td>
</tr>
</tbody></table>
<p>清除所有已删除包的残馀配置文件 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dpkg -l |grep ^rc|awk &#x27;&#123;print $2&#125;&#x27; |sudo xargs dpkg -P </span><br></pre></td></tr></table></figure>
<p>如果报如下错误，证明你的系统中没有残留配置文件了，无须担心。</p>
<h1 id="用法详解"><a href="#用法详解" class="headerlink" title="用法详解"></a>用法详解</h1><h2 id="dpkg的介绍及命令使用"><a href="#dpkg的介绍及命令使用" class="headerlink" title="dpkg的介绍及命令使用"></a><code>dpkg</code>的介绍及命令使用</h2><p>  简介 <code>dpkg</code>是Debian的中级软件包管理器,类似RPM.</p>
<p><code>dpkg</code>是Debian软件包管理系统的中流砥柱,负责安全卸载软件包,配置,以及维护已安装的软件包.也是Debian系统中众多软件包管理工具的后端.有关dpkg的更多介绍参阅:<a href="http://www.dpkg.org/">http://www.dpkg.org</a></p>
<p>系统中所有packages的信息都在<code>/var/lib/dpkg/</code>目录下,其中子目录<code>/var/lib/dpkg/info</code>用于保存各个软件包的配置文件列表.</p>
<p><code>.conffiles</code> 记录了软件包的配置文件列表<br><code>.list</code> 保存软件包中的文件列表,用户可以从.list的信息中找到软件包中文件的具体安装位置.</p>
<p><code>.md5sums</code> 记录了软件包的md5信息,这个信息是用来进行包验证的.</p>
<p><code>.prerm</code> 脚本在Debian报解包之前运行,主要作用是停止作用于即将升级的软件包的服务,直到软件包安装或升级完成.</p>
<p><code>.postinst</code>脚本是完成Debian包解开之后的配置工作,通常用于执行所安装软件包相关命令和服务重新启动.</p>
<p><code>/var/lib/dpkg/available</code>文件的内容是软件包的描述信息,该软件包括当前系统所使用的Debian安装源中的所有软件包,其中包括当前系统中已安装的和未安装的软件包.</p>
<p>dpkg查询当前系统所有已安装的deb包<br><code>dpkg –l</code> 命令用于查询当前系统所有以安装的deb包的信息.,通过less和grep可以执行更复杂的查询工作.</p>
<p>例如查找跟vim有关的软件包,<code>dpkg –l |grep –ivim</code></p>
<p>(如发现iU 表示软件包未安装成功,ii表示安装成功)</p>
<p>查看已安装软件包的详细情况<br><code>dpkg –s</code> 命令查看软件包的详细情况,包括版本,依赖之类的</p>
<p>查询系统中所安装软件包所安装的文件<br><code>dpkg –L</code> 命令用于查询系统中所安装软件包的安装的文件安装到系统的位置和安装了那些.</p>
<p>小提示: 如何可以看软件包装到哪个地方?<br>用<code>apt-get install *</code></p>
<p>如何可以看软件包装到哪个地方?<br><code>dpkg -L package-name|more</code></p>
<p>查询系统中某个文件属于那个软件包<br><code>dpkg –S</code> 命令用于了解当前的软件属于那个软件包</p>
<p>查询未安装的信息<br>查询未安装软件包详细信息<br><code>dpkg –I</code> 命令用于查看未安装软件包的详细信息,以便了解该软件包是否需要安装.</p>
<p>查询deb包文件中所包含的文件<br><code>dpkg –c</code> 显示未安装deb软件包所包含的文件列表,以及安装位置</p>
<p>安装软件包<br>安装deb软件包<br><code>dpkg –i</code> 手工安装deb包到系统中,不过有时会存在Dpends关系,建议使用<code>apt-get</code> 来安装.<br>如果通过<code>dpkg –i</code>安装软件后由于Dpends关系没有安装成功,可通过<code>apt-get –f install</code>解决 </p>
<p>解决<code>dpkg –i</code> 安装deb包出现Dpends问题<br><code>apt-get –f install</code> 解决Dpends问题.<br>例如:<code>dpkg –i lftp_3.1.3-1_i386.deb</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Selecting previously deselected package lftp.</span><br><span class="line">(Reading database … 20654 files and directories currently installed.)</span><br><span class="line">unpacking lftp (from lftp_3.1.3-1_i386.deb)…</span><br><span class="line">dpkg:dependency problems prevent configuration of lftp:</span><br><span class="line">lftp depends on libexpat1 (&lt;=1.95.8);however</span><br><span class="line">dpkg : error processing lftp (--install)</span><br><span class="line">dependency problems –leaving unconfigured </span><br><span class="line">Errors were encountered while processing:</span><br><span class="line">lftp</span><br><span class="line">//lftp软件包安装失败</span><br><span class="line">dpkg –l |grep lftp</span><br><span class="line">iU lftp   3.1.3-1   Sophisticated</span><br><span class="line">command-line FTP/HTTP client p</span><br><span class="line">//”dpkg -l” 查询信息表示lftp软件包未安装成功</span><br><span class="line">(iU表示未安装成功,ii表示安装成功)</span><br></pre></td></tr></table></figure>
<p>使用<code>apt-get –f install</code>解决</p>
<p>卸载deb软件包<br><code>dpkg –r</code>用于卸载指定的软件包,该命令只卸载软件包安装到系统中的文件,而不去删除软件包的配置文件,因此不是完全意义上的卸载.但是软件包保存在系统中,可以提供给以后在安装软件包时使用.<br>例如:<code>dpkg –r prozilla</code> 移除后再用<code>dpkg –l |grep prozilla</code> 查看</p>
<p>会看到<code>rc proc 1.3.6-3woody3 multi-thraded download accelerator</code></p>
<p>表示软件包已经被卸载,但配置文件仍在“rc”带表配置文件仍在.</p>
<p>卸载软件包并清除配置文件<br><code>dpkg –P</code> 用于卸载软件包同时也删除配置文件,dpkg –P 不能解决Dpends问题,建议卸载时使用<code>apt-get</code>操作</p>
<p>重新配置软件包<br>对于Debian系统中的众多软件包(尤其是系统和服务器软件包)来说,在第一次安装该软件包时候会显示对话框窗口,提示用户输入必要的配置信息.当用户需要再次对软件包配置的时候,可以使用dpkg-reconfigure来对指定的软件包进行配置.<br>比如<code>dpkg-reconfigure locales</code></p>
<h2 id="alien包转换工具"><a href="#alien包转换工具" class="headerlink" title="alien包转换工具"></a>alien包转换工具</h2><p>如果我们有很喜欢的RPM包,而又没有deb版本.怎么办~?可以同过alien来转换或者直接安装,这个小家伙可是个很方便的东西!</p>
<p>基本命令如下:<br>首先通过<code>apt-get install alien</code>来安装.<br>然后</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alien -i name-of-the-pakage.rpm /*用来直接安装rpm包</span><br><span class="line">alien -d , --to-deb /*Make debian packages,This is the default</span><br><span class="line">例:alien –d package.rpm</span><br><span class="line">alien –r , --to-rpm /*Make rpm packages</span><br><span class="line"></span><br><span class="line">例:alien –r package.deb</span><br><span class="line">alien –p , --to-pkg /*Make Solaris pkg packages</span><br><span class="line">alien –-to-slp /*Make slp packages</span><br><span class="line">alien –t , --to-tgz /*Make tgz packages</span><br><span class="line">alien –T 检测</span><br><span class="line"></span><br><span class="line">alien –-patch=patch 设置patch</span><br></pre></td></tr></table></figure>
<p>常用apt命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-cache search <span class="comment"># ------(package 搜索包)</span></span><br><span class="line">apt-cache show <span class="comment">#------(package 获取包的相关信息，如说明、大小、版本等)</span></span><br><span class="line">sudo apt-get install <span class="comment"># ------(package 安装包)</span></span><br><span class="line">sudo apt-get install <span class="comment"># -----(package - - reinstall 重新安装包)</span></span><br><span class="line">sudo apt-get -f install <span class="comment"># -----(强制安装?#&quot;-f = --fix-missing&quot;当是修复安装吧...)</span></span><br><span class="line">sudo apt-get remove <span class="comment">#-----(package 删除包)</span></span><br><span class="line">sudo apt-get remove - - purge <span class="comment"># ------(package 删除包，包括删除配置文件等)</span></span><br><span class="line">sudo apt-get autoremove --purge <span class="comment"># ----(package 删除包及其依赖的软件包+配置文件等（只对6.10有效，强烈推荐）)</span></span><br><span class="line">sudo apt-get update <span class="comment">#------更新源</span></span><br><span class="line">sudo apt-get upgrade <span class="comment">#------更新已安装的包</span></span><br><span class="line">sudo apt-get dist-upgrade <span class="comment"># ---------升级系统</span></span><br><span class="line">sudo apt-get dselect-upgrade <span class="comment">#------使用 dselect 升级</span></span><br><span class="line">apt-cache depends <span class="comment">#-------(package 了解使用依赖)</span></span><br><span class="line">apt-cache rdepends <span class="comment"># ------(package 了解某个具体的依赖?#当是查看该包被哪些包依赖吧...)</span></span><br><span class="line">sudo apt-get build-dep <span class="comment"># ------(package 安装相关的编译环境)</span></span><br><span class="line">apt-get <span class="built_in">source</span> <span class="comment">#------(package 下载该包的源代码)</span></span><br><span class="line">sudo apt-get clean &amp;&amp; sudo apt-get autoclean <span class="comment"># --------清理下载文件的存档 &amp;&amp; 只清理过时的包</span></span><br><span class="line">sudo apt-get check <span class="comment">#-------检查是否有损坏的依赖</span></span><br></pre></td></tr></table></figure>

<h2 id="aptitude"><a href="#aptitude" class="headerlink" title="aptitude"></a>aptitude</h2><p>与 apt-get 一样，是 Debian 及其衍生系统中功能极其强大的包管理工具。与 apt-get 不同的是，aptitude 在处理依赖问题上更佳一些。举例来说，aptitude 在删除一个包时，会同时删除本身所依赖的包。这样，系统中不会残留无用的包，整个系统更为干净。以下是笔者总结的一些常用 aptitude 命令，仅供参考。</p>
<table>
<thead>
<tr>
<th align="left">命令</th>
<th align="left">作用</th>
</tr>
</thead>
<tbody><tr>
<td align="left">aptitude update</td>
<td align="left">更新可用的包列表</td>
</tr>
<tr>
<td align="left">aptitude upgrade</td>
<td align="left">升级可用的包</td>
</tr>
<tr>
<td align="left">aptitude dist-upgrade</td>
<td align="left">将系统升级到新的发行版</td>
</tr>
<tr>
<td align="left">aptitude install pkgname</td>
<td align="left">安装包</td>
</tr>
<tr>
<td align="left">aptitude remove pkgname</td>
<td align="left">删除包</td>
</tr>
<tr>
<td align="left">aptitude purge pkgname</td>
<td align="left">删除包及其配置文件</td>
</tr>
<tr>
<td align="left">aptitude search string</td>
<td align="left">搜索包</td>
</tr>
<tr>
<td align="left">aptitude show pkgname</td>
<td align="left">显示包的详细信息</td>
</tr>
<tr>
<td align="left">aptitude clean</td>
<td align="left">删除下载的包文件</td>
</tr>
<tr>
<td align="left">aptitude autoclean</td>
<td align="left">仅删除过期的包文件</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>CDN加速，解决Github博客被百度蜘蛛禁止录入的问题</title>
    <url>//posts/201610/</url>
    <content><![CDATA[<p>先来看看这篇文章<a href="http://jerryzou.com/posts/feasibility-of-allowing-baiduSpider-for-Github-Pages/">解决 Github Pages 禁止百度爬虫的方法与可行性分析</a>，该文章说明了为什么 Github Pages 禁用了百度爬虫，以及CDN的相关知识，这里我来引用一下CDN的原理</p>
<span id="more"></span>
<h3 id="CDN-的原理"><a href="#CDN-的原理" class="headerlink" title="CDN 的原理"></a>CDN 的原理</h3><p>CDN 的全称是 <a href="https://en.wikipedia.org/wiki/Content_delivery_network">Content Delivery Network</a>，即内容分发网络，一般用于分发静态内容，比如图片、视频、CSS、JS文件。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/CDN/cdn2.webp"><br>&emsp;&emsp;如果不使用 CDN，那所有用户的请求都会直接导向单一的源服务器(Origin Server)。而如果启用了 CDN 服务，那么 CDN 服务提供商会分配给你若干个节点，这里以上图为例，比如分配给你的服务器 3 个东海岸的节点和 3 个西海岸的节点。</p>
<p>&emsp;&emsp;此时用户就不会直接向源服务器发送请求，而是向边缘服务器(Edge Server)发送请求。再看下面这张示意图，当你第一次访问资源 foo.webp 时，边缘服务器没有 foo.webp 的缓存。所以会由它向源服务器发送请求，并获取到 foo.webp。下一次所有经过这个节点的请求，因为存在缓存的缘故，都不用再次向源服务器发送请求，而是由边缘服务器直接返回该文件的缓存即可。这样一来就可以大大降低时延，也减小了源服务器的压力。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/CDN/cdn3.webp"></p>
<p>Github 可能是封了百度的 IP，也有可能是封了百度爬虫的 User-Agent， 反正就是Github博客无法被百度收录啦，<br>可以通过下面命令查看，如果被Forbidden了，那就证明被禁了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -A &quot;Mozilla/5.0 (compatible; Baiduspider/2.0; +http://www.baidu.com/search/spider.html)&quot; www.example.com</span><br></pre></td></tr></table></figure>
<p>后面的<a href="http://www.example.com替换为你要查看的域名/">www.example.com替换为你要查看的域名</a>, <strong>使用 CDN 来解决这个问题的关键就在于，让百度爬虫不要直接向 Github 的服务器发送请求，而是通过 CDN 边缘服务器的缓存来抓取网站的内容。边缘服务器本身是不会关心 UA 的，所以问题就迎刃而解了。</strong></p>
<p><a href="https://www.freehao123.com/2014-cdn/">国外比较出名的CDN</a></p>
<blockquote>
<p>CloudFlare -IPv6免费CDN加速和免费SSL<br>Incapsula -日本、香港、美国、欧洲CDN加速<br>Google PageSpeed Service 谷歌出品的免费CDN</p>
</blockquote>
<p><a href="http://www.dozer.cc/2015/06/github-pages-and-cdn.html">国内比较出名的CDN</a>，不外乎三种</p>
<blockquote>
<p>七牛<br>又拍云<br>百度加速乐</p>
</blockquote>
<p>自己动手搭建专属CDN服务</p>
<blockquote>
<p>LuManager CDN 一键安装快速部署全站CDN<br>Layer –多平台快速生成镜像实现CDN加速<br>网站使用CDN后获取真实IP地址</p>
</blockquote>
<p>如果域名没有备案的话，可以使用国外的，域名有备案的，可以选择使用国内的，当然你也可以自己动手搭建CDN</p>
<p>我在这里说说我的使用经历，我注册过<a href="https://www.cloudflare.com/">CloudFlare</a>, <a href="https://www.incapsula.com/">Incapsula</a>, <a href="https://www.upyun.com/index.html">又拍云</a>, 前两个我试过直接添加github博客的.io子域名去进行分发, 给出的结果是</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">We were unable to identify username.github.io as a registered domain. Please ensure you are providing the root domain and not any subdomains (e.g., example.com, not subdomain.example.com) (Code: 1099)</span><br></pre></td></tr></table></figure>
<p>幸好我还有个域名，于是就用上了，又拍云我只是注册了，还没试过，觉得过程比较麻烦，2016年之后，又拍云还需要上传手持身份证照片进行实名认证(实名认证也就算了，还手持身份证，我还是默默的用国外的CDN算了吧)，我直接注册后，有客服过了一两个小时，直接给我打电话，号召我尽快注册，CloudFlare的话，它和Incapsula的区别可以参考<a href="http://www.zhihu.com/question/20038632/answer/15952364">Incapsula与Cloudflare那一个会更加优秀？</a>, 免费的CloudFlare不提供CNAME方式</p>
<p>注册完Incapsula后，添加你要使用CDN的域名，然后就是检测，它会提供两个A Record(一般是两个)以及一个CNAME Record给你更改，你可以在你自己的域名管理处，更改就行了，依照它的说明重新指向，将你原来指向github的两个A Record替换为它给定的，一个CNAME Record替换为它给定的，等一会儿就行了，github博客里的CNAME仍然是你的域名<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/CDN/cdn4.webp"><br>这是我在CDN里的DNS转换，下面是我的namecheap的Host Record<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/CDN/cdn5.webp"><br>Incapsula给我的IP指向是美国那边的，听说香港和日本那边的节点，也是要经过美国那边，不过对大天朝来说，香港和日本这边的访问速度还是快些，如果换节点，可以查看Incapsula的节点，Incapsula所有的CDN节点IP地址可以在<a href="http://bgp.he.net/AS19551#_prefixes">这里</a>找到</p>
<p>如果使用国内的CDN，推荐看看这篇文章<a href="http://www.dozer.cc/2015/06/github-pages-and-cdn.html">利用 CDN 解决百度爬虫被 Github Pages 拒绝的问题</a>，对比了国内的CDN的优劣势，以及使用体验</p>
<p>最后，做个参考链接汇总<br><a href="http://bgp.he.net/AS19551#_prefixes">Incapsula各地CDN节点</a><br><a href="https://www.freehao123.com/2014-cdn/">2014年十个优秀的免费CDN加速服务-国内和国外免费CDN</a><br><a href="http://jerryzou.com/posts/feasibility-of-allowing-baiduSpider-for-Github-Pages/">解决 Github Pages 禁止百度爬虫的方法与可行性分析</a><br><a href="http://www.dozer.cc/2015/06/github-pages-and-cdn.html">利用 CDN 解决百度爬虫被 Github Pages 拒绝的问题</a><br><a href="http://www.chinaz.com/web/2015/0126/380724_3.shtml">Incapsula免费CDN服务申请使用及加速效果测评</a><br><a href="http://www.zhihu.com/question/30898326">如何解决百度爬虫无法爬取搭建在Github上的个人博客的问题？</a><br><a href="http://www.zhihu.com/question/20038632/answer/15952364">Incapsula与Cloudflare那一个会更加优秀？</a></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>CDN</tag>
        <tag>GitHub</tag>
      </tags>
  </entry>
  <entry>
    <title>Big and Little Endian</title>
    <url>//posts/201611/</url>
    <content><![CDATA[<h3 id="在内存中存储Words"><a href="#在内存中存储Words" class="headerlink" title="在内存中存储Words"></a>在内存中存储Words</h3><p>假设一个32 bit(90AB12CD， 为16进制数)，每个16进制数为4 bits，我们需要8个16进制数表示一个32 bit的值，这4 bytes为：90， AB, 12, CD，每个字节需要两个16进制数<br>这个32 bit的数在内存中有两种方式存储</p>
<span id="more"></span>
<h3 id="大端字节"><a href="#大端字节" class="headerlink" title="大端字节"></a>大端字节</h3><p>在大端字节里，地址最低位存放数的最高位(store the most significant byte in the smallest address)，中文解释起来有点怪,存放如例图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/E/Endian/BEndian.webp"><br>在小端字节里，地址最低位存放数的最低位(store the least significant byte in the smallest address), 存放如例图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/E/Endian/LEndian.webp"></p>
<h3 id="为什么存在这两种方式？"><a href="#为什么存在这两种方式？" class="headerlink" title="为什么存在这两种方式？"></a>为什么存在这两种方式？</h3><p>这个问题我没有细致研究，如果你在网络上传输数据，一定需要知道计算机是大端还是小端字节，要不然如果你传的是相反端的字节，读起来就可能会出错，因为一般基本数据类型可不只有占一个字节的char型，还有float， int等类型，如果涉及多字节传输，自然要考虑Endian的类型<br>可以通过union测试系统的大小端，如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">union</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="type">char</span> a;</span><br><span class="line">&#125;C;</span><br><span class="line">C.i = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//打印字符a，如果输出为1，即为小端，否则，则为大端</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C.a);</span><br></pre></td></tr></table></figure>
<p>分析：<br>&emsp;&emsp;因为union里是共享内存空间的，而且对一个变量赋值会覆盖其他变量占用共享空间的值,union的空间大小为占用最大空间类型的大小，如上例，sizeof(C)的大小为4 bytes,因为int占4 bytes<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/E/Endian/EndianSample.webp"></p>
<p>可以参考这篇文章<br><a href="https://www.cs.umd.edu/class/sum2003/cmsc311/Notes/Data/endian.html">Big and Little Endian</a></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>C++ memcpy内存重叠</title>
    <url>//posts/201612/</url>
    <content><![CDATA[<p>可以先看看<a href="https://zh.wikipedia.org/wiki/String.h#.E5.87.BD.E6.95.B0">Wiki百科对memcpy及memmove的解释</a></p>
<table>
<thead>
<tr>
<th align="center">名称</th>
<th align="center">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">void *memcpy(void *dest, const void *src, size_t n);</td>
<td align="center">将n字节长的内容从一个内存地址复制到另一个地址；如果两个地址存在重叠，则最终行为未定义</td>
</tr>
<tr>
<td align="center">void *memmove(void *dest, const void *src, size_t n);</td>
<td align="center">将n字节长的内容从一个内存地址复制到另一个地址；与memcpy不同的是它可以正确作用于两个存在重叠的地址</td>
</tr>
<tr>
<td align="center">void *memset(void *, int, size_t);</td>
<td align="center">用某种字节内容覆写一段内存空间</td>
</tr>
</tbody></table>
<span id="more"></span>
<p>如果要做优化的话，可以这样做，保证一次复制4 bytes而不是一次1 byte，毕竟一次复制4 bytes的效率高于一次复制1 byte的效率</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">memcpy</span><span class="params">(<span class="type">void</span>* dest, <span class="type">void</span>* src, <span class="type">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//assert(NULL != dest &amp;&amp; NULL != src);</span></span><br><span class="line">    <span class="type">uint8_t</span> *pdest = (<span class="type">uint8_t</span>*) dest;</span><br><span class="line">    <span class="type">uint8_t</span> *psrc = (<span class="type">uint8_t</span>*) src;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> loops = (size / <span class="built_in">sizeof</span>(<span class="type">uint32_t</span>));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> index = <span class="number">0</span>; index &lt; loops; ++index)</span><br><span class="line">    &#123;</span><br><span class="line">        *((<span class="type">uint32_t</span>*)pdest) = *((<span class="type">uint32_t</span>*)psrc);</span><br><span class="line">        pdest += <span class="built_in">sizeof</span>(<span class="type">uint32_t</span>);</span><br><span class="line">        psrc += <span class="built_in">sizeof</span>(<span class="type">uint32_t</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    loops = (size % <span class="built_in">sizeof</span>(<span class="type">uint32_t</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> index = <span class="number">0</span>; index &lt; loops; ++index)</span><br><span class="line">    &#123;</span><br><span class="line">        *pdest = *psrc;</span><br><span class="line">        ++pdest;</span><br><span class="line">        ++psrc;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果要保证处理<em><strong>内存重叠</strong></em>的话，可以使用memmove,memmove的实现如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span>* <span class="title">memmove</span><span class="params">(<span class="type">void</span>* dst, <span class="type">void</span>* src, <span class="type">size_t</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">char</span>* pdst = (<span class="type">char</span>*)dst;</span><br><span class="line">    <span class="type">char</span>* psrc = (<span class="type">char</span>*)src;</span><br><span class="line">    <span class="keyword">if</span>(pdst&gt;psrc &amp;&amp; psrc + size &gt; pdst)</span><br><span class="line">    &#123;</span><br><span class="line">        pdst += size - <span class="number">1</span>;</span><br><span class="line">        psrc += size - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(size--)</span><br><span class="line">            *pdst-- = *psrc--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span>(size--)</span><br><span class="line">            *pdst++ = *psrc++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>顺便带上memset吧，这三个库函数都是比较常见的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span>* <span class="title">memset</span><span class="params">(<span class="type">void</span>* s, <span class="type">int</span> c, <span class="type">size_t</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">uint8_t</span>* ps = (<span class="type">uint8_t</span>*)s;</span><br><span class="line">    <span class="keyword">while</span>(size--)</span><br><span class="line">        *ps++ = (<span class="type">uint8_t</span>)c;</span><br><span class="line">    <span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://stackoverflow.com/questions/11876361/implementing-own-memcpy-size-in-bytes">stackoverflow</a>上的说明<br>注意：为了使用<code>uint8_t</code>类型，需要<code>#include&lt;inttypes.h&gt;</code> 或<code>#include&lt;stdint.h&gt;</code></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>数组名,数组首地址,a,&amp;a,&amp;a[0]</title>
    <url>//posts/201613/</url>
    <content><![CDATA[<p>(1)指针数组: 是数组,但数组中的每个元素都是指针</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> *p[<span class="number">5</span>];<span class="comment">//如p[2]是指针,可*p[ 2]=3;</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>
<p>(2)指向数组的指针: 是个指针,但它指向的是一个数组</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> (*p)[<span class="number">5</span>];<span class="comment">//与前一行比较,*p相当于a,即p=&amp;a;就像:int m;int *pm;//*pm就相当于m.pm=&amp;m;</span></span><br><span class="line">p= &amp;a;<span class="comment">//可与前一行合并为int (*p)[5]=&amp;a; </span></span><br></pre></td></tr></table></figure>
<p>a代表这个数组，它是一个指针，指向第一个元素<br>这里一定要记住，a是数组名，&amp;a代表的不是取a这个变量的地址，而是取数组元素的地址</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">a     的类型是 <span class="type">int</span>[<span class="number">5</span>]       数组</span><br><span class="line">&amp;a    的类型是 <span class="type">int</span>(*)[<span class="number">5</span>]    指针——指向<span class="type">int</span>[<span class="number">5</span>]数组的指针</span><br><span class="line">&amp;a[<span class="number">0</span>] 的类型是 <span class="type">int</span> *         指针——指向<span class="type">int</span>类型的指针。</span><br><span class="line"><span class="keyword">sizeof</span>(a)=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">sizeof</span>(*a)=<span class="number">4</span>; 因为有取值符*，表示把a当成一个指针(<span class="type">int</span>*)，而a指向数组的首地址，</span><br><span class="line">                        即a=&amp;(a[<span class="number">0</span>])，即<span class="keyword">sizeof</span>(*a)=<span class="keyword">sizeof</span>(*&amp;(a[<span class="number">0</span>]))=<span class="keyword">sizeof</span>(a[<span class="number">0</span>])=<span class="keyword">sizeof</span>(<span class="type">int</span>)=<span class="number">4</span>。</span><br><span class="line"><span class="keyword">sizeof</span>(*&amp;a)=<span class="number">20</span>;<span class="comment">//因为p=&amp;a,所以=sizeof(*p),而*p=a,所以=sizeof(a)=20;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">5</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>&#125;;</span><br><span class="line"><span class="type">int</span> *ptr=(<span class="type">int</span> *)(&amp;a+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,%d&quot;</span>,*(a+<span class="number">1</span>),*(ptr<span class="number">-1</span>));<span class="comment">//输出：2,5</span></span><br></pre></td></tr></table></figure>
<p>指针加1要根据指针类型加上一定的值，不同类型的指针+1之后增加的大小不同,指针只是一个内存地址,但指针指向地址的长度可能不同,如<code>char *pc</code>与<code>int *pi</code>,<code>sizeof(pc)=sizeof(pi)=4</code>,但为什么输出时,<code>cout&lt;&lt;*pc</code>只从内存处取一个字符,而<code>cout&lt;&lt;*pi</code>则从内存处取4个字符,这是由指针类型<code>(char,int)</code>决定的.<strong>对<code>A* p;p+1=(A*)</code>(p的地址值+sizeof(A)),如<code>pc+1=pc+sizeof(char)=(char*)</code>(pc的地址值+1个字节),而<code>pi+1=pi+sizeof(int)=(int*)</code>(pi的地址值+4个字节).</strong></p>
<p><strong>对代码中的<code>&amp;a+1</code>,<code>&amp;a</code>是数组指针，其类型为<code>int (*)[5]</code>,因为<code>p=&amp;a</code>,也即是p的类型.所以<code>&amp;a+1=&amp;a+sizeof(A)</code>,其中A为int[5]:(把<code>A=int[5]</code>代入<code>A* p</code>,即相当于<code>int(*p)[5])</code>. 所以<code>&amp;a+1=&amp;a</code>的地址值+5<em>4字节,即变为数组a的结束地址的下一个地址(即<code>&amp;a[5]</code>),<code>&amp;a+1</code>仍是<code>int (*)[5]</code>类型,经<code>(int *)(&amp;a+1)</code>强制转化为int</em>,赋值给ptr.后面的<code>ptr-1=ptr-sizeof(int)=ptr</code>的地址值-4个字节,即变为数组a的最后一个元素的地址&amp;a[4],<code>*(ptr-1)</code>即为a[4],故输出为5.<br>而<code>a+1=a+sizeof(int)</code>:(此处a退化为<code>int*</code>,故对于<code>A* p</code>,A为int)&#x3D;a的地址值+4个字节,即是<code>&amp;a[1]</code>,则<code>*(a+1)</code>即a[1],故输出2.</strong><br>又如:</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">double</span> t[]=&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">578</span>, <span class="number">111</span>,<span class="number">90</span>&#125; ;</span><br><span class="line"><span class="type">double</span> *pt= &amp;t[<span class="number">3</span>];<span class="comment">//指向值为111</span></span><br><span class="line"><span class="type">int</span> *ptInt= reinterpret_cast&lt; <span class="type">int</span> * &gt; (pt);</span><br><span class="line"><span class="type">char</span> *ptCh= reinterpret_cast&lt; <span class="type">char</span> * &gt; (pt);</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt; *( pt- <span class="number">1</span>)&lt;&lt; <span class="string">&quot;\t&quot;</span>&lt;&lt; *(reinterpret_cast&lt;<span class="type">double</span>*&gt;(ptInt<span class="number">-2</span>))&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;</span><br><span class="line">*(reinterpret_cast&lt;<span class="type">double</span>*&gt;(ptCh<span class="number">-8</span>));<span class="comment">//最后输出结果全为578 </span></span><br></pre></td></tr></table></figure>
<p><code>void Fun( int *p)</code>与<code>void Fun( int p[])</code>是一样的,即函数列表中的数组此时退化成了指针</p>
<p>相关链接：<br><a href="http://blog.sina.cn/dpool/blog/s/blog_9e2e84050101cche.html?vt=4">指针函数与函数指针的区别</a><br><a href="http://m.blog.csdn.net/article/details?id=6704535">数组名,数组首地址,a,&amp;a,&amp;a[0]</a></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>语言</category>
        <category>C++</category>
      </categories>
      <tags>
        <tag>C++</tag>
      </tags>
  </entry>
  <entry>
    <title>2016年秋季中兴校招笔试题</title>
    <url>//posts/201614/</url>
    <content><![CDATA[<p>我报的是C++软件开发岗<br>有20个单选题，题目涉及软件开发设计，全是凭直觉选的，题目都是与软件的设计方案啥的有关<br>然后是两道编程题</p>
<span id="more"></span>
<p>一个是打印*号问题<br>输入一个数，在标准输出里打印一系列字符串，例如输入4<br>打印</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2*3</span><br><span class="line">4*5*6</span><br><span class="line">7*8*9*10</span><br><span class="line">7*8*9*10</span><br><span class="line">4*5*6</span><br><span class="line">2*3</span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">printNums</span><span class="params">(<span class="type">int</span> num)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (num &lt; <span class="number">0</span> || num &gt; <span class="number">100</span>)</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	<span class="type">int</span> count = <span class="number">0</span>;</span><br><span class="line">	std::vector&lt;std::string&gt; res;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; num; ++i)</span><br><span class="line">	&#123;</span><br><span class="line">		std::string temp;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">size_t</span> j = <span class="number">0</span>; j &lt;= i; ++j)</span><br><span class="line">		&#123;</span><br><span class="line">			++count;</span><br><span class="line">			<span class="keyword">if</span> (j == <span class="number">0</span>)</span><br><span class="line">				temp = std::<span class="built_in">to_string</span>(count);</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">				temp += <span class="string">&quot;*&quot;</span> +  std::<span class="built_in">to_string</span>(count);</span><br><span class="line">		&#125;</span><br><span class="line">		res.<span class="built_in">push_back</span>(temp);</span><br><span class="line">		temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; number : res)</span><br><span class="line">		std::cout &lt;&lt; number &lt;&lt; std::endl;</span><br><span class="line">	<span class="comment">//for (size_t i = res.size() - 1; i &gt;= 0; --i)</span></span><br><span class="line">	std::vector&lt;std::string&gt;::reverse_iterator rit = res.<span class="built_in">rbegin</span>();</span><br><span class="line">	<span class="keyword">for</span> (; rit != res.<span class="built_in">rend</span>();++rit)</span><br><span class="line">		std::cout &lt;&lt; *rit &lt;&lt; std::endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>一个是FIFO的页数问题,统计未选中的总数，例如输入一个数组{1,2,3,1,2,1}，FIFO缓冲大小为2，打印5<br>分析：<br>缓冲依次为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 *</span><br><span class="line">1,2 *</span><br><span class="line">2,3 *</span><br><span class="line">3,1 *</span><br><span class="line">1,2 *</span><br><span class="line">1.2</span><br></pre></td></tr></table></figure>
<p>标星表明在缓冲中没找到对应的数，因为缓冲大小为2，所以最多容纳2个数，来一个数先查找是否在缓冲里，如果在，则表明选中，不在就放入缓冲，同时需要保证缓冲大小为2，弹出最先进队列的数<br>参考代码，没考虑复杂度</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">findNum</span><span class="params">(std::deque&lt;<span class="type">int</span>&gt;&amp; deq, <span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="function"><span class="type">bool</span> <span class="title">res</span><span class="params">(<span class="literal">false</span>)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; num : deq)</span><br><span class="line">		<span class="keyword">if</span> (num == k)</span><br><span class="line">			res = <span class="literal">true</span>;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">countFIFO</span><span class="params">(<span class="type">size_t</span> max_cache_size, std::vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (nums.<span class="built_in">size</span>() &lt;= <span class="number">0</span> || max_cache_size &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	std::deque&lt;<span class="type">int</span>&gt; deq;</span><br><span class="line">	<span class="function"><span class="type">int</span> <span class="title">count</span><span class="params">(<span class="number">0</span>)</span></span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span>&amp; num : nums)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (!<span class="built_in">findNum</span>(deq, num)) &#123; ++count; deq.<span class="built_in">push_back</span>(num); &#125;</span><br><span class="line">		<span class="keyword">if</span> (deq.<span class="built_in">size</span>() &gt; max_cache_size)</span><br><span class="line">		&#123;</span><br><span class="line">			deq.<span class="built_in">pop_front</span>();</span><br><span class="line">			deq.<span class="built_in">push_back</span>(num);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>随记</category>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>算法题--股神</title>
    <url>//posts/201615/</url>
    <content><![CDATA[<p><strong>题目描述：</strong><br>有股神吗？<br>有，小赛就是！<br>经过严密的计算，小赛买了一支股票，他知道从他买股票的那天开始，股票会有以下变化：第一天不变，以后涨一天，跌一天，涨两天，跌一天，涨三天，跌一天…依此类推。<br>为方便计算，假设每次涨和跌皆为1，股票初始单价也为1，请计算买股票的第n天每股股票值多少钱？</p>
<span id="more"></span>

<table>
<thead>
<tr>
<th align="center">输入</th>
<th align="center">输出</th>
</tr>
</thead>
<tbody><tr>
<td align="center">输入包括多组数据; 每行输入一个n，1&lt;&#x3D;n&lt;&#x3D;10^9</td>
<td align="center">请输出他每股股票多少钱，对于每组数据，输出一行</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">样例输入</th>
<th align="center">样例输出</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">1</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">2</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">3</td>
</tr>
</tbody></table>
<p><strong>分析：</strong><br>&emsp;&emsp;根据输入要求，输入的数量级为10^9，如果按照基本思路，给一个循环加加减减运行效率很低，最好不要这样做，可以先找规律，我们可以推导规律，<br>股票总额为第一天为1， 第二天为1+1，第三天为1+1-1，第四天为1+1-1+1，第五天为1+1-1+1+1…，这么分析容易造成混乱，我们再来分析<br>&emsp;&emsp;题目描述，第一天不变，以后涨一天，跌一天，涨两天，跌一天，涨三天，跌一天…<br>也就是说，涨和跌有个周期，第一天单独考虑 第一个涨跌为1-1，第二个涨跌为2-1，第三个涨跌为3-1，第k个涨跌为k-1…涨和跌实际上都占有一个天数，第k个涨跌总共所需天数为(k+1)(k+2)&#x2F;2，现在输入为n天，我们可以求出这是第几个涨跌周期，判断n天是属于第k-1个涨跌(k(k+1)&#x2F;2)和第k个涨跌之前((k+1)(k+2)&#x2F;2)，求出这个k，我们就知道它属于哪个涨跌周期，最后股票总额&#x3D;第k-1个涨跌周期股票总额(k(k-1)&#x2F;2-k)+n天与第k-1个涨跌周期天数之差(n-(k(k+1)&#x2F;2)+2)，得出公式股票总额sum &#x3D; n + 2 - 2*k</p>
<p><strong>代码如下：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> args, <span class="type">char</span>** argv)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span> (<span class="built_in">std</span>::<span class="built_in">cin</span> &gt;&gt; n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> i = <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">for</span> (; i &lt; n; ++i)</span><br><span class="line">		&#123;</span><br><span class="line">		    <span class="comment">//第k-1个涨跌周期所需天数</span></span><br><span class="line">			<span class="type">int</span> first = i * (i + <span class="number">1</span>)/<span class="number">2</span>;</span><br><span class="line">			<span class="comment">//第k个涨跌周期所需天数</span></span><br><span class="line">			<span class="type">int</span> second = (i + <span class="number">1</span>) * (i + <span class="number">2</span>)/<span class="number">2</span>;</span><br><span class="line">			<span class="keyword">if</span> (n &gt;= first &amp;&amp; n &lt; second)</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> sum = n + <span class="number">2</span> - <span class="number">2</span> * i;</span><br><span class="line">		<span class="built_in">std</span>::<span class="built_in">cout</span> &lt;&lt; sum &lt;&lt; <span class="built_in">std</span>::<span class="built_in">endl</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>开发</category>
        <category>语言</category>
        <category>C++</category>
      </categories>
  </entry>
  <entry>
    <title>Sublime Text 3 Plugins</title>
    <url>//posts/201616/</url>
    <content><![CDATA[<p>本文旨在记录coding期间，经常使用的sublime text 3插件或小功能, 会不定时更新</p>
<h3 id="插件"><a href="#插件" class="headerlink" title="插件"></a><strong>插件</strong></h3><ol>
<li><p><a href="https://packagecontrol.io/installation">Package Control</a>, 管理很多其他的包</p>
</li>
<li><p><a href="https://github.com/saadq/Materialize">Materialize</a>, 挺好看的一个主题</p>
</li>
<li><p><a href="https://github.com/saadq/Materialize-Appbar">Materialize - Appbar</a>, 更换主题标题栏的插件</p>
</li>
<li><p><a href="https://github.com/SublimeText-Markdown/MarkdownEditing">MarkdownEditing</a>, MarkDown编辑插件</p>
</li>
</ol>
<span id="more"></span>
<ol start="5">
<li><p><a href="https://github.com/timonwong/OmniMarkupPreviewer">OmniMarkupPreviewer</a>, MarkDown文件预览插件，<strong>极力推荐</strong>，省去导出为PDF(一般MD编辑工具这项功能都收费) ，可以直接将渲染的文本生成HTML，浏览器直接打开即可</p>
</li>
<li><p><a href="https://github.com/thenewvu/SublimeCMakeEditor">SublimeCMakeEditor</a>, 一个CMakeLists编辑插件，可通过<code>Package Control</code>安装， 可以设置<code>F1</code>快捷键，将光标放在语法名上，按下<code>F1</code>查看命令使用说明，支持CMakeLists语法高亮</p>
</li>
<li><p><a href="https://github.com/guillermooo/Vintageous">Vintageous</a>, Vintageous是Sublime Text 3上的Vi&#x2F;Vim小插件.</p>
</li>
</ol>
<h3 id="Sublime小功能"><a href="#Sublime小功能" class="headerlink" title="Sublime小功能"></a><strong>Sublime小功能</strong></h3><p><strong>Sublime Text多行编辑运用</strong>：<br>可以利用Sublime Text的多行编辑功能删除掉行首的序号，在Sublime Text中打开或者粘贴你想清理的代码，然后选中所有行或选中多行，按下Ctrl(Command) + Shift + L，可以同时编辑这些行，用左右方向键把光标移动到行首，然后按下 Delete键 或者 Backspace退格键 来删除行号</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
  </entry>
  <entry>
    <title>Cocos2dx中调用Android摄像头</title>
    <url>//posts/201617/</url>
    <content><![CDATA[<p>前言：因项目需求，需要在Cocos2dx中调用Android摄像头，但Cocos2dx中自身并没有API可调用，于是产生了这篇博文，这应该是我第一篇正式写博文，如有问题，请大家多多指教	</p>
<p>另外，Android开发有两种常用IDE，Eclipse和Android Studio，其实两种IDE调用Android Camera都差不多，本文采用Android Studio作介绍</p>
<p>   实际上，调用Android有很多种方式，我使用的主要有两种：</p>
<blockquote>
<ul>
<li>使用OpenCV Native Camera Library 来调用Android摄像头</li>
<li>使用Vuforia SDK 来调用Android摄像头</li>
</ul>
</blockquote>
<p>上面两种方式都是基于第三方库来实现的，你也可以直接使用Android Camera API去实现，先说说两种调用方式的优缺点，</p>
<span id="more"></span>
<p>   第一种方式：OpenCV方式不支持Android SDK Version &gt; 5.0， 也就是说仅支持Android 5.0以前的版本，但是这种方式尤为简单，代码量很少就可以实现</p>
<p>   第二种方式：Vuforia方式支持的版本就很多，目前最新的Android版本都支持，但是改动太过复杂，而且容易产生多线程的问题，所以要小心又小心</p>
<p>   接下来，写写自己的实现步骤</p>
<h3 id="采用Vuforia-SDK"><a href="#采用Vuforia-SDK" class="headerlink" title="采用Vuforia SDK"></a>采用Vuforia SDK</h3><p>新建一个Cocos2dx工程cpp-vuforia-camera，文件目录为<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/Cocos2dxProjectDir.webp"></p>
<p>将工程目录下的AS工程导入到Android Studio后，文件目录为<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/ASProjectsDir.webp"><br>重点关注上图中红框里的内容</p>
<p>在工程中，先导入Vuforia.jar，这样才能在java层调用Vuforia API<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddVuforiaJar.webp"><br>在上图1号红框中，build.gradle文件中添加下面Vuforia三个全局宏定义，根据你自己的Vuforia去修改</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">def VUFORIA_SDK_ROOT = &quot;E:\\Libraries\\vuforia-sdk-android-5-5-9&quot;</span><br><span class="line">def VUFORIA_NATIVE_LIB = &quot;build\\lib&quot;</span><br><span class="line">def VUFORIA_JAR = &quot;build/java/vuforia&quot;</span><br></pre></td></tr></table></figure>
<p>在dependencies里添加下面一行<br>    compile files(“$VUFORIA_SDK_ROOT&#x2F;$VUFORIA_JAR&#x2F;Vuforia.jar”);</p>
<p>最后对gradle进行sync now，同步一下，就会产生形成上图红框2的Vuforia.jar</p>
<p>在该build.gradle同级目录的AndroidManifest.xml添加相机访问权限</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">     The application requires a camera.</span><br><span class="line"></span><br><span class="line">     NOTE: Any application that requests the CAMERA permission but does not</span><br><span class="line">     declare any camera features with the &lt;uses-feature&gt; element will be</span><br><span class="line">     assumed to use all camera features (auto-focus and flash). Thus, the</span><br><span class="line">     application will not be compatible with devices that do not support</span><br><span class="line">     all camera features. Please use &lt;uses-feature&gt; to declare only the</span><br><span class="line">     camera features that your application does need. For instance, if you</span><br><span class="line">     request the CAMERA permission, but you do not need auto-focus or</span><br><span class="line">     flash, then declare only the android.hardware.camera feature. The</span><br><span class="line">     other camera features that you do not request will no longer be</span><br><span class="line">     assumed as required.</span><br><span class="line">--&gt;</span><br><span class="line">&lt;user-feature android:name=&quot;android.hardware.camera2&quot;/&gt;</span><br><span class="line">&lt;!--Add this permission to get access to the camera.--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt;</span><br><span class="line">&lt;!--Add this permission to allow opening network sockets.--&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;</span><br><span class="line">&lt;!-- Add this permission to check which network access properties (e.g.</span><br><span class="line">    active type: 3G/WiFi). --&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.ACCESS_NETWORK_STATE&quot; /&gt;</span><br><span class="line">&lt;uses-permission android:name=&quot;android.permission.READ_EXTERNAL_STORAGE&quot;/&gt;</span><br><span class="line">&lt;uses-feature android:name=&quot;android.hardware.camera.front&quot; android:required=&quot;false&quot; /&gt;</span><br></pre></td></tr></table></figure>

<p>接下来，添加Vuforia访问相机的API，Vuforia官方源码里提供一种访问相机机制，我们可拿来直接使用，不过还是需要Vuforia秘钥来进行初始化，可以注册个Vuforia账号来获取</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddVuforiaInterface.webp"></p>
<p>添加Vuforia的接口之后的目录如上图红方框1所示<br>注释掉SampleApplicationControl.java文件里除onInitARDone和onVuforiaUpdate方法之外的其他方法</p>
<p>在SampleApplicationSession.java中有该接口的调用，自然要注释掉上面已注释的方法的实现，同时还要注释掉R包，getInitializationErrorString该方法调用了R包里的一些字符串信息，自己修改返回的字符串信息即可，还有一些其他的修改我在这里就不详细说了，只需将对应的track部分都注释掉就行了，重点关注SampleApplicationSession文件，因为我是在native层进行update回调的，所以在onPostExecute方法里，执行的是native Callback，这三个修改好的文件可以在我的github仓库里clone:<br><a href="https://github.com/2015winter/MarkDownImages/tree/master/C/Cocos2dx-Camera/VuforiaSamplesApplicationPackage"></a></p>
<p>交给native层处理的有三个函数：</p>
<blockquote>
<ul>
<li>private native void startNativeCamera();	&#x2F;&#x2F;启动摄像头</li>
<li>private native void stopNativeCamera();		&#x2F;&#x2F;释放摄像头</li>
<li>private native void onVuforiaInitializedNative();	&#x2F;&#x2F;注册回调</li>
</ul>
</blockquote>
<p>native层的先放着，先来处理java层，在java层里，Activity实际逻辑是在上图2号红框Cocos2dxActivity.java文件里，而并非在org.cocos2dx.cpp包下的AppActivity.java文件里<br>使用Cocos2dxActivity实现Vuforia的SampleApplicationControl接口，并实现该接口的onInitARDone和onVuforiaUpdate方法</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> SampleApplicationSession vuforiaAppSession;</span><br><span class="line"><span class="comment">/** Native function to initialize the application. */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title function_">initApplicationNative</span><span class="params">()</span>;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onInitARDone</span><span class="params">(SampleApplicationException exception)</span></span><br><span class="line">&#123;</span><br><span class="line">    initApplicationNative();</span><br><span class="line">    <span class="keyword">if</span> (exception == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            vuforiaAppSession.startAR(CameraDevice.CAMERA_DIRECTION.CAMERA_DIRECTION_FRONT);</span><br><span class="line">          <span class="comment">//  Log.e(&quot;myErr&quot;,&quot;startAR&quot;);</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (SampleApplicationException e)</span><br><span class="line">        &#123;</span><br><span class="line">            Log.e(<span class="string">&quot;myErr&quot;</span>, e.getString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">result</span> <span class="operator">=</span> CameraDevice.getInstance().setFocusMode(</span><br><span class="line">                CameraDevice.FOCUS_MODE.FOCUS_MODE_CONTINUOUSAUTO);</span><br><span class="line">        <span class="keyword">if</span> (result);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            Log.e(<span class="string">&quot;myErr&quot;</span>, <span class="string">&quot;Unable to enable continuous autofocus&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        Log.e(<span class="string">&quot;myErr&quot;</span>, exception.getString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onVuforiaUpdate</span><span class="params">(State state)</span> </span><br><span class="line">&#123;</span><br><span class="line">   Log.e(<span class="string">&quot;myErr&quot;</span>, <span class="string">&quot;update!&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重载完了这两个方法后，此时Cocos2dxActivity和Vuforia的运行还是完全分开的，接下来在onCreate回调里对Vuforia初始化</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">        <span class="comment">//vuforia</span></span><br><span class="line">        vuforiaAppSession = <span class="keyword">new</span> <span class="title class_">SampleApplicationSession</span>(<span class="built_in">this</span>);</span><br><span class="line"><span class="comment">//        vuforiaAppSession</span></span><br><span class="line"><span class="comment">//                .initAR(this, ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);</span></span><br><span class="line">        vuforiaAppSession.initAR(<span class="built_in">this</span>, ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);</span><br></pre></td></tr></table></figure>
<p>到这步，java层的修改基本结束了，可以运行测试一下，会出现闪退，而且没有log错误信息，这是因为我们刚刚用到的native方法还没有实现，接下来，就涉及native层<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/NativeActivity.webp"></p>
<p>jni交互的地方可以在上图红框处找到，目录实际为${ProJect_Root}&#x2F;cocos2d&#x2F;cocos&#x2F;platform&#x2F;android&#x2F;，<br>Project_Root为你的项目目录，本例中名称为cpp-vuforia-camera，在该目录下写你的native方法的实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Vuforia_updateCallback</span> :</span> public Vuforia::UpdateCallback</span><br><span class="line">   &#123;</span><br><span class="line">       virtual <span class="type">void</span> <span class="title function_">Vuforia_onUpdate</span><span class="params">(Vuforia::State&amp; state)</span></span><br><span class="line">       &#123;</span><br><span class="line">           LOGE(<span class="string">&quot;Vuforia_onUpdateNative!&quot;</span>);</span><br><span class="line">           Vuforia::Image *imageRGB888 = <span class="literal">NULL</span>;</span><br><span class="line">           Vuforia::Image* imageGRAY = <span class="literal">NULL</span>;</span><br><span class="line">           Vuforia::Frame frame = state.getFrame();</span><br><span class="line">           <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; frame.getNumImages(); ++i) &#123;</span><br><span class="line">               <span class="type">const</span> Vuforia::Image *image = frame.getImage(i);</span><br><span class="line">               <span class="keyword">if</span> (image-&gt;getFormat() == Vuforia::RGB888) &#123;</span><br><span class="line">                   imageRGB888 = (Vuforia::Image*)image;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span>(image-&gt;getFormat() == Vuforia::GRAYSCALE)&#123;</span><br><span class="line">                   imageGRAY = (Vuforia::Image*)image;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (imageRGB888) &#123;</span><br><span class="line">               JNIEnv* env = <span class="number">0</span>;</span><br><span class="line">               <span class="keyword">if</span> ((JniHelper::getJavaVM() != <span class="number">0</span>) &amp;&amp; (activityObj != <span class="number">0</span>)</span><br><span class="line">                   &amp;&amp;(JniHelper::getJavaVM()-&gt;GetEnv((<span class="type">void</span>**)&amp;env, JNI_VERSION_1_4) == JNI_OK)</span><br><span class="line">                   ) &#123;</span><br><span class="line">                   <span class="comment">// JNIEnv* env = JniHelper::getEnv();</span></span><br><span class="line">                   <span class="type">const</span> <span class="type">short</span>* pixels = (<span class="type">const</span> <span class="type">short</span>*) imageRGB888-&gt;getPixels();</span><br><span class="line">                   <span class="type">int</span> width = imageRGB888-&gt;getWidth();</span><br><span class="line">                   <span class="type">int</span> height = imageRGB888-&gt;getHeight();</span><br><span class="line">                   <span class="type">int</span> numPixels = width * height;</span><br><span class="line">                   jbyteArray pixelArray = env-&gt;NewByteArray(numPixels * <span class="number">3</span>);</span><br><span class="line">                   env-&gt;SetByteArrayRegion(pixelArray, <span class="number">0</span>, numPixels * <span class="number">3</span>, (<span class="type">const</span> jbyte*) pixels);</span><br><span class="line">                   cv::Mat temp3Channel = cv::Mat(imageRGB888-&gt;getHeight(), imageRGB888-&gt;getWidth(), CV_8UC3, (<span class="type">unsigned</span> <span class="type">char</span> *)imageRGB888-&gt;getPixels());</span><br><span class="line">           pthread_mutex_lock(&amp;mutex);</span><br><span class="line">                   channel3Mat = temp3Channel.clone();</span><br><span class="line">           pthread_mutex_unlock(&amp;mutex);</span><br><span class="line">                   <span class="comment">// imageBuffer = (char*)env-&gt;NewGlobalRef(pixelArray);</span></span><br><span class="line">                   jclass javaClass = env-&gt;GetObjectClass(activityObj);</span><br><span class="line">                   env-&gt;DeleteLocalRef(pixelArray);</span><br><span class="line">                   <span class="comment">// if (channel2Mat.data == NULL)</span></span><br><span class="line">                       <span class="comment">// LOGE(&quot;channel2Mat is NULL&quot;);</span></span><br><span class="line">                   <span class="comment">// else</span></span><br><span class="line">                   <span class="comment">//     LOGE(&quot;channel2Mat get it!&quot;);</span></span><br><span class="line">                   <span class="comment">// JniHelper::getJavaVM()-&gt;DetachCurrentThread();</span></span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">               <span class="keyword">else</span> <span class="keyword">if</span> (imageGRAY) &#123;</span><br><span class="line">               JNIEnv* env = <span class="number">0</span>;</span><br><span class="line">               <span class="comment">// JniHelper::getJavaVM()-&gt;AttachCurrentThread((void**)&amp;env, NULL);</span></span><br><span class="line">               <span class="keyword">if</span> ((JniHelper::getJavaVM() != <span class="number">0</span>) &amp;&amp; (activityObj != <span class="number">0</span>)</span><br><span class="line">                   &amp;&amp;(JniHelper::getJavaVM()-&gt;GetEnv((<span class="type">void</span>**)&amp;env, JNI_VERSION_1_4) == JNI_OK)</span><br><span class="line">                   ) &#123;</span><br><span class="line">                   <span class="comment">// JNIEnv* env = JniHelper::getEnv();</span></span><br><span class="line">                   <span class="type">const</span> <span class="type">short</span>* pixels = (<span class="type">const</span> <span class="type">short</span>*) imageGRAY-&gt;getPixels();</span><br><span class="line">                   <span class="type">int</span> width = imageGRAY-&gt;getWidth();</span><br><span class="line">                   <span class="type">int</span> height = imageGRAY-&gt;getHeight();</span><br><span class="line">                   <span class="type">int</span> numPixels = width * height;</span><br><span class="line">                   jbyteArray pixelArray = env-&gt;NewByteArray(numPixels * <span class="number">1</span>);</span><br><span class="line">                   env-&gt;SetByteArrayRegion(pixelArray, <span class="number">0</span>, numPixels * <span class="number">1</span>, (<span class="type">const</span> jbyte*) pixels);</span><br><span class="line">                   cv::Mat gray_frame = cv::Mat(<span class="number">480</span>, <span class="number">640</span>, CV_8UC1, (<span class="type">unsigned</span> <span class="type">char</span>*)pixels, <span class="number">0</span>);</span><br><span class="line">                   <span class="comment">// cv::Mat mat = cv::Mat(imageRGB888-&gt;getHeight(), imageRGB888-&gt;getWidth(), CV_8UC1, (unsigned char *)imageRGB888-&gt;getPixels());</span></span><br><span class="line">                   cv::Mat tempGray = cv::Mat(imageGRAY-&gt;getHeight(), imageGRAY-&gt;getWidth(), CV_8UC1, (<span class="type">unsigned</span> <span class="type">char</span> *)imageGRAY-&gt;getPixels());</span><br><span class="line">           pthread_mutex_lock(&amp;mutex);</span><br><span class="line">                   <span class="comment">// cv::cvtColor(temp3Channel, grayMat, CV_RGB2GRAY);</span></span><br><span class="line">                   grayMat = gray_frame;</span><br><span class="line">                   <span class="comment">// imageBuffer = (char *)env-&gt;GetByteArrayElements(pixelArray, 0);</span></span><br><span class="line">           pthread_mutex_unlock(&amp;mutex);</span><br><span class="line">                   jclass javaClass = env-&gt;GetObjectClass(activityObj);</span><br><span class="line">                   env-&gt;DeleteLocalRef(pixelArray);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Vuforia_updateCallback updateCallback;</span><br><span class="line">   JNIEXPORT <span class="type">void</span> JNICALL  <span class="title function_">Java_com_vuforia_samples_SampleApplication_SampleApplicationSession_onVuforiaInitializedNative</span><span class="params">(JNIEnv * env, jobject)</span></span><br><span class="line">   &#123;</span><br><span class="line">   	LOGE(<span class="string">&quot;onVuforiaInitalizeNative!&quot;</span>);</span><br><span class="line">       <span class="comment">// Register the update callback where we handle the data set swap:</span></span><br><span class="line">       Vuforia::registerCallback(&amp;updateCallback);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">JNIEXPORT <span class="type">void</span> JNICALL <span class="title function_">Java_org_cocos2dx_lib_Cocos2dxActivity_initApplicationNative</span><span class="params">(JNIEnv* env, jobject obj)</span></span><br><span class="line">   &#123;</span><br><span class="line">       activityObj = env-&gt;NewGlobalRef(obj);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">JNIEXPORT <span class="type">void</span> JNICALL <span class="title function_">Java_com_vuforia_samples_SampleApplication_SampleApplicationSession_startNativeCamera</span><span class="params">(JNIEnv *, jobject, jint camera)</span></span><br><span class="line">   &#123;</span><br><span class="line">       LOGE(<span class="string">&quot;Java_com_qualcomm_QCARSamples_ImageTargets_ImageTargets_startCamera&quot;</span>);</span><br><span class="line">       <span class="comment">// Start the camera:</span></span><br><span class="line">       <span class="keyword">if</span> (!Vuforia::CameraDevice::getInstance().start())</span><br><span class="line">           <span class="keyword">return</span>;</span><br><span class="line">       Vuforia::setFrameFormat(Vuforia::RGB888, <span class="literal">true</span>);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">JNIEXPORT <span class="type">void</span> JNICALL <span class="title function_">Java_com_vuforia_samples_SampleApplication_SampleApplicationSession_stopNativeCamera</span><span class="params">(JNIEnv *, jobject)</span></span><br><span class="line">    &#123;</span><br><span class="line">        LOGE(<span class="string">&quot;Java_com_vuforia_samples_ImageTargets_ImageTargets_stopCamera&quot;</span>);</span><br><span class="line">        Vuforia::CameraDevice::getInstance().stop();</span><br><span class="line">        Vuforia::CameraDevice::getInstance().deinit();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>上述代码存放在<a href="https://github.com/2015winter/MarkDownImages/blob/master/C/Cocos2dx-Camera/VuforiaSamplesApplicationPackage/javaactivity-android.cpp"></a></p>
<p>当然这里会用到Vuforia 和OpenCV的头文件，需要在 当前目录下的Android .mk里添加头文件索引目录，因为该  .mk文件是编译javaactivity-android.cpp的makefile</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line">LOCAL_C_INCLUDES += E:/Libraries/vuforia-sdk-android-5-5-9/build/<span class="keyword">include</span> </span><br><span class="line">LOCAL_C_INCLUDES += E:/Libraries/opencv2410/build/<span class="keyword">include</span></span><br><span class="line">LOCAL_EXPORT_INCLUDES += E:/Libraries/opencv2410/build/<span class="keyword">include</span></span><br></pre></td></tr></table></figure>
<p>添加完毕后，会出现 undefined reference to ‘Vuforia::CameraDevice::getInst<br>ance()’的error，这是为啥了？因为 我们还没使用vuforia的.so文件啊，Android平台上，Vuforia 的方法实现都在 这里面装着了，接下来，我们要做的是，将官方Vuforia的.so库和libopencv_java.so放置在我们的libs目录下<br>这个有很多种方法可以实现，对libopencv_java.so我使用的是通过Cocos2dx自带的build-cfg.json文件复制.so文件到给定目录，为什么这样做了？后面会和libVuforia.so的处理作对比来说明，如下图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/json-cfg.webp"><br>其中：<br>from关键字是相对${Project_Root}&#x2F;proj.android-studio&#x2F;这个路径开始<br>to关键字是相对${Project_Root}&#x2F;proj.android-studio&#x2F;app&#x2F;assets&#x2F;这个路径开始<br>exclude关键字是排除某些文件<br>这是复制libopencv_java.so，然后是libVuforia.so<br>对libVuforia.so的使用我是在jni&#x2F;Android.mk中修改，使其编译时使用</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">LOCAL_MODULE := Vuforia-prebuilt</span><br><span class="line">LOCAL_SRC_FILES := thirdpartylibs/libVuforia.so</span><br><span class="line"><span class="comment">#LOCAL_C_INCLUDES := E:/Libraries/vuforia-sdk-android-5-5-9/build/include</span></span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := E:/Libraries/vuforia-sdk-android-5-5-9/build/<span class="keyword">include</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_SHARED_LIBRARY)</span></span><br></pre></td></tr></table></figure>
<p>为了保证工程的独立性，我把这两个库都放在jni&#x2F;thirdpartyLibs&#x2F; 目录下，对这两个库使用不同的方式，一部分是因为如果我对libopencv_java.so使用同样的方式，会及其影响帧率，至于为什么，我还没深入了解，所以只是以资源文件的形式对其进行复制操作，而Vuforia的.so，编译时需要用到，否则还是报未定义引用的error</p>
<p>这样就成功了？哪有这么简单，在jni&#x2F;Android.mk中添加上述Vuforia模块后，反正出现如下图错误<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddVuforiaModuleError.webp"><br>结果发现是因为添加这个预编译模块<br>LOCAL_STATIC_LIBRARIES +&#x3D; Vuforia-prebuilt<br>错误的写成了LOCAL_STATIC_LIBRARIES :&#x3D; Vuforia-prebuilt<br>添加完后出现了OpenCV的error<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddOpenCVLibErr.webp"><br>这个是OpenCV.mk未添加到编译javaactivity-android.cpp的Android.mk中，也就是目录${ProJect_Root}&#x2F;cocos2d&#x2F;cocos&#x2F;platform&#x2F;android&#x2F;，在该Android.mk的LOCAL_PATH :&#x3D; $(call my-dir)后添加</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">OPENCV_INSTALL_MODULES:=on</span><br><span class="line">OPENCV_CAMERA_MODULES:=off</span><br><span class="line">OPENCV_LIB_TYPE:=STATIC</span><br></pre></td></tr></table></figure>
<p> #下面这个目录是OpenCVforAndroid官方里的makefile文件</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include E:/Libraries/OpenCV-2.4.10-android-sdk/sdk/native/jni/OpenCV.mk </span><br></pre></td></tr></table></figure>
<p>现在应该没报错了,在这里有必要检测一下是否已经得到了camera的mat格式的图片<br>在javaactivity-android.cpp里channel3Mat为输出的RGB模式的Mat图片，因此只需判断该Mat数据是否为空就行了<br>在我的代码里只需注释掉javaactivity-android.cpp文件中125~128行就OK了，然后查看log输出日志<br>如下图所示，输出”channel2Mat get it!”信息<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/TestMatLog.webp"></p>
<p>到这步，就说明Vuforia已经把图传给native层了，但还没传到HelloWorld.cpp文件中啊，这步骤涉及的文件就比较多了，但是每个文件修改不大，只是单纯的修改一两个函数参数，<br>涉及的文件有：<br>$(Project_Root)&#x2F;cocos2d&#x2F;cocos&#x2F;platform&#x2F;android&#x2F;目录下的<br>javaactivity-android.cpp,<br>CCApplication-android.h,<br>CCApplication-android.cpp,<br>和$(Project_Root)&#x2F;cocos2d&#x2F;cocos&#x2F;platform&#x2F;目录下的CCApplicationProtocol.h，<br>以及$(Project_Root)&#x2F;Classes&#x2F;目录下的<br>AppDelegate.h,<br>AppDelegate.cpp,<br>HelloWorldScene.h,<br>HelloWorld.cpp,<br>总共8个文件</p>
<blockquote>
<ul>
<li>javaactivity-android.cpp 中将nativeInit方法里的run()修改为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run(&amp;grayMat, &amp;channel3Mat, &amp;mutex)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>CCApplication-android.h 中修改run()为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run(cv::Mat*, cv::Mat*, pthread_mutex_t*)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>CCApplication-android.cpp 中修改run()以及run方法体里的applicationDidFinishLaunching()分别为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">run(cv::Mat* gray, cv::Mat* mat, pthread_mutex_t* mutex)</span><br><span class="line">applicationDidFinishLaunching(gray, mat, mutex)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>CCApplicationProtocol.h 中修改applicationDidFinishLaunching() &#x3D; 0 为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">applicationDidFinishLaunching(cv::Mat*, cv::Mat*, pthread_mutex_t*) = 0</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>CCApplicationProtocol.h 中添加</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#include &lt;opencv2/opencv.hpp&gt;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>AppDelegate.h中修改applicationDidFinishLaunching()为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">applicationDidFinishLaunching(cv::Mat*, cv::Mat*, pthread_mutex_t*)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>AppDelegate.cpp中修改applicationDidFinishLaunching()以及createScene()分别为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">applicationDidFinishLaunching(cv::Mat* gray, cv::Mat* mat, pthread_mutex_t* mutex), createScene(gray, mat, mutex)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>HelloWorld.h中修改createScene()为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">createScene(cv::Mat*, cv::Mat*, pthread_mutex_t*)</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>HelloWorld.cpp中修改createScene()为</li>
</ul>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">createScene(cv::Mat* gray, cv::Mat* channel3Mat, pthread_mutex_t* mutex)</span><br></pre></td></tr></table></figure>
<p>到此，在Vuforia native层get到的相机捕获图片已经传到了我们熟悉的HelloWorld.cpp中了，形参channel3Mat即为RGB888模式的图片，gray为灰度图，mutex是为防止Vuforia update写Mat数据和Cocos2dx读Mat数据而加的锁，可以在HelloWorld.cpp中输出Log信息测试一下, 在HelloWorld.h中，HelloWorld类下重载update方法，添加 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">void update(float dt);</span><br></pre></td></tr></table></figure>
<p>如下图所示, 需要添加两个静态Mat指针, 用来接收传过来的指向存有Mat图像数据的指针<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddUpdateFunc.webp"><br>然后在HelloWorld.cpp里添加下面代码，对变量初始化</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">pthread_mutex_t</span>* mutex1 = <span class="literal">NULL</span>;</span><br><span class="line">cv::Mat* HelloWorld::drawing_frame = <span class="literal">NULL</span>;</span><br><span class="line">cv::Mat* HelloWorld::grayImage = <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure>
<p>然后开始在createScene方法体里添加下面代码，以进行接收传来的图片数据</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">grayImage = gray;</span><br><span class="line">drawing_frame = channel3Mat;</span><br><span class="line">mutex1 = mutex;</span><br></pre></td></tr></table></figure>
<p>如下图所示<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AcceptImage.webp"></p>
<p>在update方法体里对获得的数据进行测试，判断是否有得到图片数据</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/VuforiaCaptureCamera.webp"></p>
<h3 id="本例源码下载"><a href="#本例源码下载" class="headerlink" title="本例源码下载"></a><a href="https://github.com/2015winter/cpp-vuforia-camera">本例源码下载</a></h3><h3 id="使用OpenCV-VideoCapture类捕获摄像头图片"><a href="#使用OpenCV-VideoCapture类捕获摄像头图片" class="headerlink" title="使用OpenCV VideoCapture类捕获摄像头图片"></a>使用OpenCV VideoCapture类捕获摄像头图片</h3><p>说明：再次强调, 这种方法只适用于Android 5.0之前的版本, 所以对于现在高版本的Android机, 都不适用</p>
<p>同样是新建工程, 导入AS中, 先编译一遍, 同样是HelloWorld的显示界面<br>需要修改的文件有:<br>HelloWorld.h<br>HelloWorld.cpp<br>$(Project_Root)&#x2F;proj.android-studio&#x2F;app&#x2F;AndroidManifest.xml<br>$(Project_Root)&#x2F;proj.android-studio&#x2F;app&#x2F;jni&#x2F;Android.mk<br>$(Project_Root)&#x2F;proj.android-studio&#x2F;build.json</p>
<blockquote>
<ul>
<li>HelloWorld.h的类成员中添加</li>
</ul>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//add includes before adding the following codes and after #include &quot;cocos2d.h&quot;</span></span><br><span class="line"><span class="comment">//#include &lt;opencv/core/core.h&gt;</span></span><br><span class="line"><span class="comment">//#include &lt;opencv2/opencv.hpp&gt;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    cocos2d::Sprite* videoFrame;</span><br><span class="line"><span class="keyword">protected</span>:</span><br><span class="line">	<span class="function"><span class="keyword">virtual</span> <span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">float</span> delta)</span></span>;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">    <span class="function">cv::Size <span class="title">calc_optimal_camera_resolution</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* supported, <span class="type">int</span> width, <span class="type">int</span> height)</span></span>;</span><br><span class="line">  	cv::Ptr&lt;cv::VideoCapture&gt; capture;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>HelloWorld.cpp中首先在init()方法中打开摄像头，计算可以获取图像的分辨率</li>
</ul>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>-&gt;capture = <span class="keyword">new</span> cv::<span class="built_in">VideoCapture</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">union</span> &#123;<span class="type">double</span> prop; <span class="type">const</span> <span class="type">char</span>* name;&#125; u;</span><br><span class="line">u.prop = capture-&gt;<span class="built_in">get</span>(CV_CAP_PROP_SUPPORTED_PREVIEW_SIZES_STRING);</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> view_width = visibleSize.width;</span><br><span class="line"><span class="type">int</span> view_height = visibleSize.height;</span><br><span class="line"></span><br><span class="line">cv::Size camera_resolution;</span><br><span class="line"><span class="keyword">if</span> (u.name)</span><br><span class="line">	camera_resolution = <span class="built_in">calc_optimal_camera_resolution</span>(u.name, visibleSize.width, visibleSize.height);<span class="comment">//cv::Size(720,480);</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="built_in">LOGE</span>(<span class="string">&quot;Cannot get supported camera camera_resolutions&quot;</span>);</span><br><span class="line">	camera_resolution = cv::<span class="built_in">Size</span>(visibleSize.width,</span><br><span class="line">		visibleSize.height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((camera_resolution.width != <span class="number">0</span>) &amp;&amp; (camera_resolution.height != <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">set</span>(CV_CAP_PROP_FRAME_WIDTH, camera_resolution.width);</span><br><span class="line">	<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">set</span>(CV_CAP_PROP_FRAME_HEIGHT, camera_resolution.height);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//resolutions of HelloWorld2.png is 1024x768, you can add a image to Resources dir</span></span><br><span class="line">videoFrame = Sprite::<span class="built_in">create</span>(<span class="string">&quot;HelloWorld2.png&quot;</span>);</span><br><span class="line">   <span class="comment">// position the sprite on the center of the screen</span></span><br><span class="line">   videoFrame-&gt;<span class="built_in">setPosition</span>(<span class="built_in">Vec2</span>(visibleSize.width/<span class="number">2</span> + origin.x, visibleSize.height/<span class="number">2</span> + origin.y));</span><br><span class="line">   <span class="comment">// add the sprite as a child to this layer</span></span><br><span class="line">   <span class="keyword">this</span>-&gt;<span class="built_in">addChild</span>(videoFrame, <span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//calc_optimal_camera_resolution方法的实现</span></span><br><span class="line"><span class="function">cv::Size <span class="title">HelloWorld::calc_optimal_camera_resolution</span><span class="params">(<span class="type">const</span> <span class="type">char</span>* supported, <span class="type">int</span> width, <span class="type">int</span> height)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> frame_width = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> frame_height = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="type">size_t</span> prev_idx = <span class="number">0</span>;</span><br><span class="line">	<span class="type">size_t</span> idx = <span class="number">0</span>;</span><br><span class="line">	<span class="type">float</span> min_diff = FLT_MAX;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">do</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> tmp_width;</span><br><span class="line">		<span class="type">int</span> tmp_height;</span><br><span class="line"></span><br><span class="line">		prev_idx = idx;</span><br><span class="line">		<span class="keyword">while</span> ((supported[idx] != <span class="string">&#x27;\0&#x27;</span>) &amp;&amp; (supported[idx] != <span class="string">&#x27;,&#x27;</span>))</span><br><span class="line">			idx++;</span><br><span class="line"></span><br><span class="line">		<span class="built_in">sscanf</span>(&amp;supported[prev_idx], <span class="string">&quot;%dx%d&quot;</span>, &amp;tmp_width, &amp;tmp_height);</span><br><span class="line"></span><br><span class="line">		<span class="type">int</span> w_diff = width - tmp_width;</span><br><span class="line">		<span class="type">int</span> h_diff = height - tmp_height;</span><br><span class="line">		<span class="keyword">if</span> ((h_diff &gt;= <span class="number">0</span>) &amp;&amp; (w_diff &gt;= <span class="number">0</span>))</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span> ((h_diff &lt;= min_diff) &amp;&amp; (tmp_height &lt;= <span class="number">720</span>))</span><br><span class="line">			&#123;</span><br><span class="line">				frame_width = tmp_width;</span><br><span class="line">				frame_height = tmp_height;</span><br><span class="line">				min_diff = h_diff;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		idx++; <span class="comment">// to skip comma symbol</span></span><br><span class="line"></span><br><span class="line">	&#125; <span class="keyword">while</span> (supported[idx - <span class="number">1</span>] != <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> cv::<span class="built_in">Size</span>(frame_width, frame_height);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>之后可以先测试是否有得到摄像头捕获的帧</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//test whether VideoCapture has grabed frame</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">HelloWorld::update</span><span class="params">(<span class="type">float</span> dt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat drawing_frame;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">this</span>-&gt;capture.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">grab</span>())</span><br><span class="line">			<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">retrieve</span>(drawing_frame, CV_CAP_ANDROID_COLOR_FRAME_RGB);</span><br><span class="line">	<span class="keyword">if</span>(	drawing_frame.<span class="built_in">empty</span>())</span><br><span class="line">		<span class="built_in">LOGE</span>(<span class="string">&quot;KONGKONGKONGKONG&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		<span class="built_in">LOGE</span>(<span class="string">&quot;HAHHAHA&quot;</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>AndroidManifest.xml中添加Camera权限</li>
</ul>
</blockquote>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.CAMERA&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera&quot;</span> <span class="attr">android:required</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera.autofocus&quot;</span> <span class="attr">android:required</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera.front&quot;</span> <span class="attr">android:required</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">&quot;android.hardware.camera.front.autofocus&quot;</span> <span class="attr">android:required</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<ul>
<li>Android.mk中在 LOCAL_MODULE :&#x3D; cocos2dcpp_shared 添加OpenCV.mk</li>
</ul>
</blockquote>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line"><span class="comment">#OPENCV_CAMERA_MUDULES :=off</span></span><br><span class="line">OPENCV_INSTALL_MODULES :=off</span><br><span class="line"></span><br><span class="line">OPENCV_LIB_TYPE := SHARED</span><br><span class="line"><span class="keyword">include</span> E:/Libraries/OpenCV-2.4.10-android-sdk/sdk/native/jni/OpenCV.mk</span><br><span class="line"></span><br><span class="line">//LOCAL_C_INCLUDES := <span class="variable">$(LOCAL_PATH)</span>/../../../Classes 下添加</span><br><span class="line">LOCAL_C_INCLUDES += E:/Libraries/opencv2410/build/<span class="keyword">include</span></span><br></pre></td></tr></table></figure>
<p>有木有觉得忘了添加OpenCV的.so文件？<br>最重要的OpenCV Camera模块的实现都在这里, 如下图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/AddOpencvLibs.webp"><br>如何把这个目录下的文件<b>拷贝</b>到libs目录下了？为啥是拷贝，我有测试过在Android.mk中添加</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line">OPENCV_CAMERA_MUDULES :=on</span><br><span class="line">OPENCV_INSTALL_MODULES :=on</span><br></pre></td></tr></table></figure>
<p><b>把OpenCV的一些库安装到Libs目录，但这会极其影响帧率，这可能是把库文件打包到apk里了吧，知道的大神可以交流下</b></p>
<blockquote>
<ul>
<li>build.json文件中同之前Vuforia修改build.json文件几乎一样, 修改copy_resources</li>
</ul>
</blockquote>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="attr">&quot;copy_resources&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../Resources&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;from&quot;</span><span class="punctuation">:</span> <span class="string">&quot;app/jni/thirdpartyLibs&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;to&quot;</span><span class="punctuation">:</span> <span class="string">&quot;../libs/armeabi&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<p>最终的update方法里是这样的</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">HelloWorld::update</span><span class="params">(<span class="type">float</span> dt)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	cv::Mat drawing_frame;</span><br><span class="line">	<span class="keyword">if</span> (!<span class="keyword">this</span>-&gt;capture.<span class="built_in">empty</span>())</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">grab</span>())</span><br><span class="line">			<span class="keyword">this</span>-&gt;capture-&gt;<span class="built_in">retrieve</span>(drawing_frame, CV_CAP_ANDROID_COLOR_FRAME_RGB);<span class="comment">//RGB颜色模式</span></span><br><span class="line">	<span class="keyword">if</span>(	drawing_frame.<span class="built_in">empty</span>())</span><br><span class="line">		<span class="built_in">LOGE</span>(<span class="string">&quot;KONGKONGKONGKONG&quot;</span>);</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">//LOGE(&quot;HAHHAHA&quot;);</span></span><br><span class="line">			<span class="comment">//show image and check for user input</span></span><br><span class="line">			<span class="keyword">auto</span> texture = <span class="keyword">new</span> Texture2D;</span><br><span class="line">			texture-&gt;<span class="built_in">initWithData</span>(drawing_frame.data,</span><br><span class="line">			drawing_frame.<span class="built_in">elemSize</span>() * drawing_frame.cols * drawing_frame.rows,</span><br><span class="line">			Texture2D::PixelFormat::RGB888,</span><br><span class="line">			drawing_frame.cols,</span><br><span class="line">			drawing_frame.rows,</span><br><span class="line">			<span class="built_in">Size</span>(drawing_frame.cols, drawing_frame.rows));</span><br><span class="line">			<span class="keyword">this</span>-&gt;videoFrame-&gt;<span class="built_in">setTexture</span>(texture);</span><br><span class="line">			texture-&gt;<span class="built_in">autorelease</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>最终的效果图：<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Camera/OpenCVCamera.webp"></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
        <tag>Android</tag>
        <tag>OpenCV</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2dx Android.mk</title>
    <url>//posts/201618/</url>
    <content><![CDATA[<p>用之前写过的Android.mk为例（见下面）来讲：</p>
<h3 id="Vuforia-prebuilt模块"><a href="#Vuforia-prebuilt模块" class="headerlink" title="Vuforia-prebuilt模块"></a>Vuforia-prebuilt模块</h3><p>第一个模块Vuforia-prebuilt，是将已经编译好的.so以预编译库的形式添加进该工程，模块名为Vuforia-prebuilt，需要注意的是一个模块只能添加一个.so.<br><strong>LOCAL_EXPORT_C_INCLUDES</strong> 是头文件的路径，包含头文件的路径同时，并导出这个路径，意思就是说，如果有个名为A模块需要以LOCAL_STATIC_LIBRARIES的形式添加这个B模块，A模块就不需要添加这个B模块的include的路径，因为B模块的include路径已经以LOCAL_EXPORT_C_INCLUDES的形式一并导出了</p>
<h3 id="OpenCV-prebuilt模块"><a href="#OpenCV-prebuilt模块" class="headerlink" title="OpenCV-prebuilt模块"></a>OpenCV-prebuilt模块</h3><p>第二个模块OpenCV-prebuilt，同上</p>
<span id="more"></span>
<h3 id="cocos2dcpp-shared模块"><a href="#cocos2dcpp-shared模块" class="headerlink" title="cocos2dcpp_shared模块"></a>cocos2dcpp_shared模块</h3><p>第三个模块cocos2dcpp_shared，这是汇总了其他模块的模块，讲到笔记的重点了，就是import-add-path，这是添加NDK_MODULE_PATH的意思，NDK编译的时候，需要指定的模块路径，当Android.mk中使用**$(call import-module, XXX)<strong>，函数引入外部模块时会用到，用来指示该去哪里找这个文件，比如这个cocos2dcpp_shared中，有个</strong>$(call import-add-path, $(LOCAL_PATH)&#x2F;..&#x2F;..&#x2F;..&#x2F;Classes)**，如果我们在Classes&#x2F;FaceTracker文件下有个Android.mk文件，并且该文件里有个mytrack_static名字的模块，那么我们只需要在当前Android.mk（并非Classes目录下的）文件里的末端加上一句$(call import-module, FaceTracker)，那么它就会在FaceTracker目录(这个目录就是相对Classes目录的)下去找含有mytrack_static模块的Android.mk，并编译。<br>NOTES:当然为了简洁，我在笔记里就直接用相对cocos2d目录来写FaceTracker目录里的模块，也就是最后一句是$(call import-module, ..&#x2F;Classes&#x2F;FaceTracker)而不是$(call import-module, FaceTracker)</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line">LOCAL_PATH := <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line">LOCAL_MODULE := Vuforia-prebuilt</span><br><span class="line">LOCAL_SRC_FILES := thirdpartylibs/libVuforia.so</span><br><span class="line"><span class="comment">#LOCAL_C_INCLUDES := E:/Libraries/vuforia-sdk-android-5-5-9/build/include</span></span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := E:/Libraries/vuforia-sdk-android-5-5-9/build/<span class="keyword">include</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_SHARED_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#include $(CLEAR_VARS)</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE := OpenCV-prebuilt</span></span><br><span class="line"><span class="comment">#LOCAL_SRC_FILES := thirdpartylibs/libopencv_java.so</span></span><br><span class="line"><span class="comment">##LOCAL_EXPORT_C_INCLUDES := E:/Libraries/opencv2410/build/include</span></span><br><span class="line"><span class="comment">#include $(PREBUILT_SHARED_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"><span class="comment">#$(call import-add-path,$(LOCAL_PATH)/../../../Classes)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(LOCAL_PATH)</span>/../../../cocos2d)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(LOCAL_PATH)</span>/../../../cocos2d/external)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(LOCAL_PATH)</span>/../../../cocos2d/cocos)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos2dcpp_shared</span><br><span class="line"></span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2dcpp</span><br><span class="line"></span><br><span class="line">LOCAL_SRC_FILES := hellocpp/main.cpp \</span><br><span class="line">                   ../../../Classes/AppDelegate.cpp \</span><br><span class="line">                   ../../../Classes/HelloWorldScene.cpp</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES := <span class="variable">$(LOCAL_PATH)</span>/../../../Classes \</span><br><span class="line">                                                <span class="variable">$(LOCAL_PATH)</span>../../../Classes/FaceTracker</span><br><span class="line"></span><br><span class="line"><span class="comment"># _COCOS_HEADER_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_HEADER_ANDROID_END</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += mytrack_static</span><br><span class="line">LOCAL_SHARED_LIBRARIES += Vuforia-prebuilt</span><br><span class="line"><span class="comment">#LOCAL_SHARED_LIBRARIES += OpenCV-prebuilt</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># _COCOS_LIB_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_LIB_ANDROID_END</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_SHARED_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,.)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,../Classes/FaceTracker)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># _COCOS_LIB_IMPORT_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_LIB_IMPORT_ANDROID_END</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2dx v3.8.1避免重复编译</title>
    <url>//posts/201619/</url>
    <content><![CDATA[<h2 id="Platform-Android-or-Windows"><a href="#Platform-Android-or-Windows" class="headerlink" title="Platform: Android or Windows"></a>Platform: Android or Windows</h2><h3 id="Windows平台"><a href="#Windows平台" class="headerlink" title="Windows平台"></a>Windows平台</h3><blockquote>
<ul>
<li>Visual Studio 2013</li>
</ul>
</blockquote>
<p>引用地址： <a href="http://blog.csdn.net/u014335219/article/details/50492088">http://blog.csdn.net/u014335219/article/details/50492088</a></p>
<p>Cocos2dx新建一个工程就会重新编译，而且在VS中，release模式下即便一些库文件未做任何修改（例如libbox2d.lib， libSpine.lib等，也就是库文件的源码未做任何改动），在这个模式下也会重新编译，导致十几分钟的编译时间，debug模式情况却不会对未做修改的库进行再次编译， 下面先介绍VS2013下release模式下的情况，debug模式下和release模式几乎一样，这样做也可以减少新建工程时的第一次编译时间</p>
<h4 id="新建一个工程"><a href="#新建一个工程" class="headerlink" title="新建一个工程"></a>新建一个工程</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cocos new cpp-cocosbuilt -p com.cocos.built -l cpp -d .</span><br></pre></td></tr></table></figure>

<span id="more"></span>
<p>新建cpp-cocosbuilt项目后，用VS2013打开proj.win32&#x2F;cpp-cocosbuilt.sln， 因为release模式会出现这种情况，所以我们将VS2013调到这种模式，如下图所示：<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/cocosRelease.webp"></p>
<p>然后ctrl + F5，直接编译和运行，第一遍运行肯定就会是下图这样的<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/cocosFirst.webp"></p>
<h4 id="生成预编译库"><a href="#生成预编译库" class="headerlink" title="生成预编译库"></a>生成预编译库</h4><p>使用Cocos2dx console控制台命令，选项可通过cocos gen-libs -h查看</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cocos gen-libs -p win32 -m release --vs2013</span><br></pre></td></tr></table></figure>
<p>这是产生预编译库的命令，可以产生Android或Win32等平台的预编译库，避免重复编译，执行后，会在cocos引擎上级目录产生一个prebuilt文件夹，我的编译的库目录如下图所示：<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/libDir.webp"></p>
<h4 id="移除项目引用"><a href="#移除项目引用" class="headerlink" title="移除项目引用"></a>移除项目引用</h4><p>右键项目-属性-通用属性-引用，如下图，移除椭圆2中库的所有引用<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/projRef.webp"></p>
<h4 id="移除解决方案引用"><a href="#移除解决方案引用" class="headerlink" title="移除解决方案引用"></a>移除解决方案引用</h4><p>接着右键解决方案-属性-通用属性-项目依赖项，将右边库前面的复选框全部取消选中，如下图所示<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/soluRef.webp"></p>
<p>注意：如果出现如下图所示的不能移除问题，是你没有做前一步移除引用操作，请返回3步骤</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/error.webp"></p>
<h4 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h4><p>添加库目录，并设置libcocos2d_2013.dll的环境变量， 如下图所示， 这个目录就是上面的预编译库的目录<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/addlidDir.webp"></p>
<p>然后添加libcocos2d_2013.lib库<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/addlib.webp"></p>
<p>接下来是设置dll环境变量，把该变量添加到Path中.<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/dllVar.webp"></p>
<p>然后就可以ctrl + F5，就可以成功运行啦！<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/samples.webp"></p>
<h4 id="debug模式"><a href="#debug模式" class="headerlink" title="debug模式"></a>debug模式</h4><p>同样在cpp-cocosbuilt项目下测试，生成预编译库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cocos gen-libs -p win32 -m debug --vs2013</span><br></pre></td></tr></table></figure>
<p>PS: 使用-c选项会清除$(COCOS_ROOT)&#x2F;prebuilt目录所有文件，重新生成预编译库. 其他步骤同Release模式，区别只在于，debug模式，附加依赖项多了libbox2d.lib以及libSpine.lib，同时需要修改prebuilt&#x2F;win32目录下libbox2d_2013.lib以及libSpine_2013.lib，修改为libbox2d.lib及libSpine.lib<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-Built/AddLibDir.webp"></p>
<p>建议：debug模式不采用上面步骤，release模式使用上面步骤，原因是如果同时存在debug模式以及Release模式的dll，配置环境变量会产生冲突，而且debug模式在程序运行时也只需编译一遍，只会增加第一次编译时间</p>
<h3 id="Android平台"><a href="#Android平台" class="headerlink" title="Android平台"></a>Android平台</h3><blockquote>
<ul>
<li>Android Studio</li>
</ul>
</blockquote>
<p>修改proj.android-studio&#x2F;app&#x2F;jni目录下的Android.mk</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line">LOCAL_PATH := <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"><span class="comment"># 注释掉之前的模块路径</span></span><br><span class="line"><span class="comment">#$(call import-add-path,$(LOCAL_PATH)/../../../cocos2d)</span></span><br><span class="line"><span class="comment">#$(call import-add-path,$(LOCAL_PATH)/../../../cocos2d/external)</span></span><br><span class="line"><span class="comment">#$(call import-add-path,$(LOCAL_PATH)/../../../cocos2d/cocos)</span></span><br><span class="line"><span class="comment"># 添加下面的新模块路径</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(COCOS_ROOT)</span>)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos2dcpp_shared</span><br><span class="line"></span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2dcpp</span><br><span class="line"></span><br><span class="line">LOCAL_SRC_FILES := hellocpp/main.cpp \</span><br><span class="line">                   ../../../Classes/AppDelegate.cpp \</span><br><span class="line">                   ../../../Classes/HelloWorldScene.cpp</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES := <span class="variable">$(LOCAL_PATH)</span>/../../../Classes</span><br><span class="line">LOCAL_C_INCLUDES += <span class="variable">$(COCOS_ROOT)</span>/cocos</span><br><span class="line"><span class="comment"># _COCOS_HEADER_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_HEADER_ANDROID_END</span></span><br><span class="line"></span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_static</span><br><span class="line"></span><br><span class="line"><span class="comment"># _COCOS_LIB_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_LIB_ANDROID_END</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(BUILD_SHARED_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 注释掉之前的模块路径</span></span><br><span class="line"><span class="comment">#$(call import-module,.)</span></span><br><span class="line"><span class="comment"># 添加下面的新模块路径</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module, prebuilt/android)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># _COCOS_LIB_IMPORT_ANDROID_BEGIN</span></span><br><span class="line"><span class="comment"># _COCOS_LIB_IMPORT_ANDROID_END</span></span><br></pre></td></tr></table></figure>
<p>以后新建项目只要修改新工程的jni&#x2F;Android.mk文件就行了，接下来我们在$(COCOS_ROOT)&#x2F;prebuilt&#x2F;android目录下新建一个Android.mk文件</p>
<figure class="highlight make"><table><tr><td class="code"><pre><span class="line"><span class="comment">### COCOS 预编译静态库，确保环境变量有COCOS_ROOT或者项目里有</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件位置 $(COCOS_ROOT)/prebuild/android</span></span><br><span class="line">LOCAL_PATH := <span class="variable">$(<span class="built_in">call</span> my-<span class="built_in">dir</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#$(call import-add-path,$(COCOS_ROOT))</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(COCOS_ROOT)</span>/external)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-add-path,<span class="variable">$(COCOS_ROOT)</span>/cocos)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos2dx_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2d</span><br><span class="line"></span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocos2d.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform/android</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocostudio_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocosbuilder_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos3d_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += spine_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_network_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += audioengine_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#include $(BUILD_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos_ui_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libui</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libui.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/ui \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/ui \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos_extension_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line">                    </span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos_flatbuffers_static</span><br><span class="line">LOCAL_MODULE_FILENAME := flatbuffers</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/flatbuffers.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/flatbuffers</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos_extension_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libextension</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libextension.a</span><br><span class="line"></span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_internal_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_curl_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += box2d_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += bullet_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_network_static</span><br><span class="line"></span><br><span class="line">LOCAL_CXXFLAGS += -fexceptions</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span> \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/extensions</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span> \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/extensions \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/extensions/GUI/CCControlExtension \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/extensions/GUI/CCScrollView \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/network</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos2dx_internal_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2dxinternal</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocos2dxinternal.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span> \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/base \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/tinyxml2 \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/unzip \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/chipmunk/<span class="keyword">include</span>/chipmunk \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/xxhash \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/nslog \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri/common \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri/sweep \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/clipper</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/tinyxml2 \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/unzip \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/chipmunk/<span class="keyword">include</span>/chipmunk \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/edtaa3func \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/xxhash \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/ConvertUTF \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/nslog \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri/common \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/poly2tri/sweep \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/clipper</span><br><span class="line"></span><br><span class="line">LOCAL_EXPORT_LDLIBS := -lGLESv2 -llog -landroid</span><br><span class="line"></span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos_freetype2_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_png_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_jpeg_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_tiff_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_webp_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_chipmunk_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_zlib_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += recast_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += bullet_static</span><br><span class="line"></span><br><span class="line">LOCAL_WHOLE_STATIC_LIBRARIES := cocos2dxandroid_static</span><br><span class="line"></span><br><span class="line"><span class="comment"># define the macro to compile through support/zip_support/ioapi.c</span></span><br><span class="line">LOCAL_CFLAGS   :=  -DUSE_FILE32API</span><br><span class="line">LOCAL_CFLAGS   +=  -fexceptions</span><br><span class="line">LOCAL_CPPFLAGS := -Wno-deprecated-declarations -Wno-extern-c-compat</span><br><span class="line">LOCAL_EXPORT_CFLAGS   := -DUSE_FILE32API</span><br><span class="line">LOCAL_EXPORT_CPPFLAGS := -Wno-deprecated-declarations -Wno-extern-c-compat</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocostudio_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocostudio</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocostudio.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support/cocostudio</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support/cocostudio \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support/cocostudio/WidgetReader \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support/cocostudio/ActionTimeline \</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos_ui_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocosdenshion_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_flatbuffers_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocosbuilder_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocosbuilder</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocosbuilder.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/2d \</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos_extension_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := spine_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libspine</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libspine.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/editor-support</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_internal_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos3d_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos3d</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocos3d.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos</span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_internal_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := box2d_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libbox2d</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libbox2d.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line">LOCAL_C_INCLUDES := <span class="variable">$(COCOS_ROOT)</span>/external \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/Box2D</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := recast_static</span><br><span class="line">LOCAL_MODULE_FILENAME := librecast</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/librecast.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := bullet_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libbullet</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libbullet.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos_network_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libnetwork</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libnetwork.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES :=</span><br><span class="line"></span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/curl/<span class="keyword">include</span>/android \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/external/websockets/<span class="keyword">include</span>/android</span><br><span class="line"></span><br><span class="line">LOCAL_STATIC_LIBRARIES := cocos2dx_internal_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += cocos_curl_static</span><br><span class="line">LOCAL_STATIC_LIBRARIES += libwebsockets_static</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line">LOCAL_MODULE := cocos2dxandroid_static</span><br><span class="line">LOCAL_MODULE_FILENAME := libcocos2dandroid</span><br><span class="line">LOCAL_SRC_FILES := <span class="variable">$(TARGET_ARCH_ABI)</span>/libcocos2dandroid.a</span><br><span class="line">LOCAL_EXPORT_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform/android \</span><br><span class="line">LOCAL_C_INCLUDES := \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform/android \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos/platform \</span><br><span class="line">    <span class="variable">$(COCOS_ROOT)</span>/cocos</span><br><span class="line">LOCAL_EXPORT_LDLIBS := -lGLESv1_CM \</span><br><span class="line">                       -lGLESv2 \</span><br><span class="line">                       -lEGL \</span><br><span class="line">                       -llog \</span><br><span class="line">                       -landroid</span><br><span class="line"></span><br><span class="line">LOCAL_CPPFLAGS := -Wno-extern-c-compat</span><br><span class="line"></span><br><span class="line">LOCAL_EXPORT_CPPFLAGS := -Wno-extern-c-compat</span><br><span class="line"><span class="keyword">include</span> <span class="variable">$(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#========AudioEngine库加入失败因为本身存在编译警告========</span></span><br><span class="line"><span class="comment">#New AudioEngine</span></span><br><span class="line"><span class="comment">#include $(CLEAR_VARS)</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE := audioengine_static</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LOCAL_MODULE_FILENAME := libaudioengine</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LOCAL_SRC_FILES := $(TARGET_ARCH_ABI)/libaudioengine.a</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LOCAL_EXPORT_C_INCLUDES := $(COCOS_ROOT)/cocos/audio/include</span></span><br><span class="line"><span class="comment">#LOCAL_EXPORT_LDLIBS := -lOpenSLES</span></span><br><span class="line"><span class="comment">#LOCAL_C_INCLUDES := $(COCOS_ROOT)/cocos/audio/include \</span></span><br><span class="line">                    <span class="variable">$(COCOS_ROOT)</span>/cocos \</span><br><span class="line">                    <span class="variable">$(COCOS_ROOT)</span>/cocos/audio/platform/android</span><br><span class="line"></span><br><span class="line"><span class="comment">#include $(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"><span class="comment">#SimpleAudioEngine</span></span><br><span class="line"><span class="comment">#include $(CLEAR_VARS)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LOCAL_MODULE := cocosdenshion_static</span></span><br><span class="line"><span class="comment">#LOCAL_MODULE_FILENAME := libcocosdenshion</span></span><br><span class="line"><span class="comment">#LOCAL_SRC_FILES := $(TARGET_ARCH_ABI)/libcocosdenshion.a</span></span><br><span class="line"><span class="comment">#LOCAL_STATIC_LIBRARIES := audioengine_static</span></span><br><span class="line"><span class="comment">#LOCAL_EXPORT_C_INCLUDES := $(COCOS_ROOT)/cocos/audio/include</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#LOCAL_C_INCLUDES := $(COCOS_ROOT)/cocos/audio/include \</span></span><br><span class="line">                    <span class="variable">$(COCOS_ROOT)</span>/cocos \</span><br><span class="line">                    <span class="variable">$(COCOS_ROOT)</span>/cocos/audio/platform/android</span><br><span class="line"></span><br><span class="line"><span class="comment">#include $(PREBUILT_STATIC_LIBRARY)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="comment">##以下是cocos编译好的静态库</span></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,freetype2/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,png/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,zlib/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,jpeg/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,tiff/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,webp/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,chipmunk/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,curl/prebuilt/android)</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,websockets/prebuilt/android)</span></span><br><span class="line"><span class="comment">#==============================================================</span></span><br><span class="line"><span class="comment">#AudioEngine在这里加入编译</span></span><br><span class="line"><span class="variable">$(<span class="built_in">call</span> import-module,audio/android)</span></span><br></pre></td></tr></table></figure>
<p>然后就可以在命令行下编译了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cocos compile -p android --android-studio</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2dx + OpenCV 实现背景透明，3D叠加</title>
    <url>//posts/201620/</url>
    <content><![CDATA[<p>目前遇到一个问题，3d物体可以显示，Camera也可以显示，但是加在一起，3D部分无法实现透明。<br>解决方案： 深挖cocos2dx渲染流程<br>cocos2dx android平台的渲染流程如下：<br>首先在java层中，我们通过启动activity，也就是下面的activity，<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/0.webp"><br>而后到我们的AppActivity类里看看，就是下面这里第一个红圈，后面几个红圈接下来都会说到的，别急。</p>
<span id="more"></span>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/1.webp"><br>接下来我们可以知道，AppActivity继承了Cocos2dxActivity这个类，原来是cocos2dx封装了Activity，不错，不错，继续分析，继续挖。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/2.webp"><br>我们打开图一中的第二个红圈，Cocos2dxActivity类</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Cocos2dxActivity</span> <span class="keyword">extends</span> <span class="title class_">Activity</span> <span class="keyword">implements</span> <span class="title class_">Cocos2dxHelperListener</span></span><br></pre></td></tr></table></figure>
<p>可以看到它是个抽象类，那么这个类究竟干了什么事？<br>它继承自我们伟大的android Activity，自然而然可以override我们的onCreate(…)，onStart(…)等等一系列方法，这一部分我就不多说了，android的生命周期知识，重点看这个<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/3.webp"><br>仔细看这个方法，他很机智的用代码添加布局并设置相应的参数，有木有很棒，添加了一个FrameLayout和一个EditBox，重点是下面添加的mGLSurfaceView，通过调用onCreateView()方法，实例化了一个Cocos2dxGLSurfaceVew，并返回该引用，这个SurfaceView正如一个画板，接下来看看Cocos2dxGLSurfaceView类, 也就是图一中的第三个红圈</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cocos2dxGLSurfaceView</span> <span class="keyword">extends</span> <span class="title class_">GLSurfaceView</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>同样的它也继承自android的GLSurfaceView，好吧，其实没啥看的，看看android的就够了，我们回到上一个init方法里，看到下面两行<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/4.webp"><br>也就是说，该SurfaceView设置了一个Cocos2dxRenderer实例，这个Render也相当于画笔，这个画笔神奇了，jni层的东西都通过java层绘制, 接下来我们看看这个Cocos2dxRenderer类，重点看下面这两个方法<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/5.webp"><br>先看看onDrawFrame里的，显然是画帧的操作，里面调用了一个nativeRender()方法，他们上面第一个nativeInit()方法一样，是通过jni调用，我们找找, 这个目录里的cpp文件是jni调用的C++实现，下面右边的图是jni目录<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/6.webp"><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/7.webp"><br>先来看看右边jni目录下的Java_org_cocos2dx_lib_Cocos2dxRenderer.cpp文件<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/8.webp"><br>这是nativeRender()方法的实现，进入的就是Director单实例的mainLoop()，先记着，我在这个文件中并未找到nativeInit()，它在哪？<br>你答对了，就在上图左边那个javaactivity-android.cpp文件里<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/9.webp"><br>可以看到这里面做了一些动作，getOpenGLView()这个方法，据说在android平台是返回null的，我没具体调研，在意的是后面那个run()方法，它做了一些初始化操作，在VS上开发时都会有个AppDelegate.cpp类，在对应的声明文件中，可以看到它继承自Application，接下来就是C++里的一些流程了。看看nativeInit的那个mainLoop()方法，<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/10.webp"><br>有一个drawScene()，这就是我们需要关注的一个方法，如果是需要做透明层处理的话，在这个方法里，添加下面两行代码，这是因为需要做刷帧操作，仅在Director::setGLDefaultValues中使用glClearColor(0.0f, 0.0f, 0.0f, 0.0f)初始化是不够的<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/Cocos2dx-CV/11.webp"><br>好了，就说这么多了，之前看了一下<a href="http://www.2cto.com/kf/201409/335933.html">http://www.2cto.com/kf/201409/335933.html</a> 帖子，写的很好，感谢笔者。</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
        <tag>CV</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu14.04下安装 JDK7 和 WebStorm 11</title>
    <url>//posts/201621/</url>
    <content><![CDATA[<h3 id="命令行安装JDK7"><a href="#命令行安装JDK7" class="headerlink" title="命令行安装JDK7"></a>命令行安装JDK7</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo add-apt-repository ppa:webupd8team/java</span><br><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install oracle-java7-installer</span><br></pre></td></tr></table></figure>
<p>然后检查安装是否成功</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ java -version</span><br></pre></td></tr></table></figure>
<span id="more"></span>
<h3 id="安装WebStorm"><a href="#安装WebStorm" class="headerlink" title="安装WebStorm"></a>安装WebStorm</h3><p>官方下载地址：<a href="https://confluence.jetbrains.com/display/WI/Previous+WebStorm+Releases">https://confluence.jetbrains.com/display/WI/Previous+WebStorm+Releases</a><br>我下载的是WebStorm 11.0.4, 提取文件执行文件夹下bin目录里.sh</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo ./webstorm.sh</span><br></pre></td></tr></table></figure>
<p>PS: 安装JDK的时候，使用官方压缩包时，在&#x2F;etc&#x2F;profile或~&#x2F;.bashrc配置JDK环境时，shell环境可以运行，但是webstorm安装不了，提示找不到JAVA_HOME 或JDK_HOME等，目前也不造为啥，也source了，java -version也成功了.</p>
<h3 id="WebStorm-11-破解"><a href="#WebStorm-11-破解" class="headerlink" title="WebStorm 11 破解"></a>WebStorm 11 破解</h3><p>安装完成之后，请使用license server的注册方式。<br><a href="http://0.idea.lanyus.com/">http://0.idea.lanyus.com/</a></p>
<p>如果此地址不行，请使用<br><a href="http://1.idea.lanyus.com/">http://1.idea.lanyus.com</a><br><a href="http://2.idea.lanyus.com/">http://2.idea.lanyus.com</a></p>
<h3 id="安装WebStorm-11快捷方式"><a href="#安装WebStorm-11快捷方式" class="headerlink" title="安装WebStorm 11快捷方式"></a>安装WebStorm 11快捷方式</h3><p>有尝试锁定到启动器，但却不管用，可以通过gnome-panel添加一个桌面快捷方式<br>首先可以通过Ubuntu Software Center安装gnome-panel，然后执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo gnome-desktop-item-edit ~/桌面/ --create-new</span><br></pre></td></tr></table></figure>
<p>最后会弹出一个窗口，填写：</p>
<p> 类型: 应用程序<br> 名称: WebStorm<br> 命令: Exec&#x3D;&#x2F;usr&#x2F;local&#x2F;bin&#x2F;wstorm.sh<br> 注释：WebStorm Launcher<br>PS: 首先要保证wstorm.sh拥有可执行权限，如果没有，请使用下面命令添加</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo chmod +x /usr/local/bin/wstorm.h</span><br></pre></td></tr></table></figure>
<p>现在就可以在桌面找到快捷方式啦！</p>
<p>博文引用链接：<br><a href="http://my.oschina.net/uniquejava/blog/225687">http://my.oschina.net/uniquejava/blog/225687</a><br><a href="http://zhidao.baidu.com/link?url=TJoPqGJOnyyfaJVPc0_vtTORXdpzGDDViX1H7RmsKAPG3tCR9WAIUcWkAUkAWKEwicf5IU-ko7MdsxPVRMjOZRW66x1MWZWDTPUbuWCsxt7">http://zhidao.baidu.com/link?url=TJoPqGJOnyyfaJVPc0_vtTORXdpzGDDViX1H7RmsKAPG3tCR9WAIUcWkAUkAWKEwicf5IU-ko7MdsxPVRMjOZRW66x1MWZWDTPUbuWCsxt7</a></p>
<p><a href="http://www.cnblogs.com/hongzg1982/articles/2101792.html">【bashrc和profile区别】</a></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>Android NDK中的各个版本的下载地址</title>
    <url>//posts/201622/</url>
    <content><![CDATA[<p><a href="https://dl.google.com/android/ndk/android-ndk-r8e-windows-x86.zip">https://dl.google.com/android/ndk/android-ndk-r8e-windows-x86.zip</a></p>
<p><a href="https://dl.google.com/android/ndk/android-ndk-r9b-windows-x86.zip">https://dl.google.com/android/ndk/android-ndk-r9b-windows-x86.zip</a></p>
<p><a href="https://dl.google.com/android/ndk/android-ndk-r9d-linux-x86_64.tar.bz2">https://dl.google.com/android/ndk/android-ndk-r9d-linux-x86_64.tar.bz2</a></p>
<p><a href="https://dl.google.com/android/ndk/android-ndk64-r10b-linux-x86_64.tar.bz2">https://dl.google.com/android/ndk/android-ndk64-r10b-linux-x86_64.tar.bz2</a></p>
<p>其他版本的下载只需改动后面的版本信息就行了，比如说windows x86平台ndk-r9b，只需将后面修改为android-ndk-r9b-windows-x86.zip</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>Mobile</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>基于Ubuntu14.04+LSD_SLAM的indigo数据集测试</title>
    <url>//posts/201623/</url>
    <content><![CDATA[<p>LSD-SLAM是一个实时的单目SLAM. 它能实时地在电脑上直接(不使用关键点和特征)创建大规模的半稠密地图，甚至可以运行在智能手机上，如Android&#x2F;iOS.</p>
<h3 id="搭建Ubuntu14-04-4-ROS-indigo基础环境"><a href="#搭建Ubuntu14-04-4-ROS-indigo基础环境" class="headerlink" title="搭建Ubuntu14.04.4+ROS indigo基础环境"></a>搭建Ubuntu14.04.4+ROS indigo基础环境</h3><h4 id="在ubuntu官网下载ubuntu-14-04-4-desktop-i386-iso安装包，大约1G"><a href="#在ubuntu官网下载ubuntu-14-04-4-desktop-i386-iso安装包，大约1G" class="headerlink" title="在ubuntu官网下载ubuntu-14.04.4-desktop-i386.iso安装包，大约1G."></a>在<a href="http://releases.ubuntu.com/14.04/">ubuntu官网</a>下载ubuntu-14.04.4-desktop-i386.iso安装包，大约1G.</h4><p>备注：因为ROS包含rviz可视化环境，因此需要选择桌面版。</p>
<span id="more"></span>
<h4 id="将安装源换成阿里云的，如何换请参考"><a href="#将安装源换成阿里云的，如何换请参考" class="headerlink" title="将安装源换成阿里云的，如何换请参考"></a>将安装源换成阿里云的，如何换请参考</h4><p><a href="http://mirrors.aliyun.com/help/ubuntu">http://mirrors.aliyun.com/help/ubuntu</a><br>备注：强烈建议将安装源换成国内的，否则安装的时候要么速度慢，要么可能连不上。</p>
<h4 id="在Ubuntu14-04-4中安装ROS-indigo，参考"><a href="#在Ubuntu14-04-4中安装ROS-indigo，参考" class="headerlink" title="在Ubuntu14.04.4中安装ROS indigo，参考"></a>在Ubuntu14.04.4中安装ROS indigo，参考</h4><p><a href="http://wiki.ros.org/indigo/Installation/Ubuntu">http://wiki.ros.org/indigo/Installation/Ubuntu</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ sudo apt-get update</span><br><span class="line">dennis@ubuntu:~$ sudo sh -c <span class="string">&#x27;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br><span class="line">dennis@ubuntu:~$ sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net --recv-key 0xB01FA116</span><br><span class="line">dennis@ubuntu:~$ sudo apt-get update</span><br><span class="line">dennis@ubuntu:~$ sudo apt-get install ros-indigo-desktop-full</span><br></pre></td></tr></table></figure>
<p>备注：这里采用的完整安装模式.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ sudo rosdep init</span><br><span class="line">dennis@ubuntu:~$ rosdep update</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/indigo/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line">dennis@ubuntu:~$ <span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>
<h4 id="校验安装是否成功，输入roscore命令，如下："><a href="#校验安装是否成功，输入roscore命令，如下：" class="headerlink" title="校验安装是否成功，输入roscore命令，如下："></a>校验安装是否成功，输入roscore命令，如下：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ roscore</span><br><span class="line">... logging to /home/dennis/.ros/log/9f2ace00-16b9-11e6-a10c-000c29b0df82/roslaunch-ubuntu-2078.<span class="built_in">log</span></span><br><span class="line">Checking <span class="built_in">log</span> directory <span class="keyword">for</span> disk usage. This may take awhile. Press Ctrl-C to interrupt</span><br><span class="line">Done checking <span class="built_in">log</span> file disk usage. Usage is &lt;1GB.</span><br><span class="line"></span><br><span class="line">started roslaunch server http://ubuntu:44364/</span><br><span class="line">ros_comm version 1.11.19</span><br><span class="line"></span><br><span class="line">SUMMARY</span><br><span class="line"></span><br><span class="line">PARAMETERS</span><br><span class="line"> * /rosdistro: indigo</span><br><span class="line"> * /rosversion: 1.11.19</span><br><span class="line"></span><br><span class="line">NODES</span><br><span class="line"></span><br><span class="line">auto-starting new master</span><br><span class="line">process[master]: started with pid [2090]</span><br><span class="line">ROS_MASTER_URI=http://ubuntu:11311/</span><br><span class="line"></span><br><span class="line">setting /run_id to 9f2ace00-16b9-11e6-a10c-000c29b0df82</span><br><span class="line">process[rosout-1]: started with pid [2103]</span><br><span class="line">started core service [/rosout]</span><br></pre></td></tr></table></figure>
<h4 id="安装ROS工具"><a href="#安装ROS工具" class="headerlink" title="安装ROS工具"></a>安装ROS工具</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ sudo apt-get install python-rosinstall</span><br></pre></td></tr></table></figure>
<h3 id="初始化ros编译环境及编译lsd-slam"><a href="#初始化ros编译环境及编译lsd-slam" class="headerlink" title="初始化ros编译环境及编译lsd_slam"></a>初始化ros编译环境及编译lsd_slam</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dennis@ubuntu:~$ <span class="built_in">mkdir</span> ~/rosbuild_ws</span><br><span class="line">dennis@ubuntu:~$ <span class="built_in">cd</span> ~/rosbuild_ws/</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ rosws init . /opt/ros/indigo</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ <span class="built_in">mkdir</span> package_dir</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ rosws <span class="built_in">set</span> ~/rosbuild_ws/package_dir -t .</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ <span class="built_in">echo</span> <span class="string">&quot;source ~/rosbuild_ws/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ bash</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws$ <span class="built_in">cd</span> package_dir/</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws/package_dir$</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws/package_dir$ sudo apt-get install ros-indigo-libg2o ros-indigo-cv-bridge </span><br><span class="line">liblapack-dev libblas-dev freeglut3-dev libqglviewer-dev libsuitesparse-dev libx11-dev</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws/package_dir$ git <span class="built_in">clone</span> https://github.com/tum-vision/lsd_slam.git lsd_slam</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws/package_dir$ <span class="built_in">ls</span> -lrt</span><br><span class="line">total 4</span><br><span class="line">drwxrwxr-x 5 dennis dennis 4096 May  8 03:30 lsd_slam</span><br><span class="line">dennis@ubuntu:~/rosbuild_ws/package_dir$ rosmake lsd_slam</span><br></pre></td></tr></table></figure>
<h3 id="采用官方提供的数据集进行测试"><a href="#采用官方提供的数据集进行测试" class="headerlink" title="采用官方提供的数据集进行测试"></a>采用官方提供的数据集进行测试</h3><p>备注：数据集下载请参考本文的参考资料[2].</p>
<h4 id="测试方法一-采用官方数据集LSD-foodcourt的images"><a href="#测试方法一-采用官方数据集LSD-foodcourt的images" class="headerlink" title="测试方法一(采用官方数据集LSD_foodcourt的images)"></a>测试方法一(采用官方数据集LSD_foodcourt的images)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winter@winter-PC:~$ roscore   //执行后新建终端</span><br><span class="line">winter@winter-PC:~$ rosrun lsd_slam_viewer viewer  //执行后再新建终端</span><br><span class="line">winter@winter-PC:~$ rosrun lsd_slam_core dataset_slam _files:=/home/winter/LSD_DataSet/LSD_foodcourt/images _hz:=0 _calib:=/home/winter/LSD_DataSet/LSD_foodcourt/cameraCalibration.cfg </span><br></pre></td></tr></table></figure>
<p>SLAM Depth<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/SlamImage/0.webp"></p>
<p>SLAM Viewer<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/SlamImage/1.webp"></p>
<h4 id="测试方法二-采用官方数据集LSD-room-bag文件"><a href="#测试方法二-采用官方数据集LSD-room-bag文件" class="headerlink" title="测试方法二(采用官方数据集LSD_room.bag文件)"></a>测试方法二(采用官方数据集LSD_room.bag文件)</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">winter@winter-PC:~$ roscore</span><br><span class="line">winter@winter-PC:~$ rosrun lsd_slam_viewer viewer</span><br><span class="line">winter@winter-PC:~$ rosrun lsd_slam_core live_slam image:=/image_raw camera_info:=/camera_info</span><br><span class="line">winter@winter-PC:~$ rosbag play LSD_room.bag</span><br></pre></td></tr></table></figure>
<p>SLAM Depth<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/SlamImage/2.webp"></p>
<p>SLAM Viewer<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/SlamImage/3.webp"></p>
<h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><p>[1] <a href="https://github.com/tum-vision/lsd_slam">https://github.com/tum-vision/lsd_slam</a>   LSD_SLAM官网<br>[2] <a href="http://vision.in.tum.de/research/vslam/lsdslam">http://vision.in.tum.de/research/vslam/lsdslam</a> 德国慕尼黑工业大学(TUM)计算机视觉组<br>[3] <a href="http://wiki.ros.org/indigo/Installation/Ubuntu">http://wiki.ros.org/indigo/Installation/Ubuntu</a>  在Ubuntu14.04.4上安装ROS Indigo<br>[4] <a href="http://releases.ubuntu.com/14.04/">http://releases.ubuntu.com/14.04/</a>   官网下载ubuntu-14.04.4-desktop-i386.iso<br>[5] <a href="http://wiki.ros.org/ROS/Tutorials">http://wiki.ros.org/ROS/Tutorials</a> 用于ROS安装成功之后的测试<br>[6] <a href="http://www.dev47apps.com/droidcam/linuxx/">http://www.dev47apps.com/droidcam/linuxx/</a>  将手机摄像头的视频传输到电脑上的工具</p>
]]></content>
      <tags>
        <tag>CV</tag>
      </tags>
  </entry>
  <entry>
    <title>Cocos2dx Screen Log</title>
    <url>//posts/201624/</url>
    <content><![CDATA[<p>还是先上一段demo，看看美不美  </p>
<iframe height=25 width=40 src="https://www.youtube.com/embed/lqY7A0JXPHs" frameborder=0 allowfullscreen></iframe>

<p>正如视频显示，log是打在手机屏幕上的，介绍是来自上面的链接，将log打在屏幕上更为直观，即使用户没有一个可以呈现输出的开发环境，你也可以通过这种方式进行测试。根据原文所说，在ios和Android上进行过测试<br>可以work在Cocos2dx 3.x版本上<br>重点来了， <strong>使用方法</strong>：<br>添加下面两个文件<br><a href="http://www.iforce2d.net/cc2dx/src/ScreenLog.h">ScreenLog.h</a><br><a href="http://www.iforce2d.net/cc2dx/src/ScreenLog.cpp">ScreenLog.cpp</a></p>
<span id="more"></span>
<p> 在AppDelegate类中，include ScreenLog.h，并在ScreenLog类开始处初始化它的的global实例，可以在构造器中添加下面代码：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">AppDelegate::<span class="built_in">AppDelegate</span>() &#123;</span><br><span class="line">    g_screenLog = <span class="keyword">new</span> <span class="built_in">ScreenLog</span>();</span><br><span class="line">    g_screenLog-&gt;<span class="built_in">setLevelMask</span>( LL_DEBUG | LL_INFO | LL_WARNING | LL_ERROR | LL_FATAL );</span><br><span class="line">    g_screenLog-&gt;<span class="built_in">setFontFile</span>( <span class="string">&quot;UbuntuMono-R.ttf&quot;</span> );</span><br><span class="line">    g_screenLog-&gt;<span class="built_in">setTimeoutSeconds</span>( <span class="number">15</span> );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上面的levelMask是用来指定输出log信息的类型的bitmask， 根据你的需要对其进行开关设置， logging levels可以任意设置，当然也可以根据你需要进行随意改变</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LL_FATAL     0x01</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL_ERROR     0x02</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL_WARNING   0x04</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL_INFO      0x08</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL_DEBUG     0x10</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> LL_TRACE     0x20</span></span><br></pre></td></tr></table></figure>
<p>通常开发期间都会使用五个levels，偶尔需要定位程序时，也会使用trace levels，通常用来打印函数的输入输出（见下面的tips），<br>你所使用的devices可能没必要设置字体， 如果你想设置non-ascii字符，你就需要一个支持它的字符集.<br>timeout指定了log信息消失之前可以被显示多久.</p>
<blockquote>
<ul>
<li>在AppDelegate::applicationDidFinishLaunching() 方法的末端，附加screenlog到starting scene.</li>
</ul>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">AppDelegate::applicationDidFinishLaunching</span><span class="params">()</span> </span>&#123;</span><br><span class="line">     ---blah blah blah ---</span><br><span class="line">     <span class="comment">// create a scene. its an autorelease object</span></span><br><span class="line">     <span class="keyword">auto</span> scene = HelloWorld::<span class="built_in">scene</span>();</span><br><span class="line"> </span><br><span class="line">     <span class="comment">// attach screenlog to the scene about to become active</span></span><br><span class="line">     g_screenLog-&gt;<span class="built_in">attachToScene</span>( scene );</span><br><span class="line"> </span><br><span class="line">     <span class="comment">// run</span></span><br><span class="line">     director-&gt;<span class="built_in">runWithScene</span>( scene );</span><br><span class="line"> </span><br><span class="line">     <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>attachToScene方法让screenlog将它自己以子节点的形式(ScreenLog是cocos2d::Layer的子类)添加到给定的scene，它有可能比其他scene中任何layer都高.默认的child level是1000， 如果你想更改，可以在ScreenLog.cpp中，修改SCREENLOG_LAYER_LEVEL的值，来保证screenlog layer是top-most，保持在最上层.<br>现在，你可以开始在屏幕上打印输出log信息了，include ScreenLog.h并调用log方法，e.g.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">g_screenLog-&gt;<span class="built_in">log</span>( LL_INFO, <span class="string">&quot;Touch began: (%d,%d)&quot;</span>, x, y );</span><br></pre></td></tr></table></figure>
<p>输出字符串的格式和<a href="http://www.cplusplus.com/reference/cstdio/printf/">printf</a>一样.<br>下面是一个打印log信息的例子，添加下面的code到init()方法中：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">g_screenLog-&gt;<span class="built_in">log</span>( LL_DEBUG, <span class="string">&quot;A debug message... フォント&quot;</span> );</span><br><span class="line">g_screenLog-&gt;<span class="built_in">log</span>( LL_INFO, <span class="string">&quot;An info message... によって&quot;</span> );</span><br><span class="line">g_screenLog-&gt;<span class="built_in">log</span>( LL_WARNING, <span class="string">&quot;A warning message... 日本語も&quot;</span> );</span><br><span class="line">g_screenLog-&gt;<span class="built_in">log</span>( LL_ERROR, <span class="string">&quot;An error message... 表示可能&quot;</span> );</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/ScreenLog/screenlog3.webp"><br>在许多设备上，不需要setFontFile方法的调用，就可以显示日文.<br><strong>Note:</strong> 记住， 当切换scene时， 要记住attach它到要切的新的scene中.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">auto</span> scene = MyNextScreen::<span class="built_in">scene</span>();</span><br><span class="line">g_screenLog-&gt;<span class="built_in">attachToScene</span>( scene ); <span class="comment">// important</span></span><br><span class="line">CCDirector::<span class="built_in">sharedDirector</span>()-&gt;<span class="built_in">replaceScene</span>( scene );</span><br></pre></td></tr></table></figure>
<p>如果忘记添加它，screenlog会继续exist并run，但你看不到它.</p>
<p><strong>动态文本信息</strong><br>在存在的信息中，改变文本信息，也就是想输出动态文本信息，类似Cocos2dx的TextAlta类， 能够更快的更新，例如打印输出随着平移触摸而更新的触控位置<br>在比如，我想update一个文件下载的进度信息，当我首次创建screenLogMessage的引用，我可以保持这个log信息的引用：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">screenLogMessage* slm = g_screenLog-&gt;<span class="built_in">log</span>( LL_INFO, <span class="string">&quot;Downloading file: 0% complete&quot;</span> );</span><br></pre></td></tr></table></figure>
<p>…以后使用它来改变同样log信息的文本，而并非重新添加</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">g_screenLog-&gt;<span class="built_in">setMessageText</span>( slm, <span class="string">&quot;Downloading file: %d% complete&quot;</span>, progress );</span><br></pre></td></tr></table></figure>
<p>当一条log信息update如上， timeout计数也会复位，也就是说，如果这条更新的log信息timeout， 同样会从screenlog中remove掉.</p>
<p><strong>多线程问题</strong>（这段还在研究）<br>在ScreenLog.cpp中，你可以看到一些code处含有threads和locking，看起来似乎没必要.创建的理由是仅仅只有application的主线程能够正确创建用来log打印显示的CCLabelTTF labels，如果其他线程来做创建这件事，labels将无法被创建，因为OpenGL渲染环境并非当前的线程(原文是说because the OpenGL rendering context is not current for that thread).为了允许其他线程随时调用‘log’，除非application的主线程可以处理时， 进程实际的label-creation部分才被缓冲.<br>原文这段是：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">In ScreenLog.cpp you will see a bunch of code to do with threads and locking which might seem unnecessary at first. The reason for that is because only the main thread of the application is able to correctly create the CCLabelTTF labels used for the log display. If any other thread tries this, the labels will not be created because the OpenGL rendering context is not current for that thread. To allow any other thread to call &#x27;log&#x27; at any time, the actual label-creation part of the process is buffered until the main thread of the application can do it. This allows logging from other threads in situations where processing is being done concurrently, such as long loading routines, or network transfers as mentioned above.</span><br><span class="line">If you didn&#x27;t understand that previous paragraph, just know that you can call &#x27;log&#x27; at any time from anywhere in your code without worrying about threading issues :)</span><br></pre></td></tr></table></figure>
<p><strong>其他使用tips</strong><br>头文件里，你能够发现一个比较小的类， 可以用来log程序的过程信息</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ScopeLog</span> &#123;</span><br><span class="line"> <span class="keyword">public</span>:</span><br><span class="line">     std::string m_functionName;</span><br><span class="line">     <span class="built_in">ScopeLog</span>(std::string fn) &#123;</span><br><span class="line">         m_functionName = fn;</span><br><span class="line">         g_screenLog-&gt;<span class="built_in">log</span>( LL_TRACE, <span class="string">&quot;Entered %s&quot;</span>, m_functionName.<span class="built_in">c_str</span>() );</span><br><span class="line">     &#125;</span><br><span class="line">     ~<span class="built_in">ScopeLog</span>() &#123;</span><br><span class="line">         g_screenLog-&gt;<span class="built_in">log</span>( LL_TRACE, <span class="string">&quot;Exiting %s&quot;</span>, m_functionName.<span class="built_in">c_str</span>() );</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;;</span><br></pre></td></tr></table></figure>
<p>这使用了栈中一个类实例的scope timing来打印输出两条log信息.例如如果我们在scene()的开始和init()方法里添加一行code如下：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">Scene* <span class="title">HelloWorld::scene</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">     <span class="function">ScopeLog <span class="title">log</span><span class="params">(__PRETTY_FUNCTION__)</span></span>;</span><br></pre></td></tr></table></figure>
<p>和</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">HelloWorld::init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="function">ScopeLog <span class="title">log</span><span class="params">(__PRETTY_FUNCTION__)</span></span>;</span><br></pre></td></tr></table></figure>
<p>我们将能得到如下结果，说明了init()怎样出发在scene()函数内：<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/ScreenLog/screenlog4.webp"></p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>Cocos2dx</category>
      </categories>
      <tags>
        <tag>Cocos2dx</tag>
      </tags>
  </entry>
  <entry>
    <title>从Windows到Ubuntu, 搭建Hexo + Github博客</title>
    <url>//posts/201625/</url>
    <content><![CDATA[<h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure>
<h3 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装node.js</h3><p>推荐使用官方源码安装 <a href="https://nodejs.org/en/download/">node官方下载地址</a>,在解压文件根目录里</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$  ./configure</span><br><span class="line">$ make</span><br><span class="line">$ sudo make install</span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure>
<h3 id="拷贝需要的文件"><a href="#拷贝需要的文件" class="headerlink" title="拷贝需要的文件"></a>拷贝需要的文件</h3><p>需要拷贝以下文件夹：</p>
<pre><code>hexo/source
hexo/themes/ 你的主题文件夹
和以下文件：
hexo/_config.yml
packge.json
</code></pre>
<h3 id="测试hexo"><a href="#测试hexo" class="headerlink" title="测试hexo"></a>测试hexo</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ mkdir local-repository</span><br><span class="line">$ cd local-repository</span><br><span class="line">local-repository$ hexo init Hexo</span><br><span class="line">local-repository$ cd Hexo</span><br><span class="line">local-repository/Hexo$ hexo s -g</span><br></pre></td></tr></table></figure>

<p>Hexo is running at<strong><a href="http://localhost:4000/">http://localhost:4000/</a></strong> , 该地址就可以看到你的windows系统上显示的你的博客内容了, 如果出现的是 <strong><a href="http://0.0.0.0:4000/">http://0.0.0.0:4000/</a></strong>, 估计是你没有切到初始化后的Hexo目录下执行hexo命令.</p>
<p>Note: 如果出现Deploy not found : git，可能还没下载git deploy，需要安装git deployer.</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ sudo npm install hexo-deployer-git --save </span><br></pre></td></tr></table></figure>
<h3 id="与远程github账户关联"><a href="#与远程github账户关联" class="headerlink" title="与远程github账户关联"></a>与远程github账户关联</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name Here&quot;</span><br><span class="line">$ git config --global user.email your_email@example.com</span><br></pre></td></tr></table></figure>
<h3 id="查看已有的配置信息"><a href="#查看已有的配置信息" class="headerlink" title="查看已有的配置信息"></a>查看已有的配置信息</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ git config --list</span><br></pre></td></tr></table></figure>

<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ol>
<li><a href="https://pinlyu.com/">https://pinlyu.com/</a></li>
</ol>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake学习心得</title>
    <url>//posts/201626/</url>
    <content><![CDATA[<p>&emsp;&emsp;不知道抽什么风，突然想起要学学CMake了，不学不知道，一学吓一跳，CMake功能真心强大，有各种寻找库包的支持，而且适合对跨平台打包</p>
<h2 id="CMake-Variables"><a href="#CMake-Variables" class="headerlink" title="CMake Variables"></a>CMake Variables</h2><h3 id="1-cmake-source-dir-vs-project-source-dir"><a href="#1-cmake-source-dir-vs-project-source-dir" class="headerlink" title="1. cmake_source_dir vs project_source_dir"></a>1. <code>cmake_source_dir</code> vs <code>project_source_dir</code></h3><p>&emsp;&emsp;可以首先看看<a href="http://stackoverflow.com/questions/32028667/are-cmake-source-dir-and-project-source-dir-the-same-in-cmake">stackoverflow</a>上的一个回答,  这两个变量有些细微的区别，<code>cmake_source_dir</code>的确指向CMakeLists.txt被定义的那个顶层目录，而<code>project_source_dir</code>指向的是CMakeLists.txt含有的那个最近的project()命令的目录<br>&emsp;&emsp;举个例子说吧，比如有一个顶层项目，名称为Outer，它含有一个子目录，该子目录有它自己的项目Inner，Outer的CMakeLists.txt内容为</p>
<span id="more"></span>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(Outer)</span><br><span class="line"><span class="keyword">add_subdirectory</span>(Inner)</span><br></pre></td></tr></table></figure>
<p>Inner的CMakeLists.txt内容为</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">project</span>(Inner)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;这两个CMakeLists文件中，两个CMakeLists.txt的<code>cmake_source_dir</code>都指向Outer的源目录，但Outer的<code>project_source_dir</code>也指向Outer的源目录，Inner的<code>project_source_dir</code>指向Inner的源目录(含有project()), 这两个变量的区别与其他<code>PROJECT_&lt;var&gt;</code> 和<code>CMAKE_&lt;var&gt;</code> 一致.</p>
<h3 id="2-find-package"><a href="#2-find-package" class="headerlink" title="2. find_package"></a>2. <code>find_package</code></h3><p>&emsp;&emsp;在CMake官网浏览时才发现，原来CMake支持多个库包的搜索，再也不用为这些库包做些额外的include操作了，比如FindOpenGL、FindOpenCL、FindVulkan等，可以在官网<a href="https://cmake.org/cmake/help/v3.7/manual/cmake-modules.7.html">cmake-modules</a>查看，或者你可以通过执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake --help-module-list</span><br></pre></td></tr></table></figure>
<p>查看，在Ubuntu上一般都在<code>/usr/local/share/cmake/Modules</code>目录<br>&emsp;&emsp;具体使用可以见<a href="https://cmake.org/Wiki/CMake:How_To_Find_Libraries">CMake-Wiki-How to find library</a>, 这里做简单介绍</p>
<h4 id="2-1-如何使用CMake官方支持find的库"><a href="#2-1-如何使用CMake官方支持find的库" class="headerlink" title="2.1 如何使用CMake官方支持find的库"></a>2.1 如何使用CMake官方支持find的库</h4><p>&emsp;&emsp;先考虑一个例子，现在要用bzip2库，编译器需要知道bzlib.h文件在哪，链接器需要知道bzip2库在哪(假如是动态链接，windows平台会找libbz2.dll，Unix平台会找libbz2.so)，如何去Find呢？下面是CMakeLists.txt内容</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">2.8</span>)</span><br><span class="line"><span class="keyword">project</span>(helloworld)</span><br><span class="line"><span class="keyword">add_executable</span>(helloworld hello.c)</span><br><span class="line"><span class="keyword">find_package</span> (BZip2)</span><br><span class="line"><span class="keyword">if</span> (BZIP2_FOUND)</span><br><span class="line">  <span class="keyword">include_directories</span>(<span class="variable">$&#123;BZIP_INCLUDE_DIRS&#125;</span>)</span><br><span class="line">  <span class="keyword">target_link_libraries</span> (helloworld <span class="variable">$&#123;BZIP2_LIBRARIES&#125;</span>)</span><br><span class="line"><span class="keyword">endif</span> (BZIP2_FOUND)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;通过<code>include_directories</code>及<code>target_link_libraries</code>的使用，就可以来查系统上的bzlib.h及bzip2库了</p>
<h4 id="2-2-如何使用CMake官方暂时不支持find的库"><a href="#2-2-如何使用CMake官方暂时不支持find的库" class="headerlink" title="2.2 如何使用CMake官方暂时不支持find的库"></a>2.2 如何使用CMake官方暂时不支持find的库</h4><p>&emsp;&emsp;假设你想使用LibXML++库，但CMake没有一个libXML++的find模块，但你在网上google到一个文件FindLibXML++.cmake， 在CMakeLists.txt里可以写</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find_package</span>(LibXML++ REQUIRED)</span><br><span class="line"><span class="keyword">include_directories</span>(<span class="variable">$&#123;LibXML++_INCLUDE_DIRS&#125;</span>)</span><br><span class="line"><span class="keyword">set</span>(LIBS <span class="variable">$&#123;LIBS&#125;</span> <span class="variable">$&#123;LibXML++_LIBRARIES&#125;</span>)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;如果这个包可选, 你可以省略<code>REQUIRED</code>关键字，可以通过boolean变量<code>LibXML++_FOUND</code>看是否有被found, 然后</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">target_link_libraries</span>(exampleProgram <span class="variable">$&#123;LIBS&#125;</span>)</span><br></pre></td></tr></table></figure>
<p>&emsp;&emsp;为了让这起作用，还要将FindLibXML++.cmake文件放在CMake模块路径下，<br>当前的CMake那边走不通，自然需要我们这边在project里设置路径，在project根目录，创建一个路径为cmake&#x2F;Modules&#x2F;文件夹，而后把FindLibXML++.cmake放在该文件夹下，根目录的CMakeLists.txt里包含如下代码</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKE_MODULE_PATH <span class="variable">$&#123;CMAKE_MODULE_PATH&#125;</span> <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/cmake/Modules/&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>这样CMake将自动的去find.</p>
<h3 id="3-find-path-find-library"><a href="#3-find-path-find-library" class="headerlink" title="3. find_path &amp; find_library"></a>3. find_path &amp; find_library</h3><p>分别用来寻找头文件和库文件的路径</p>
<h3 id="4-source-group"><a href="#4-source-group" class="headerlink" title="4. source_group"></a>4. source_group</h3><p>&emsp;&emsp;之前遇到用CMake构建VS项目，得到的VS项目缺少头文件列表信息，这个命令可以用来干这事，参考<a href="http://stackoverflow.com/questions/1167154/listing-header-files-in-visual-studio-c-project-generated-by-cmake">Listing header files in Visual Studio C++ project generated by cmake</a>, 官方对该命令<a href="https://cmake.org/cmake/help/v3.0/command/source_group.html?highlight=source_group">source_group</a>解释</p>
<h3 id="5-file"><a href="#5-file" class="headerlink" title="5. file"></a>5. file</h3><p>&emsp;&emsp;该命令可以对文件做许多操作，如重命名、移除、新建目录, 例如，使用正则表达式将同后缀的文件名打包</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">file</span>(GLOB MODULES_HEADER <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/*.h&quot;</span> <span class="string">&quot;$&#123;CMAKE_SOURCE_DIR&#125;/vulkan/*.h&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="小功能"><a href="#小功能" class="headerlink" title="小功能"></a>小功能</h2><h3 id="CMake保证项目目录结构"><a href="#CMake保证项目目录结构" class="headerlink" title="CMake保证项目目录结构"></a>CMake保证项目目录结构</h3><p>通过<code>source_group</code>的应用，保证源目录及头文件目录，均显示在生成的目录结构中</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(ALL_FILES</span><br><span class="line">  src/SomeClass.cpp</span><br><span class="line">  <span class="keyword">include</span>/SomeClass.h</span><br><span class="line">  ...)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(MyLibrary <span class="variable">$&#123;ALL_FILES&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span>(<span class="keyword">FILE</span> <span class="variable">$&#123;ALL_FILES&#125;</span>) </span><br><span class="line">  <span class="keyword">get_filename_component</span>(PARENT_DIR <span class="string">&quot;$&#123;FILE&#125;&quot;</span> PATH)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># skip src or include and changes /&#x27;s to \\&#x27;s</span></span><br><span class="line">  <span class="keyword">string</span>(REGEX REPLACE <span class="string">&quot;(\\./)?(src|include)/?&quot;</span> <span class="string">&quot;&quot;</span> GROUP <span class="string">&quot;$&#123;PARENT_DIR&#125;&quot;</span>)</span><br><span class="line">  <span class="keyword">string</span>(REPLACE <span class="string">&quot;/&quot;</span> <span class="string">&quot;\\&quot;</span> GROUP <span class="string">&quot;$&#123;GROUP&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">  <span class="comment"># group into &quot;Source Files&quot; and &quot;Header Files&quot;</span></span><br><span class="line">  <span class="keyword">if</span> (<span class="string">&quot;$&#123;FILE&#125;&quot;</span> <span class="keyword">MATCHES</span> <span class="string">&quot;.*\\.cpp&quot;</span>)</span><br><span class="line">    <span class="keyword">set</span>(GROUP <span class="string">&quot;Source Files\\$&#123;GROUP&#125;&quot;</span>)</span><br><span class="line">  <span class="keyword">elseif</span>(<span class="string">&quot;$&#123;FILE&#125;&quot;</span> <span class="keyword">MATCHES</span> <span class="string">&quot;.*\\.h&quot;</span>)</span><br><span class="line">    <span class="keyword">set</span>(GROUP <span class="string">&quot;Header Files\\$&#123;GROUP&#125;&quot;</span>)</span><br><span class="line">  <span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line">  <span class="keyword">source_group</span>(<span class="string">&quot;$&#123;GROUP&#125;&quot;</span> FILES <span class="string">&quot;$&#123;FILE&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">endforeach</span>()</span><br></pre></td></tr></table></figure>

<h3 id="set-property"><a href="#set-property" class="headerlink" title="set_property"></a>set_property</h3><p><code>set_property()</code>在特定作用于下设置多种属性</p>
<h3 id="exclude-file-or-folder"><a href="#exclude-file-or-folder" class="headerlink" title="exclude file or folder"></a>exclude file or folder</h3><p><a href="https://stackoverflow.com/questions/7992951/cmake-aux-direcoty-exclude-pattern">解决方案</a></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">aux_source_directory</span>(src _srcFiles)</span><br><span class="line"><span class="keyword">list</span>(REMOVE_ITEM _srcFiles <span class="string">&quot;src/f4.cpp&quot;</span>)</span><br></pre></td></tr></table></figure>

<h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><ul>
<li><a href="http://www.vtk.org/Wiki/CMake/Examples#Recursively_add_subdirectories_to_INCLUDE_DIRECTORIES">递归添加子目录</a></li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac上安装并使用GLFW</title>
    <url>//posts/201627/</url>
    <content><![CDATA[<p>&emsp;&emsp;最开始是通过Clone GLFW在Github上的源码，<code>build</code>, <code>make</code>, <code>make install</code>， 后来发现用不了，总是报<code>ndefined symbols for architecture x86_64</code>, stackoverflow给出的大多数解释就是mac上c++版本过旧或者CMakeLists.txt文件里的flag没有指定对c++的库, 需要在CMakeLists.txt的Flag指定为<code>-std=c++11 -stdlib=libc++11</code></p>
<span id="more"></span>

<p>&emsp;&emsp;一番尝试后，还是同样的错误，后来Google<a href="http://stackoverflow.com/questions/23450334/opengl-3-3-4-1-on-mac-osx-10-9-using-glfw-library">如何在MAC上配置GLFW</a>，尝试着按照解释重新安装了一下GLFW，结果就行了<br>这是不是通过clone源码安装，而是通过brew， 前提是先安装<a href="http://brew.sh/">homebrew</a>以及xcode command line tools, 接下来依次执行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew update</span><br><span class="line">brew tap homebrew/versions</span><br><span class="line">brew install glfw3</span><br></pre></td></tr></table></figure>
<p>安装好后， GLFW头文件和库文件就分别被安装在<code>/usr/local/include</code>和<code>/usr/local/lib</code>目录下<br>&emsp;&emsp;接下来，用<a href="http://www.glfw.org/documentation.html">GLFW官方例子</a>测试, 将例子保存为<code>glfwTest.cpp</code>，执行下面命令就可以了</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gcc glfwTest.cpp -o myapp -framework OpenGl -I/usr/local/include -lglfw3</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>开发</category>
        <category>平台</category>
        <category>PC</category>
      </categories>
      <tags>
        <tag>OpenGL</tag>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>平台工具总结篇</title>
    <url>//posts/202001/</url>
    <content><![CDATA[<h2 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h2><p>1.<a href="https://iemulators.com/airshou">AirShou</a>，ios &lt; 11的屏幕录制工具</p>
<h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p><a href="https://canvas.apps.chrome/">在线画布工具</a></p>
<span id="more"></span>

<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><ol>
<li>Listary, Everything： 本地搜索神器， 两者都很强大  </li>
<li><a href="http://www.neoimaging.cn/">光影魔术手</a>： 图片格式转换，处理等，功能丰富</li>
<li><a href="https://www.sublimetext.com/">sublime Text</a>: 程序员必备良品，支持多格式文件编辑.</li>
<li>Cmder: Windows自带cmd的替代品，可以任意转换到git bash或powershell等, 支持分屏编辑，full版自带vim, git.  </li>
<li><a href="http://www.techsmith.com/camtasia.html">Camtasia Studio 8</a> : 门捕捉屏幕影音的工具软件。它能在任何颜色模式下轻松地记录屏幕动作，包括影像、音效、鼠标移动的轨迹，解说声音等等，另外，它还具有及时播放和编辑压缩的功能，可对视频片段进行剪接、添加转场效果。它输出的文件格式很多，有常用的AVI及GIF格式，还可输出为RM、WMV及MOV格式，用起来极其顺手.  </li>
<li><a href="http://mobaxterm.mobatek.net/">mobaxterm</a>： 远程连接服务器，和XShell类似  </li>
<li><a href="https://github.com/acgessler/open3mod">open3mod</a> : 3D模型查看器.  </li>
<li><a href="http://www.cheatengine.org/">Cheat Engine</a>： 百度云盘无限会员提速  </li>
<li><a href="https://www.bandicam.com/cn/">Bandicam</a>: 屏幕录制工具  </li>
<li><a href="http://store.steampowered.com/app/431960/Wallpaper_Engine/">Wallpaper Engine</a>: Steam平台上的一款Win桌面壁纸引擎</li>
<li>百度网盘下载[工具大师i]</li>
</ol>
<ul>
<li><a href="https://www.youtube.com/watch?v=J6zrnuCqidU">精选TOP3百度网盘不限速下载软件</a>  </li>
<li><a href="https://yixun.writeas.com/yi-xun">亿寻</a>  </li>
<li><a href="https://lanzous.com/icvbc9a">百度网盘下载</a></li>
</ul>
<ol start="12">
<li><a href="https://www.fosshub.com/SpaceSniffer.html">SpaceSniffer</a>:  强大且好用的硬盘空间分析软件</li>
</ol>
<h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h2><ol>
<li><a href="https://www.imagemagick.org/script/index.php">imagemagick</a>: <a href="http://jingyan.baidu.com/article/c33e3f48ab2a45ea15cbb5dd.html">图片分辨率转换</a></li>
<li><a href="https://github.com/robbyrussell/oh-my-zsh">oh my zsh</a>: 一款ubuntu终端提示符插件，可配合git使用，很炫</li>
<li><a href="https://getlantern.org/">Lantern</a>: 翻墙必备，免费而且速度也较快，同时支持Android, windows, mac，但官方没支持ios.</li>
<li><a href="https://launchpad.net/catfish-search/+download">Catfish</a>: 類似與Windows平臺的Listary，一款文件搜索工具，可以直接通過命令行<a href="https://help.ubuntu.com/community/Catfish">下載安裝</a></li>
<li><a href="http://shutter-project.org/">Shutter</a>:算是比较好用的一款截图工具，方便快捷，UI也没违和感，在软件中心安装即可，或者直接<code>sudo apt-get install shutter</code></li>
</ol>
<h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h2><ol>
<li>Right Zoom，win方式的窗口最大化</li>
<li>SizeUp, 同一</li>
<li>Recent，最近的工作app，效率提升</li>
<li>Dr.Cleaner.清理工具</li>
<li>Bartender 3</li>
<li>Alfred <a href="https://www.jianshu.com/p/e9f3352c785f">常用操作</a>, <a href="http://alfredworkflow.com/">插件</a></li>
<li><a href="http://www.mind168.com/2017/12/16/folx-pro-for-mac5-2/">Folx</a><br><a href="https://bbs.feng.com/forum.php?mod=viewthread&tid=11709856&mobile=no">Folx</a></li>
<li><a href="">Kaleidoscope</a></li>
<li><a href="https://www.52pojie.cn/thread-796355-1-1.html">StarUML</a></li>
<li><a href="https://www.coconut-flavour.com/coconutbattery/">coconutbattery</a></li>
<li><a href="https://docs.microsoft.com/en-us/windows-server/remote/remote-desktop-services/clients/remote-desktop-mac">Microsoft Remote Desktop for Mac</a></li>
<li>SourceTree, git管理工具</li>
<li>GiF Brewery3, 视频转GiF工具</li>
<li>MindMaster, 思维导图工具</li>
<li><a href="https://docs.anaconda.com/anaconda/install/index.html">Anaconda</a>, 包管理器, 支持多平台</li>
</ol>
<ul>
<li>安装iterm2 + Anaconda会出现<code>base</code>显示, <a href="https://stackoverflow.com/questions/54990385/iterm2-shell-prompt-now-shows-base)">conda config –set auto_activate_base false</a></li>
</ul>
<ol start="16">
<li><a href="https://www.macenjoy.net/">MacEnjoy</a>, 软件分享平台</li>
<li><a href="https://www.macz.com/">MacZ</a>, 软件分享平台</li>
<li><a href="https://macwk.com/">MacWK</a>, 软件分享平台</li>
</ol>
<h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><ol>
<li><a href="https://obsidian.md/">Obsidian</a>, 带思维图的MarkDown软件</li>
</ol>
<p>Mac设置指南<br><a href="https://www.kancloud.cn/kancloud/ocds-guide-to-setting-up-mac/71034">常用工具</a></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ul>
<li><a href="https://www.gamebench.net/">GameBench</a></li>
<li><a href="https://perfdog.qq.com/">PerfDog</a></li>
<li><a href="">WeTest</a></li>
</ul>
<p><em><strong>参考链接</strong></em></p>
<ul>
<li><a href="https://www.waerfa.com/category/download">玩儿法</a></li>
<li><a href="http://www.sdifen.com/">史蒂芬周</a></li>
</ul>
<p>如何<a href="http://www.sdifen.com/Sierraany.html">开启任何来源选项</a>:</p>
<ul>
<li>打开应用程序-实用工具-终端;</li>
<li>复制<code>sudo spctl --master-disable</code>到终端中,回车;</li>
<li>打开应用程序-系统偏好设置-安全性和隐私-通用,消失的任何来源终于出现了(默认应该是勾选了)</li>
</ul>
]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>Windows</tag>
        <tag>Mac</tag>
        <tag>IOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello Twikoo</title>
    <url>//posts/202002/</url>
    <content><![CDATA[<p>测试Twikoo评论系统</p>
<span id="more"></span>]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>批量转Webp小工具</title>
    <url>//posts/202003/</url>
    <content><![CDATA[<p>博客搭建过程中, 涉及图片的加载, 可能会遇到</p>
<ol>
<li>来源海外站点, 国内访问失败</li>
<li>图片本身较大, CDN带宽又不够</li>
</ol>
<p>第一种就需要CDN了, 目前处理第二种图片稍较大问题, 网络存储图片一般都是用webp格式, 体积小<br>较多这种转换webp软件还收费, 简单功能有点没必要  </p>
<span id="more"></span>

<h3 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h3><p><a href="https://developers.google.com/speed/webp/docs/cwebp">cwebp</a>, 支持多种格式, WebP, JPEG, PNG, PNM (PGM, PPM, PAM), TIFF  </p>
<p>借助工具, 写了个脚本</p>
<p>默认压缩质量75（0~100）, 直接执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ ./当前脚本.sh 目录名/</span><br></pre></td></tr></table></figure>

<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">clear</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> cwebp_files </span><br><span class="line">&#123;</span><br><span class="line">    folder=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    prefix=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">    extension=<span class="string">&quot;<span class="variable">$3</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查文件个数</span></span><br><span class="line">    count=`<span class="built_in">ls</span> -1 <span class="string">&quot;<span class="variable">$folder</span>&quot;</span>/<span class="string">&quot;<span class="variable">$prefix</span>&quot;</span>*<span class="string">&quot;<span class="variable">$extension</span>&quot;</span> 2&gt;/dev/null | <span class="built_in">wc</span> -l`</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;  扩展&quot;</span><span class="variable">$extension</span><span class="string">&quot;文件个数: <span class="variable">$count</span> \n&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$count</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 执行处理</span></span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$folder</span>&quot;</span>/<span class="string">&quot;<span class="variable">$prefix</span>&quot;</span>*<span class="string">&quot;<span class="variable">$extension</span>&quot;</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">printf</span> <span class="string">&quot;  <span class="variable">$f</span>\n&quot;</span></span><br><span class="line">            <span class="comment"># cwebp -vmt -q 90 $f -o &quot;$(dirname -- &quot;$f&quot;)/$(basename -- &quot;$f&quot; .jpg).webp&quot;</span></span><br><span class="line">            <span class="comment"># cwebp -v -mt -q 90 $f -o $&#123;f%.*&#125;.webp</span></span><br><span class="line">            cwebp <span class="variable">$f</span> -q 75 -o <span class="variable">$&#123;f%.*&#125;</span>.webp -quiet</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> gif2webp_files </span><br><span class="line">&#123;</span><br><span class="line">    folder=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    prefix=<span class="string">&quot;<span class="variable">$2</span>&quot;</span></span><br><span class="line">    extension=<span class="string">&quot;.gif&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 检查文件个数</span></span><br><span class="line">    count=`<span class="built_in">ls</span> -1 <span class="string">&quot;<span class="variable">$folder</span>&quot;</span>/<span class="string">&quot;<span class="variable">$prefix</span>&quot;</span>*<span class="string">&quot;<span class="variable">$extension</span>&quot;</span> 2&gt;/dev/null | <span class="built_in">wc</span> -l`</span><br><span class="line">    <span class="built_in">printf</span> <span class="string">&quot;  扩展&quot;</span><span class="variable">$extension</span><span class="string">&quot;文件个数: <span class="variable">$count</span> \n&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$count</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">        <span class="comment"># 执行处理</span></span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$folder</span>&quot;</span>/<span class="string">&quot;<span class="variable">$prefix</span>&quot;</span>*<span class="string">&quot;<span class="variable">$extension</span>&quot;</span></span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">printf</span> <span class="string">&quot;  <span class="variable">$f</span>\n&quot;</span></span><br><span class="line">            gif2webp <span class="variable">$f</span> -q 75 -o <span class="variable">$&#123;f%.*&#125;</span>.webp -quiet</span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义目标目录</span></span><br><span class="line"><span class="built_in">dir</span>=<span class="variable">$1</span></span><br><span class="line"><span class="comment"># ext=$2</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;====================== Webp Tools ======================&#x27;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;  \x1B[32m处理目录: \x1B[0m&quot;</span><span class="variable">$&#123;dir&#125;</span><span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;  \x1B[32m处理格式: \x1B[0mPNG, JPG, GIF\n&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;--------------------------------------------------------&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="subst">$(command -v cwebp)</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">printf</span> <span class="string">&quot;\n\x1B[33mWARNING \x1B[0m 未找到webp, 将尝试安装webp...\n&quot;</span></span><br><span class="line">    brew install webp</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ -x <span class="string">&quot;<span class="subst">$(command -v cwebp)</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">printf</span> <span class="string">&quot;\n\x1B[31mERROR \x1B[0m 尝试安装webp失败...\n&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> != <span class="string">&quot;&quot;</span> ] &amp;&amp; [ -d <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">	<span class="built_in">printf</span> <span class="string">&quot;  \x1B[32mINFO \x1B[0m 开始处理...\n&quot;</span></span><br><span class="line">    <span class="comment"># touch -c &quot;$dir&quot;/*</span></span><br><span class="line">    <span class="comment"># ls -l &quot;$dir&quot;</span></span><br><span class="line">    <span class="comment"># 调用函数, 传递文件夹路径、前缀及扩展名</span></span><br><span class="line">    <span class="comment"># cwebp_files &quot;$dir&quot; &quot;&quot; &quot;$ext&quot;</span></span><br><span class="line">    cwebp_files <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;.png&quot;</span></span><br><span class="line">    cwebp_files <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> <span class="string">&quot;&quot;</span> <span class="string">&quot;.jpg&quot;</span></span><br><span class="line">    <span class="comment"># cwebp_files &quot;$dir&quot; &quot;&quot; &quot;.jpeg&quot;</span></span><br><span class="line">    gif2webp_files <span class="string">&quot;<span class="variable">$dir</span>&quot;</span> <span class="string">&quot;&quot;</span></span><br><span class="line">	<span class="built_in">printf</span> <span class="string">&quot;  \x1B[32mINFO \x1B[0m 处理完成...\n&quot;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="built_in">printf</span> <span class="string">&quot;  \x1B[31mERROR \x1B[0m 输入错误，请返回重新指定待处理目录...\n&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<!-- more -->]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
  </entry>
  <entry>
    <title>PicGo Plugins记录</title>
    <url>//posts/202004/</url>
    <content><![CDATA[<p><a href="https://github.com/juzisang/picgo-plugin-compress/issues/2#issuecomment-1008007350">picgo-plugin-compress</a>, 用于 PicGo 的图片压缩插件,支持 TinyPng ImageMin</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/PicGo/0.webp"></p>
<span id="more"></span>

<p>出现安装失败, 一直提示安装中</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/PicGo/1.webp">  </p>
<p>1、 首先进入PicGo数据安装目录 (带node_modules及package.json等的Pico目录)参照该目录找.  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /Users/&lt;用户名&gt;/Library/Application Support/picgo </span><br></pre></td></tr></table></figure>
<p>2、 依赖安装  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">brew install libtool automake autoconf nasm</span><br></pre></td></tr></table></figure>
<p>3、 清理缓存  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm cache clean --force</span><br></pre></td></tr></table></figure>
<p>4、 删除已安装的node_modules  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -r &lt;PicGo目录&gt;/picgo/node_modules/</span><br></pre></td></tr></table></figure>
<p>5、 安装插件 (参照的是有镜像地址, 自己尝试加反而安装失败)  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install picgo-plugin-compress --save --ignore-scripts</span><br></pre></td></tr></table></figure>

<p>安装成功<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/P/PicGo/2.webp">  </p>
]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
  </entry>
  <entry>
    <title>CMake编译传递</title>
    <url>//posts/202101/</url>
    <content><![CDATA[<h4 id="传递使用要求-Transitive-Usage-Requirements"><a href="#传递使用要求-Transitive-Usage-Requirements" class="headerlink" title="传递使用要求 (Transitive Usage Requirements)"></a>传递使用要求 (Transitive Usage Requirements)</h4><p>Target的使用要求可以传递到依赖项. <code>target_link_libraries() </code>命令有 <code>PRIVATE</code>、<code>INTERFACE</code> 和 <code>PUBLIC </code>关键字来控制传递.  </p>
<p>当创建动态库时, </p>
<ul>
<li>若源文件(例如cpp)中包含第三方头文件，而头文件（例如hpp）中不包含该第三方文件头，采用<code>PRIVATE</code>。  </li>
<li>若源文件和头文件中都包含该第三方文件头，采用<code>PUBLIC</code>。  </li>
<li>若头文件中包含该第三方文件头，而源文件(例如cpp)中不包含，采用<code>INTERFACE</code>。</li>
</ul>
<span id="more"></span>

<p>举个例子吧. 有三个库<code>archive</code>、<code>archiveExtras</code>、<code>serialization</code>以及一可执行文件<code>consumer</code>。  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/C/CMake/0.webp">  </p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(archive archive.cpp)</span><br><span class="line"><span class="keyword">target_compile_definitions</span>(archive INTERFACE USING_ARCHIVE_LIB)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(serialization serialization.cpp)</span><br><span class="line"><span class="keyword">target_compile_definitions</span>(serialization INTERFACE USING_SERIALIZATION_LIB)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(archiveExtras extras.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(archiveExtras PUBLIC archive)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(archiveExtras PRIVATE serialization)</span><br><span class="line"><span class="comment"># archiveExtras is compiled with -DUSING_ARCHIVE_LIB</span></span><br><span class="line"><span class="comment"># and -DUSING_SERIALIZATION_LIB</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(consumer consumer.cpp)</span><br><span class="line"><span class="comment"># consumer is compiled with -DUSING_ARCHIVE_LIB</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(consumer archiveExtras)</span><br></pre></td></tr></table></figure>
<p>由于<code>archive</code>是<code>archiveExtras</code>的<code>PUBLIC</code> 依赖项, 因此它的使用要求也会传递给<code>consumer</code>. 因为<code>serialization</code>是<code>archiveExtras</code>的私有依赖，所以它的使用要求不会传递给<code>consumer</code>.</p>
<h4 id="接口库-Interface-Libraries"><a href="#接口库-Interface-Libraries" class="headerlink" title="接口库 (Interface Libraries)"></a>接口库 (Interface Libraries)</h4><p><code>INTERFACE</code> 目标没有 <code>LOCATION</code> 且是可变的，而且其他方面类似于 <code>IMPORTED</code> target.<br>它可以指定使用要求, 例如 <code>INTERFACE_INCLUDE_DIRECTORIES</code>、<code>INTERFACE_COMPILE_DEFINITIONS</code>、<code>INTERFACE_COMPILE_OPTIONS</code>、<code>INTERFACE_LINK_LIBRARIES</code> 和 <code>INTERFACE_POSITION_INDEPENDENT_CODE</code>.只有 <code>target_include_directories()</code>、<code>target_compile_definitions()</code>、<code>target_compile_options()</code> 和 <code>target_link_libraries()</code> 命令的 <code>INTERFACE</code> 模式可以与 <code>INTERFACE</code> 库一起使用.<br><code>INTERFACE</code>库的主要用例是仅含头文件的库.</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">add_library</span>(Eigen INTERFACE)</span><br><span class="line"><span class="keyword">target_include_directories</span>(Eigen INTERFACE</span><br><span class="line">  $&lt;BUILD_INTERFACE:<span class="variable">$&#123;CMAKE_CURRENT_SOURCE_DIR&#125;</span>/src&gt;</span><br><span class="line">  $&lt;INSTALL_INTERFACE:<span class="keyword">include</span>/Eigen&gt;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(exe1 exe1.cpp)</span><br><span class="line"><span class="keyword">target_link_libraries</span>(exe1 Eigen)</span><br></pre></td></tr></table></figure>
<p>这里, 来自<code>Eigen</code>目标的使用要求在编译时被消耗和使用, 但它对链接没有影响.</p>
<h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul>
<li><a href="https://cmake.org/cmake/help/v3.0/manual/cmake-buildsystem.7.html#transitive-usage-requirements">CMake transitive usage requirements</a></li>
<li><a href="https://stackoverflow.com/questions/26037954/cmake-target-link-libraries-interface-dependencies">CMake target_Link_libraries interface dependencies</a></li>
</ul>
]]></content>
      <categories>
        <category>开发</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>且行且学习</title>
    <url>//posts/202102/</url>
    <content><![CDATA[<h2 id="图形学"><a href="#图形学" class="headerlink" title="图形学"></a>图形学</h2><h3 id="教学"><a href="#教学" class="headerlink" title="教学"></a>教学</h3><p>【闫令琪】<a href="https://www.bilibili.com/video/BV1X7411F744/">GAMES101–现代计算机图形学入门</a><br>【闫令琪】<a href="https://www.bilibili.com/video/BV1YK4y1T7yY">GAMES202–高质量实时渲染</a>  </p>
<span id="more"></span>

<h3 id="课程"><a href="#课程" class="headerlink" title="课程"></a>课程</h3><p>【闫令琪】<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games101.html">GAMES101–现代计算机图形学入门</a><br>【闫令琪】<a href="https://sites.cs.ucsb.edu/~lingqi/teaching/games202.html">GAMES202–高质量实时渲染</a><br>【刘利刚】<a href="https://www.bilibili.com/video/BV1iT4y1o7oM">2020年中国科学技术大学《计算机图形学》本科课程</a><br>【OpenGL入门教程】<a href="https://learnopengl-cn.github.io/">LearnOpenGL中文版</a>  </p>
<h3 id="会议或期刊"><a href="#会议或期刊" class="headerlink" title="会议或期刊"></a>会议或期刊</h3><p><a href="https://www.siggraph.org/">SIGGRAPH &#x2F; SIGGRAPH ASIA</a><br><a href="https://www.eg.org/wp/">Eurographics (EG)</a><br><a href="https://pg2022.org/">Pacific Graphics（PG）</a><br><a href="http://i3dsymposium.github.io/">Symposium on Interactive 3D Graphics and Games (I3D)</a><br><a href="https://mig2021.inria.fr/submission/">The ACM SIGGRAPH Conference on Motion, Interaction and Games (MIG)</a><br><a href="https://ieeevr.org/">IEEE Conference on Virtual Reality and 3D User Interfaces (IEEE VR)</a><br><a href="https://dl.acm.org/journal/tog">ACM Transactions on Graphics (TOG)</a><br><a href="https://www.computer.org/csdl/journal/tg">IEEE Transactions on Visualization and Computer Graphics (TVCG)</a><br><a href="https://onlinelibrary.wiley.com/journal/14678659">Computer Graphics Forum (CGF)</a><br><a href="https://www.journals.elsevier.com/computers-and-graphics">Computers &amp; Graphics</a><br><a href="https://www.springer.com/journal/371">The Visual Computer</a><br><a href="https://onlinelibrary.wiley.com/journal/1546427x">Computer Animation and Virtual Worlds</a><br><a href="https://www.computer.org/csdl/magazine/cg">IEEE Computer Applications and Graphics</a><br><a href="https://www.springer.com/journal/41095/">Computational Visual Media</a> (CVMJ)  </p>
<h3 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h3><p><a href="https://github.com/Housz/awesome-simulation">图形、仿真</a><br><a href="https://github.com/miloyip/game-programmer">游戏编程学习路径</a><br><a href="https://github.com/Asuka109/GameProgramBooks">游戏编程书籍</a>  </p>
]]></content>
      <categories>
        <category>随记</category>
        <category>杂项</category>
      </categories>
  </entry>
  <entry>
    <title>免费的苹果开发者账号申请iOS证书</title>
    <url>//posts/202201/</url>
    <content><![CDATA[<p>本文介绍使用未付费688的苹果账号（apple id）申请ios证书打包ipa安装到未越狱苹果手机真机测试调试。</p>
<p>适用暂时未注册付费苹果开发者，需要进行打包iOS真机测试的需求，HBuilder、apicloud等平台适用，完全<strong>免费</strong>进行！</p>
<span id="more"></span>

<h4 id="苹果开发者账号类型"><a href="#苹果开发者账号类型" class="headerlink" title="苹果开发者账号类型"></a>苹果开发者账号类型</h4><table>
<thead>
<tr>
<th align="center">账号类型</th>
<th align="center">用途</th>
<th align="center">功能</th>
<th align="center">邓白氏码</th>
<th align="center">年费(人民币)</th>
</tr>
</thead>
<tbody><tr>
<td align="center">个人账号(免费)</td>
<td align="center">无需付年费688, 但只能用于真机测试APP, 无法上架App Store</td>
<td align="center">最多只能添加3台苹果设备(udid)真机测试</td>
<td align="center">不需要</td>
<td align="center">免费</td>
</tr>
<tr>
<td align="center">个人账号</td>
<td align="center">可测试和上架App Store, 苹果商店显示个人开发者名称</td>
<td align="center">没上架App Store前, 最多可添加100台苹果设备(udid)进行真机测试. 上架后无限制</td>
<td align="center">不需要</td>
<td align="center">688</td>
</tr>
<tr>
<td align="center">公司账号</td>
<td align="center">可测试和上架App Store, 苹果商店显示公司名称, 有些类型app只能通过公司账号上架</td>
<td align="center">没上架App Store前, 最多可添加100台苹果设备(udid)进行真机测试. 上架后无限制</td>
<td align="center">需要</td>
<td align="center">688</td>
</tr>
<tr>
<td align="center">政府账号</td>
<td align="center">可测试和上架App Store, 苹果商店显示政府事业单位名称</td>
<td align="center">没上架App Store前, 最多可添加100台苹果设备(udid)进行真机测试. 上架后无限制</td>
<td align="center">需要</td>
<td align="center">688</td>
</tr>
<tr>
<td align="center">企业账号</td>
<td align="center">不能用于上架App Store</td>
<td align="center">无需添加设备udid, 无安装数量限制, 适用无法上架App Store的app</td>
<td align="center">需要</td>
<td align="center">1988</td>
</tr>
</tbody></table>
<h4 id="免费的苹果开发者账号"><a href="#免费的苹果开发者账号" class="headerlink" title="免费的苹果开发者账号"></a>免费的苹果开发者账号</h4><p>再说下什么是<strong>免费</strong>的<strong>苹果开发者账号</strong>, 就是你没交688年费的就是<strong>免费</strong>账号, 如果你想变成付费开发者账号, 提交申请付费就行, 账号都是一样的账号</p>
<h4 id="苹果免费开发者账号的功能限制"><a href="#苹果免费开发者账号的功能限制" class="headerlink" title="苹果免费开发者账号的功能限制"></a>苹果免费开发者账号的功能限制</h4><blockquote>
<p>1、证书描述文件有效期只有7天，7天后要重新申请iOS证书打包（付费的一年）<br>2、最多只能添加3个udid测试设备（最多可以让3个手机安装，付费的100个）<br>3、只能通过手机助手安装如爱思助手安装（不能上传分发平台扫码下载安装,付费开发者可以扫码安装）</p>
</blockquote>
<h4 id="免费个人开发者账号申请ios证书打包ipa测试分五步进行"><a href="#免费个人开发者账号申请ios证书打包ipa测试分五步进行" class="headerlink" title="免费个人开发者账号申请ios证书打包ipa测试分五步进行"></a>免费个人开发者账号申请ios证书打包ipa测试分五步进行</h4><blockquote>
<p>1.申请一个苹果账号<br>2.申请ios测试证书（p12）<br>3.申请ios描述文件（mobileprovision）<br>4.打包ipa<br>5.安装ipa</p>
</blockquote>
<h5 id="1、申请苹果账号"><a href="#1、申请苹果账号" class="headerlink" title="1、申请苹果账号"></a>1、申请苹果账号</h5><p>如果还没注册过苹果账号，先注册一个，<strong>如果有苹果账号了请直接看第二步证书申请</strong>！</p>
<p>首先打开<a href="https://developer.apple.com/account">苹果开发者中心</a><br>如果已经申请过apple id，跳过注册，直接看后面步骤申请iOS证书</p>
<ul>
<li>点击立即创建您的apple id</li>
</ul>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/0.webp"></p>
<ul>
<li>跳转到apple id申请页面填写相关信息<ul>
<li>名字用汉字或者拼音写上去（注意写真实姓名，苹果审核可能会核查信息）</li>
<li>地区选中国大陆</li>
<li>日期随便写一个</li>
<li>安全提示问题设置一定要记住保存好，可以截图保存</li>
</ul>
</li>
</ul>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/1.webp"></p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/2.webp"></p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/3.webp"></p>
<p>点继续将会发送一份验证码邮件到邮箱，登录查看输入点继续</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/4.webp"></p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/5.webp"></p>
<ul>
<li>点继续注册会跳转到这个下面这个协议页面，勾选同意！（如果网络不好可能会加载一段时间，耐心等待）</li>
</ul>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/6.webp"></p>
<p>同意协议后出现下面这个页面，说明apple id注册好了！</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/7.webp"></p>
<p>如果是这种界面则是已经提交申请付费开发者，但没通过审核，也算是免费开发者账号！</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/8.webp"></p>
<p>只要是登录界面是上图其中一个的，说明已同意协议但未付费的个人开发者！现在就可以直接登录软件申请ios证书了</p>
<h5 id="2、申请ios测试证书（p12）"><a href="#2、申请ios测试证书（p12）" class="headerlink" title="2、申请ios测试证书（p12）"></a>2、申请ios测试证书（p12）</h5><p><em>iOS证书申请辅助工具Appuploader</em><br>可以帮助在Windows电脑直接申请iOS证书，如果是使用HBuilder、APICloud等工具跨平台开发，没有Mac的开发者，可以非常方便的申请iOS证书去打包苹果APP真机测试</p>
<h6 id="2-1-Appuploader安装教程"><a href="#2-1-Appuploader安装教程" class="headerlink" title="2.1 Appuploader安装教程"></a>2.1 <a href="http://www.applicationloader.net/blog/zh/72.html">Appuploader安装教程</a></h6><h6 id="2-2-打开Appuploader-用苹果开发者账号登录"><a href="#2-2-打开Appuploader-用苹果开发者账号登录" class="headerlink" title="2.2 打开Appuploader, 用苹果开发者账号登录"></a>2.2 打开Appuploader, 用<strong>苹果开发者账号</strong>登录</h6><!-- ![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/9.webp) -->

<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/9_.webp"></p>
<p>如果登录报错，先登录下<a href="https://developer.apple.com/account">苹果开发者账号</a>，同意下协议再登录Appuploader软件申请证书</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/10.webp"></p>
<!-- 正常登录会出现这个下图提示！
意思是只能申请iOS开发证书用于测试，不能上传ipa不能上架，上架需要付费688的开发账号。

![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/11.webp) -->

<h6 id="2-3-选择证书选项"><a href="#2-3-选择证书选项" class="headerlink" title="2.3 选择证书选项"></a>2.3 选择证书选项</h6><!-- ![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/12.webp) -->
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/12_.webp"></p>
<h6 id="2-4-选择iOS开发证书"><a href="#2-4-选择iOS开发证书" class="headerlink" title="2.4 选择iOS开发证书"></a>2.4 选择iOS开发证书</h6><ul>
<li>点击右下角+ADD选择, 下拉选择iOS开发证书<ul>
<li>输入证书名称：不要中文、随意设置</li>
<li>邮箱：（随意）</li>
<li>密码：证书的密码，不是开发者账号密码，如123这样不用很复杂，记好、打包时要用、很重要</li>
<li>应用id：这里不用选</li>
<li>点击ok创建。</li>
</ul>
</li>
</ul>
<!-- ![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/13.webp) -->
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/13_.webp"></p>
<p>如果账号已经有一个iOS开发证书了，将申请报错（如下图）免费开发者账号只能申请一个开发证书p12，可以删除掉再申请，或者直接用这个已经申请的</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/14.webp"></p>
<h6 id="2-5-P12文件下载"><a href="#2-5-P12文件下载" class="headerlink" title="2.5 P12文件下载"></a>2.5 P12文件下载</h6><p>申请到了，点击p12文件下载保存.p12 证书文件到电脑<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/14_.webp"></p>
<!-- ![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/15.webp) -->

<h5 id="3、申请ios描述文件（mobileprovision）"><a href="#3、申请ios描述文件（mobileprovision）" class="headerlink" title="3、申请ios描述文件（mobileprovision）"></a>3、申请ios描述文件（mobileprovision）</h5><h6 id="3-1、返回软件，选择描述文件"><a href="#3-1、返回软件，选择描述文件" class="headerlink" title="3.1、返回软件，选择描述文件"></a>3.1、返回软件，选择描述文件</h6><!-- ![](https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/16.webp) -->
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/16_.webp"></p>
<h6 id="3-2、添加应用id"><a href="#3-2、添加应用id" class="headerlink" title="3.2、添加应用id"></a>3.2、添加应用id</h6><ul>
<li>点击右下角+ADD，先选择添加应用id<ul>
<li>应用id：三段式格式、如app名称是淘宝，可以编写为com.app.taobao，自由编写！不能重复！具有唯一性@</li>
<li>名称：数字或者字母，自由编写，不要中文，不能重复。</li>
</ul>
</li>
</ul>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/17.webp"></p>
<p>如果添加报错（重复添加或者别人已用这个应用id），解决办法就是修改下应用id，重新编下<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/18.webp"></p>
<p>点击ok只要没弹出报错就是添加成功了，注意先关掉窗口，重新点右下角+ADD进入下拉应用id可查看刚添加的应用id是否存在。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/19.webp"></p>
<p>添加好应用id下步添加设置udid</p>
<h6 id="3-3、添加测试机"><a href="#3-3、添加测试机" class="headerlink" title="3.3、添加测试机"></a>3.3、添加测试机</h6><p>加好了应用id下一步添加用来测试的苹果手机，先获取UUID。<br><strong>苹果手机助手获取UDID</strong>, 如爱思助手，电脑下载爱思助手，连上苹果手机，设备信息里面那个设备标识就是udid。<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/20.webp"></p>
<p>获取到UUID、点击添加测试设备，复制到UDID框，输入设备名称（随意，不要中文），点击ok。<br>免费账号7天内最多只能添加3个手机进行测试.<br>如果报错下图，可能这个udid已经添加过，先关掉申请窗口，重新点右下角+ADD，选择开发版看有没有出现设备。  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/21.webp"></p>
<p>输入刚获取的udid（如果你的苹果手机链接了电脑，Appuploader会自动获取udid）<br>name：这个名称不用要中文，数字或者字母随意编写，不要跟之前添加过的名称一样就行。</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/22.webp"><br>添加成功后选择开发版profile在设备栏就会出现刚添加的设备！</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/23.webp"></p>
<ul>
<li>重新点击右下角的+ADD进入（才能同步到刚申请的appid和设备），选择开发版profile、</li>
<li>选择刚创建的appid 应用id 如com.app.taobao，勾选关联第一步创建的ios证书p12，选择刚添加要测试的设备。</li>
<li>输入名称（随意，123、abc之类的不要中文，因为不要跟之前的重复）</li>
<li>点击ok创建<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/24.webp"></li>
</ul>
<h6 id="3-5、点击下载保存-mobileprovision，描述文件。"><a href="#3-5、点击下载保存-mobileprovision，描述文件。" class="headerlink" title="3.5、点击下载保存.mobileprovision，描述文件。"></a>3.5、点击下载保存.mobileprovision，描述文件。</h6><p>苹果那边规定，没有付费688的苹果账号申请的描述文件只有7天有效期，付费苹果开发者账号的证书是1年有效期，到期可以重新申请打包，当然测试的话几天时间也足够了<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/25.webp"></p>
<h5 id="4-打包ipa"><a href="#4-打包ipa" class="headerlink" title="4.打包ipa"></a>4.打包ipa</h5><ul>
<li>各开发者工具打包教程，根据自己使用的平台去打包<br><a href="http://www.applicationloader.net/blog/zh/1642.html">开心APP打包网站教程</a><br><a href="http://www.applicationloader.net/blog/zh/423.html">HBuilder打包教程</a><br><a href="http://www.applicationloader.net/blog/zh/429.html">APICloud打包教程</a><br><a href="http://www.applicationloader.net/blog/zh/418.html">phonegap打包教程</a></li>
</ul>
<p>xcode打包和appcan打包无法使用，xcode需要付费开发者账号才能导出ipa<br>这里以HBuilder平台为例，其它平台不明白的可以加群交流。</p>
<h6 id="4-1、发行"><a href="#4-1、发行" class="headerlink" title="4.1、发行"></a>4.1、发行</h6><p>打开HBuilder工具，选择开发好的项目，点击发行，选择发行为原生安装包<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/26.webp"></p>
<h5 id="4-2、选择平台打包"><a href="#4-2、选择平台打包" class="headerlink" title="4.2、选择平台打包"></a>4.2、选择平台打包</h5><ul>
<li>选择iOS打包，支持的设备类型（可以选择支持iPhone和支持ipad），选择使用苹果证书<ul>
<li>AppID：跟申请证书描述.mobileprovision时选择的要一致（又称套装id，appid，BundleID，应用id，包名）</li>
<li>profile文件：选择上传配置文件.mobileprovision</li>
<li>私钥证书：上传.p12文件</li>
<li>私钥密码：输入创建p12设置的密码</li>
</ul>
</li>
</ul>
<p>然后点击打包  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/27.webp"></p>
<h5 id="4-3、打包成功后，下载保存ipa，这个ipa包就能安装到手机测试了"><a href="#4-3、打包成功后，下载保存ipa，这个ipa包就能安装到手机测试了" class="headerlink" title="4.3、打包成功后，下载保存ipa，这个ipa包就能安装到手机测试了"></a>4.3、打包成功后，下载保存ipa，这个ipa包就能安装到手机测试了</h5><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/28.webp"></p>
<h5 id="5、安装ipa"><a href="#5、安装ipa" class="headerlink" title="5、安装ipa"></a>5、安装ipa</h5><p><strong>免费</strong>开发者账号打包的app只能通过爱思助手安装！<br>如果需要上传蒲公英 fir等分发平台扫码安装请看这个教程、需要付费的开发者账号<br><a href="http://www.applicationloader.net/blog/zh/152.html">iOS APP真机调试图文介绍</a><br>1、普通账号申请的ios证书打包的ipa、经测试，苹果官方的iTunes助手安装不了，不要用这个. 用<a href="https://www.i4.cn/">爱思苹果助手</a>可以成功安装<br>连接上手机、点击应用游戏，点击导入安装，选择刚打包的ipa包，或者直接选择ipa包右键通过爱思助手安装<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/29.webp"><br>2、ipa将自动安装，类型是越狱版，安装成功后显示个人正版，因为是个人ios证书打包，没上架App Store<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/30.webp"><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/31.webp"><br>3、安装成功了第一次启动应用会出现如下提示，用测试证书或者企业证书打包的ipa都会这样，需要设置一下<br>点击设置、进入通用，下拉选择描述文件和设备管理<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/32.webp"> <img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/33.webp"></p>
<p>4、点击开发者应用下面出现的账号，信任，然后就能启动应用，不在出现提示<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/34.webp"> <img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/DevAccount/35.webp"></p>
<!-- http://cache.baiducontent.com/c?m=Ly2VEfuyC9-bB5UOFFDRtZGqCBL_nxeQAkkZFPeQxkVh3eklNEgwzX_Z__5T4VUfBzUf8z5QG1F0RH8dBYa3md8SAoZqF4wQUHjVZdKBTea0N90Znvpu6VO9iU9iwnLqCbtn6VnuCSp-J5nE8WkBnG61lMT3VO3mFkbHxvqfX-p2AmRHXQjTAQ8wkkWYrfDxcG21C3I3yS6EX15CWu1IFyIibtcW1VKBG4A5V5mLKkTETPmvFZWpbQrBS97mL9v-2S6ykda663F9jzhPLDrguq&p=9f759a46d39f12a05afbd1265040&newp=9b769a47889b07c308e2977b5b5c92695d0fc20e3bd0d701298ffe0cc4241a1a1a3aecbe25271202d2c5796406af4f57edf63d723d0034f1f689df08d2ecce7e71d06158&s=cfcd208495d565ef&user=baidu&fm=sc&query=%B8%F6%C8%CB%C3%E2%B7%D1%C9%EA%C7%EB%C6%BB%B9%FB%BF%AA%B7%A2%D5%DF%D5%CB%BA%C5&qid=e3b167fa000024a9&p1=10 -->]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>平台</category>
        <category>Mobile</category>
      </categories>
      <tags>
        <tag>IOS</tag>
      </tags>
  </entry>
  <entry>
    <title>UE指数高度雾(Exponential Height Fog)</title>
    <url>//posts/202202/</url>
    <content><![CDATA[<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/0.webp"></p>
<span id="more"></span>

<h3 id="文件相关"><a href="#文件相关" class="headerlink" title="文件相关"></a>文件相关</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C++</span></span><br><span class="line">HeightFogComponent.cpp</span><br><span class="line">FogRendering.cpp</span><br><span class="line">ExponentialHeightFogComponent.h</span><br><span class="line"></span><br><span class="line"><span class="comment">// Shaders</span></span><br><span class="line">HeightFogCommon.ush</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">* Others, </span></span><br><span class="line"><span class="comment">* different platforms or application scenarios, etc.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">MobileBasePassVertexShader.usf <span class="comment">// Base pass vertex shader used with forward shading</span></span><br><span class="line">MobileBasePassPixelShader.usf <span class="comment">// Base pass pixel shader used with forward shading</span></span><br><span class="line"></span><br><span class="line">HeightFogVertexShader.usf <span class="comment">// Scene fogging vertex shader</span></span><br><span class="line">HeightFogPixelShader.usf <span class="comment">// Scene fogging pixel shader</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>其中最泛的函数</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">half4 <span class="title function_">CalculateHeightFog</span><span class="params">(float3 WorldPositionRelativeToCamera)</span>;</span><br></pre></td></tr></table></figure>
<p>无论是VertexFog或是PixelFog, 基本都可直接调用该函数, 获取HeightFog和场景Color混合, 不同在于性能和效果权衡下</p>
<h3 id="雾的计算"><a href="#雾的计算" class="headerlink" title="雾的计算"></a>雾的计算</h3><p>计算雾效浓度衰减的公式如下</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Calculate the line integral of the ray from the camera to the receiver position through the fog density function</span></span><br><span class="line"><span class="comment">// The exponential fog density function is d = GlobalDensity * exp(-HeightFalloff * z)</span></span><br><span class="line"><span class="function"><span class="type">float</span> <span class="title">CalculateLineIntegralShared</span><span class="params">(<span class="type">float</span> FogHeightFalloff, <span class="type">float</span> RayDirectionZ, <span class="type">float</span> RayOriginTerms)</span></span></span><br><span class="line"><span class="function"></span>{</span><br><span class="line">	<span class="type">float</span> Falloff = <span class="built_in">max</span>(<span class="number">-127.0f</span>, FogHeightFalloff * RayDirectionZ);    <span class="comment">// if it's lower than -127.0, then exp2() goes crazy in OpenGL's GLSL.</span></span><br><span class="line">	<span class="type">float</span> LineIntegral = ( <span class="number">1.0f</span> - <span class="built_in">exp2</span>(-Falloff) ) / Falloff;</span><br><span class="line">	<span class="type">float</span> LineIntegralTaylor = <span class="built_in">log</span>(<span class="number">2.0</span>) - ( <span class="number">0.5</span> * <span class="built_in">Pow2</span>( <span class="built_in">log</span>(<span class="number">2.0</span>) ) ) * Falloff;		<span class="comment">// Taylor expansion around 0</span></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">return</span> RayOriginTerms * ( <span class="built_in">abs</span>(Falloff) &gt; FLT_EPSILON2 ? LineIntegral : LineIntegralTaylor );</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="comment">// Calculate the "shared" line integral (this term is also used for the directional light inscattering) by adding the two line integrals together (from two different height falloffs and densities)</span></span><br><span class="line"><span class="type">float</span> ExponentialHeightLineIntegralShared = <span class="built_in">CalculateLineIntegralShared</span>(FogStruct.ExponentialFogParameters.y, RayDirectionZ, RayOriginTerms) + <span class="built_in">CalculateLineIntegralShared</span>(FogStruct.ExponentialFogParameters2.y, RayDirectionZ, RayOriginTermsSecond);</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> DirExponentialHeightLineIntegral = ExponentialHeightLineIntegralShared * <span class="built_in">max</span>(RayLength - StartDistance, <span class="number">0.0f</span>);</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> ExponentialHeightLineIntegral = ExponentialHeightLineIntegralShared * RayLength;</span><br></pre></td></tr></table></figure>
<p>最终雾效颜色的计算公式如下</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">half3 FogColor = (InscatteringColor) * (<span class="number">1</span> - ExpFogFactor) + DirectionalInscattering;</span><br></pre></td></tr></table></figure>
<p>其中因式项拆分<br><em>DirectionalInscattering</em>, 光照散射部分, 同时便于调节视野雾效开始距离</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Calculate the line integral of the eye ray through the haze, using a special starting distance to limit the inscattering to the distance</span></span><br><span class="line"><span class="type">float</span> DirectionalInscatteringStartDistance = FogStruct.InscatteringLightDirection.w;</span><br><span class="line"><span class="type">float</span> DirExponentialHeightLineIntegral = ExponentialHeightLineIntegralShared * <span class="built_in">max</span>(RayLength - DirectionalInscatteringStartDistance, <span class="number">0.0f</span>);</span><br><span class="line"><span class="comment">// Calculate the amount of light that made it through the fog using the transmission equation</span></span><br><span class="line">half DirectionalInscatteringFogFactor = <span class="built_in">saturate</span>(<span class="built_in">exp2</span>(-DirExponentialHeightLineIntegral));</span><br><span class="line"><span class="comment">// Final inscattering from the light</span></span><br><span class="line">DirectionalInscattering = DirectionalLightInscattering * (<span class="number">1</span> - DirectionalInscatteringFogFactor);</span><br></pre></td></tr></table></figure>

<p><em>ExpFogFactor</em>, 雾效因子, 控制与输出颜色的混合程度<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="14.836ex" height="2.598ex" role="img" focusable="false" viewBox="0 -943.3 6557.6 1148.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(1204.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2260.1,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(3002.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(3724.6,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1717,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(2217,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mo" transform="translate(2793,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></g></svg></mjx-container><br>其中,<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.176ex" height="1.593ex" role="img" focusable="false" viewBox="0 -694 520 704"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g></g></g></svg></mjx-container>为<code>FogDensity</code><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.244ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 550 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container>为<code>FogHeightFalloff</code><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.303ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 576 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g></g></g></svg></mjx-container>为<code>CameraWorldPosition.z - FogHeight</code></p>
<p>公式对应的代码部分</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">float</span> RayOriginTerms = FogDensity * <span class="built_in">exp2</span>(-FogHeightFalloff * (CameraWorldPosition.z - FogHeight));</span><br></pre></td></tr></table></figure>
<p><em>InscatteringColor</em>, 光照本身的散射颜色部分<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.016ex;" xmlns="http://www.w3.org/2000/svg" width="18.169ex" height="5.643ex" role="img" focusable="false" viewBox="0 -1603.3 8030.7 2494.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(1204.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(2260.1,0)"><g data-mml-node="mrow" transform="translate(220,710)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(389,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(1111.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(2111.4,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1167,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(1717,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(2217,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2789,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4941.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mrow" transform="translate(1852.1,-686)"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(772.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1494.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><rect width="5530.6" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><br>其中,<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.464ex;" xmlns="http://www.w3.org/2000/svg" width="1.244ex" height="2.059ex" role="img" focusable="false" viewBox="0 -705 550 910"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g></g></g></svg></mjx-container>为<code>FogHeightFalloff</code><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="1.294ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 572 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g></g></svg></mjx-container>为<code>RayDirectionZ</code></p>
<p>加入散射, 雾效更具光感,<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="25.667ex" height="2.7ex" role="img" focusable="false" viewBox="0 -943.3 11344.9 1193.3"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1204.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(2260.1,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mo" transform="translate(2915.3,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(3637.6,0)"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(562,413) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g><g data-mml-node="mo" transform="translate(4775.1,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(5497.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(5886.3,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(6608.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(7608.8,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,413) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mo"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mo" transform="translate(778,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(1167,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(2093.6,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msub" transform="translate(2593.6,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mo" transform="translate(3520.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g><g data-mml-node="mo" transform="translate(10955.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><br>其中,<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.98ex" height="1.025ex" role="img" focusable="false" viewBox="0 -442 433 453"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></svg></mjx-container>为<code>lightColor</code><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.023ex;" xmlns="http://www.w3.org/2000/svg" width="1.197ex" height="1.02ex" role="img" focusable="false" viewBox="0 -441 529 451"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g></svg></mjx-container>为<code>dot(cameraToReceiver.xyz, lightDir.xyz)</code><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="0.971ex" height="1.595ex" role="img" focusable="false" viewBox="0 -694 429 705"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g></g></g></svg></mjx-container>为<code>exponent</code><br>最后,<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="19.957ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 8821 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(767.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(1823.6,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mo" transform="translate(2522.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mo" transform="translate(3245,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mn" transform="translate(3634,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4356.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(5356.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g></g><g data-mml-node="mo" transform="translate(6283,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6894.2,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="msub" transform="translate(7894.4,0)"><g data-mml-node="mi"><path data-c="1D466" d="M21 287Q21 301 36 335T84 406T158 442Q199 442 224 419T250 355Q248 336 247 334Q247 331 231 288T198 191T182 105Q182 62 196 45T238 27Q261 27 281 38T312 61T339 94Q339 95 344 114T358 173T377 247Q415 397 419 404Q432 431 462 431Q475 431 483 424T494 412T496 403Q496 390 447 193T391 -23Q363 -106 294 -155T156 -205Q111 -205 77 -183T43 -117Q43 -95 50 -80T69 -58T89 -48T106 -45Q150 -45 150 -87Q150 -107 138 -122T115 -142T102 -147L99 -148Q101 -153 118 -160T152 -167H160Q177 -167 186 -165Q219 -156 247 -127T290 -65T313 -9T321 21L315 17Q309 13 296 6T270 -6Q250 -11 231 -11Q185 -11 150 11T104 82Q103 89 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mn" transform="translate(523,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container><br>其中,<br><code>g</code>为<code>InscatteringColor</code><br>对应最终雾效颜色的计算公式如开始所述.</p>
<h4 id="设置相关"><a href="#设置相关" class="headerlink" title="设置相关"></a>设置相关</h4><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/1.webp"></p>
<ul>
<li><strong>Apply Fogging</strong>, 默认是<code>true</code>, 该材质是否参数雾效计算</li>
<li><strong>Apply Cloud Fogging</strong>, 默认是<code>false</code>, 计算云的贡献时, 会考虑雾效的影响</li>
<li><strong>Compute Fog Per Pixel</strong>, 默认是<code>false</code>, 该材质是否在<code>Frag</code>阶段计算雾效, 否则是在<code>Vert</code>阶段计算雾效, 对应宏<code>MATERIAL_COMPUTE_FOG_PER_PIXEL</code>, 应用范围为材质级别</li>
</ul>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/2.webp"></p>
<ul>
<li><strong>Disable vertex fogging on mobile shaders</strong>, 默认是<code>true</code>, 移动平台关闭雾效果, 对应宏<code>PROJECT_MOBILE_DISABLE_VERTEX_FOG</code></li>
<li><strong>Vertex Fogging to Opaque</strong>, 默认是<code>false</code>, 不透明BasePass且需要雾效下是否使用顶点雾, <code>false</code>时使用在<code>Frag</code>阶段计算雾效, 对应宏<code>PROJECT_VERTEX_FOGGING_FOR_OPAQUE</code></li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> USE_VERTEX_FOG					(!PROJECT_MOBILE_DISABLE_VERTEX_FOG) &amp;&amp; MATERIAL_ENABLE_TRANSLUCENCY_FOGGING</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NEEDS_BASEPASS_VERTEX_FOGGING		(TRANSLUCENCY_NEEDS_BASEPASS_FOGGING &amp;&amp; !MATERIAL_COMPUTE_FOG_PER_PIXEL || OPAQUE_NEEDS_BASEPASS_FOGGING &amp;&amp; PROJECT_VERTEX_FOGGING_FOR_OPAQUE)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NEEDS_BASEPASS_PIXEL_FOGGING		(TRANSLUCENCY_NEEDS_BASEPASS_FOGGING &amp;&amp; MATERIAL_COMPUTE_FOG_PER_PIXEL || OPAQUE_NEEDS_BASEPASS_FOGGING &amp;&amp; !PROJECT_VERTEX_FOGGING_FOR_OPAQUE)</span></span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>其他材质或Shader使用姿势</p>
<p><strong><code>ush</code>部分</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">if</span> PACK_INTERPOLANTS</span></span><br><span class="line">	float4 PackedInterps[NUM_VF_PACKED_INTERPOLANTS];</span><br><span class="line">	UNROLL </span><br><span class="line">	<span class="title function_">for</span><span class="params">(<span class="type">int</span> i = <span class="number">0</span>; i &lt; NUM_VF_PACKED_INTERPOLANTS; ++i)</span></span><br><span class="line">	{</span><br><span class="line">		PackedInterps[i] = <span class="number">0</span>;</span><br><span class="line">	}</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USE_VERTEX_FOG</span></span><br><span class="line">	float4 VertexFog = CalculateHeightFog(WorldPosition.xyz - ResolvedView.TranslatedWorldCameraOrigin);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Ignore the sky atmosphere impact.</span></span><br><span class="line"><span class="comment">// #if PROJECT_SUPPORT_SKY_ATMOSPHERE &amp;&amp; MATERIAL_IS_SKY==0 // Do not apply aerial perpsective on sky materials</span></span><br><span class="line"><span class="comment">// #endif</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> PACK_INTERPOLANTS</span></span><br><span class="line">	PackedInterps[<span class="number">0</span>] = VertexFog;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">	Output.BasePassInterpolants.VertexFog = VertexFog;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// PACK_INTERPOLANTS</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>

<p><strong><code>usf</code>部分</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">	half4 VertexFog = half4(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> USE_VERTEX_FOG</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> PACK_INTERPOLANTS</span></span><br><span class="line">	VertexFog = PackedInterpolants[<span class="number">0</span>];</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">	VertexFog = BasePassInterpolants.VertexFog;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// On mobile, water (an opaque material) is rendered as trnaslucent with forced premultiplied alpha blending (see MobileBasePass::SetTranslucentRenderState)</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> MATERIALBLENDING_ALPHACOMPOSITE || MATERIAL_SHADINGMODEL_SINGLELAYERWATER</span></span><br><span class="line">	OutColor = half4(Color * VertexFog.a + VertexFog.rgb * ShadingModelContext.Opacity, ShadingModelContext.Opacity);</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> MATERIALBLENDING_ALPHAHOLDOUT</span></span><br><span class="line">	<span class="comment">// not implemented for holdout</span></span><br><span class="line">	OutColor = half4(Color * VertexFog.a + VertexFog.rgb * ShadingModelContext.Opacity, ShadingModelContext.Opacity);</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> MATERIALBLENDING_TRANSLUCENT</span></span><br><span class="line">	OutColor = half4(Color * VertexFog.a + VertexFog.rgb, ShadingModelContext.Opacity);</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> MATERIALBLENDING_ADDITIVE</span></span><br><span class="line">	OutColor = half4(Color * (VertexFog.a * ShadingModelContext.Opacity.x), <span class="number">0.0f</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> MATERIALBLENDING_MODULATE</span></span><br><span class="line">	half3 FoggedColor = lerp(half3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>), Color, VertexFog.aaa * VertexFog.aaa);</span><br><span class="line">	OutColor = half4(FoggedColor, ShadingModelContext.Opacity);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">	OutColor.rgb = Color * VertexFog.a + VertexFog.rgb;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>UE</category>
      </categories>
      <tags>
        <tag>UnrealEngine</tag>
      </tags>
  </entry>
  <entry>
    <title>UE高度雾性能分析</title>
    <url>//posts/202203/</url>
    <content><![CDATA[<h4 id="测试条件"><a href="#测试条件" class="headerlink" title="测试条件"></a>测试条件</h4><table>
<thead>
<tr>
<th>机型</th>
<th>系统</th>
</tr>
</thead>
<tbody><tr>
<td>iPhone6s</td>
<td>IOS 14.3</td>
</tr>
</tbody></table>
<h4 id="影响因子"><a href="#影响因子" class="headerlink" title="影响因子"></a>影响因子</h4><p>移动平台的高度雾, 默认是Forward管线, 在BasePass上的<code>Vert</code>阶段计算雾效, 如<a href="../202202">UE指数高度雾</a>中分析, 因计算方法是固定的, 故而影响的因素比较单一. </p>
<ul>
<li>场景几何复杂度</li>
<li>体积雾的开启或关闭</li>
</ul>
<p>进而两个处理优化方向</p>
<ul>
<li>计算方法优化</li>
<li>场景几何复杂度优化</li>
</ul>
<span id="more"></span>

<p><strong>注意:</strong> 移动平台使用高度雾需关闭 <strong><code>Disable vertex fogging on mobile shaders</code></strong> 开关, 如下图所示.<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/2.webp"></p>
<h4 id="场景性能图"><a href="#场景性能图" class="headerlink" title="场景性能图"></a>场景性能图</h4><p>无雾效场景性能图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/3.webp"><br>有雾效场景性能图<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/4.webp"><br>无雾效时BasePass各Pass耗时<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/5.webp"></p>
<p>有雾效时BasePass各Pass耗时<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/6.webp"></p>
<p>有雾效场景近似GPUTime(1.96ms)此时相比无雾效场景GPUTime(2.35ms)耗时更低, </p>
<p>还可考虑对计算方法进行优化<br>诸如<br><strong><code>pow</code>函数优化</strong></p>
<p>雾效的计算多处使用了<code>pow</code>函数, 可以优化之<br>通用实现</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Generalized Power Function</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pow</span><span class="params">(<span class="type">float</span> x, <span class="type">float</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">exp</span>(<span class="built_in">log</span>(x) * n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>优化后</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Spherical Gaussian Power Function</span></span><br><span class="line"><span class="type">float</span> <span class="title function_">pow</span><span class="params">(<span class="type">float</span> x, <span class="type">float</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">    n = n * <span class="number">1.4427f</span> + <span class="number">1.4427f</span>; <span class="comment">// 1.4427f -&gt; 1/ln(2)</span></span><br><span class="line">    <span class="keyword">return</span> exp2(x*n-n); </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong><a href="UE%E6%8C%87%E6%95%B0%E9%AB%98%E5%BA%A6%E9%9B%BE.md">UE指数高度雾</a>部分删除部分中间方法</strong></p>
<ul>
<li><p>比如雾效的散射部分, 关闭<code>SUPPORT_FOG_DIRECTIONAL_LIGHT_INSCATTERING</code>宏或删除该部分<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/7.webp"></p>
</li>
<li><p>保持体积雾开关关闭 (注意: 若是修改组件里体积雾开关配置, 实际使用的可能不是该配置)<br> <img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/HeightFog/8.webp"></p>
</li>
</ul>
<!-- [关于pow的优化](https://blog.csdn.net/weixin_45979158/article/details/104656123) -->]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>UE</category>
      </categories>
      <tags>
        <tag>UnrealEngine</tag>
      </tags>
  </entry>
  <entry>
    <title>UE贴花光照烘培难点分析</title>
    <url>//posts/202204/</url>
    <content><![CDATA[<h4 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h4><p>项目里, 经常使用很多贴花去补充一些细节<br>所以想尝试一下移动端带光照的贴花, 截至UE 4.27版本移动端贴花仅支持平行光光照, 而<strong>不支持烘焙</strong></p>
<span id="more"></span>

<h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><p>其中涉及的几个比较重要的分支宏, 控制同一套Shader的不同处理流程</p>
<table>
<thead>
<tr>
<th align="center">宏\同场景下测试平台值</th>
<th align="center">PC</th>
<th align="center">Mobile</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>DECAL_RENDERTARGET_COUNT</code></td>
<td align="center"><code>3</code></td>
<td align="center"><code>1</code></td>
<td>控制GBuffer缓存的个数</td>
</tr>
<tr>
<td align="center"><code>DECAL_OUTPUT_NORMAL</code></td>
<td align="center"><code>false</code></td>
<td align="center"></td>
<td></td>
</tr>
<tr>
<td align="center"><code>DECAL_RENDERSTAGE</code></td>
<td align="center"><code>2</code></td>
<td align="center"><code>3</code></td>
<td>0:before base pass, <br>1:after base pass, <br>2:before lighting, <br>3:mobile</td>
</tr>
<tr>
<td align="center"><code>DECAL_BLEND_MODE</code></td>
<td align="center"><code>DBM_Translucent</code></td>
<td align="center"><code>DBM_Translucent</code></td>
<td></td>
</tr>
</tbody></table>
<h5 id="PC平台"><a href="#PC平台" class="headerlink" title="PC平台"></a>PC平台</h5><h6 id="管线"><a href="#管线" class="headerlink" title="管线"></a>管线</h6><p>PC贴花预灯光<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/Decal/0.webp"><br>PC贴花灯光<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/Decal/1.webp"></p>
<h6 id="C-部分"><a href="#C-部分" class="headerlink" title="C++部分"></a>C++部分</h6><p>计算最后的贴花混合模式等, 当满足诸如移动延迟渲染等条件, 会触发一定强制转换</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">/** Returns if the GBuffer is used. Only valid for the current platform. */</span></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">IsUsingGBuffers</span><span class="params">(<span class="type">const</span> FStaticShaderPlatform Platform)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">IsMobilePlatform</span>(Platform))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">IsMobileDeferredShadingEnabled</span>(Platform);</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> EDecalBlendMode <span class="title">ComputeFinalDecalBlendMode</span><span class="params">(EShaderPlatform Platform, EDecalBlendMode DecalBlendMode, <span class="type">bool</span> bUseNormal)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// </span></span><br><span class="line">    <span class="type">const</span> <span class="type">bool</span> bShouldConvertToDBuffer = !<span class="built_in">IsUsingGBuffers</span>(Platform) &amp;&amp; !<span class="built_in">IsSimpleForwardShadingEnabled</span>(Platform) &amp;&amp; <span class="built_in">IsUsingDBuffers</span>(Platform);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>贴花渲染自发光相比常规延迟贴花多一些参数设置</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DecalRenderingShared.cpp</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">FDecalRendering::SetShader</span><span class="params">(FRHICommandList&amp; RHICmdList, ...)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="comment">// When in shader complexity, decals get rendered as emissive even though there might not be emissive decals.</span></span><br><span class="line">	<span class="comment">// FDeferredDecalEmissivePS might not be available depending on the decal blend mode.</span></span><br><span class="line">	TShaderRef&lt;FDeferredDecalPS&gt; PixelShader = (DecalRenderStage == DRS_Emissive &amp;&amp; DebugViewMode == DVSM_None)</span><br><span class="line">		? <span class="built_in">TShaderRef</span>&lt;FDeferredDecalPS&gt;(MaterialShaderMap-&gt;<span class="built_in">GetShader</span>&lt;FDeferredDecalEmissivePS&gt;())</span><br><span class="line">		: MaterialShaderMap-&gt;<span class="built_in">GetShader</span>&lt;FDeferredDecalPS&gt;();</span><br><span class="line"></span><br><span class="line">	<span class="function">TShaderMapRef&lt;FDeferredDecalVS&gt; <span class="title">VertexShader</span><span class="params">(View.ShaderMap)</span></span>;</span><br><span class="line">    PixelShader-&gt;<span class="built_in">SetParameters</span>(...);</span><br><span class="line">    VertexShader-&gt;<span class="built_in">SetParameters</span>(...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h6 id="Shader部分"><a href="#Shader部分" class="headerlink" title="Shader部分"></a>Shader部分</h6><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DeferredDecal.usf</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">FPixelShaderInOut_MainPS</span><span class="params">(inout FPixelShaderIn In, inout FPixelShaderOut Out)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    FGBufferData GBufferData;</span><br><span class="line">    GBufferData.BaseColor = BaseColor;</span><br><span class="line">    GBufferData.Metallic = Metallic;</span><br><span class="line">    GBufferData.Specular = Specular;</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    DecalCommonOutput(In, Out, Color, Opacity, GBufferData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">DecalCommonOutput</span><span class="params">(inout FPixelShaderIn In, inout FPixelShaderOut Out, ... FGBufferData Data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// RETURN_COLOR not needed unless writing to SceneColor</span></span><br><span class="line">    Out.MRT[<span class="number">0</span>] = float4(Color, Opacity);</span><br><span class="line">    ...</span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> DECAL_RENDERTARGET_COUNT &gt; 1</span></span><br><span class="line">        <span class="meta">#<span class="keyword">if</span> DECAL_RENDERSTAGE == 0</span></span><br><span class="line">        <span class="comment">// some MRT rendering</span></span><br><span class="line">        <span class="meta">#<span class="keyword">elif</span> DECAL_RENDERSTAGE == 1 || DECAL_RENDERSTAGE == 2 || DECAL_RENDERSTAGE == 3</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 1 == after base pass (GBuffer) || 2 = before lighting (GBuffer)</span></span><br><span class="line"></span><br><span class="line">            <span class="meta">#<span class="keyword">if</span> DECAL_OUTPUT_NORMAL</span></span><br><span class="line">                EncodeGBuffer(Data, Out.MRT[<span class="number">1</span>], Out.MRT[<span class="number">2</span>], Out.MRT[<span class="number">3</span>], OutTarget4, OutTarget5, OutTarget6);</span><br><span class="line">            <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">                EncodeGBuffer(Data, OutTarget1, Out.MRT[<span class="number">1</span>], Out.MRT[<span class="number">2</span>], OutTarget4, OutTarget5, OutTarget6);</span><br><span class="line">            <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        &#125;</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DecalCommon.ush</span></span><br><span class="line"><span class="comment">/** Populates OutGBufferA, B and C */</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">EncodeGBuffer</span><span class="params">(</span></span><br><span class="line"><span class="params">	FGBufferData GBuffer,</span></span><br><span class="line"><span class="params">	out float4 OutGBufferA,</span></span><br><span class="line"><span class="params">	out float4 OutGBufferB,</span></span><br><span class="line"><span class="params">	out float4 OutGBufferC,</span></span><br><span class="line"><span class="params">        ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    OutGBufferB.r = GBuffer.Metallic;</span><br><span class="line">    OutGBufferB.g = GBuffer.Specular;</span><br><span class="line">    OutGBufferB.b = GBuffer.Roughness;</span><br><span class="line">    OutGBufferB.a = EncodeShadingModelIdAndSelectiveOutputMask(GBuffer.ShadingModelID, GBuffer.SelectiveOutputMask);</span><br><span class="line"></span><br><span class="line">    OutGBufferC.rgb = EncodeBaseColor( GBuffer.BaseColor );</span><br><span class="line"><span class="meta">#<span class="keyword">if</span> ALLOW_STATIC_LIGHTING</span></span><br><span class="line">    <span class="comment">// No space for AO. Multiply IndirectIrradiance by AO instead of storing.</span></span><br><span class="line">    OutGBufferC.a = EncodeIndirectIrradiance(GBuffer.IndirectIrradiance * GBuffer.GBufferAO) + QuantizationBias * (<span class="number">1.0</span> / <span class="number">255.0</span>);</span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">    OutGBufferC.a = GBuffer.GBufferAO;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DeferredLightPixelShaders.usf</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DeferredLightPixelMain</span><span class="params">(</span></span><br><span class="line"><span class="params">    ...</span></span><br><span class="line"><span class="params">    out float4 OutColor		: SV_Target0</span></span><br><span class="line"><span class="params">    )</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    FScreenSpaceData ScreenSpaceData = GetScreenSpaceData(InputParams.ScreenUV);</span><br><span class="line">    ...</span><br><span class="line">    <span class="type">const</span> float4 Radiance = GetDynamicLighting(..., ScreenSpaceData.GBuffer, ...);</span><br><span class="line">    <span class="type">const</span> <span class="type">float</span>  Attenuation = ComputeLightProfileMultiplier(...);</span><br><span class="line">    OutColor += (Radiance * Attenuation);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DeferredShadingCommon.ush</span></span><br><span class="line"><span class="comment">// @param UV - UV space in the GBuffer textures (BufferSize resolution)</span></span><br><span class="line">FScreenSpaceData <span class="title function_">GetScreenSpaceData</span><span class="params">(float2 UV, <span class="type">bool</span> bGetNormalizedNormal = <span class="literal">true</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    FScreenSpaceData Out;</span><br><span class="line">    Out.GBuffer = GetGBufferData(UV, bGetNormalizedNormal);</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> Out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @param UV - UV space in the GBuffer textures (BufferSize resolution)</span></span><br><span class="line">FGBufferData <span class="title function_">GetGBufferData</span><span class="params">(float2 UV, <span class="type">bool</span> bGetNormalizedNormal = <span class="literal">true</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    float4 GBufferC = Texture2DSampleLevel(SceneTexturesStruct.GBufferCTexture, SceneTexturesStruct_GBufferCTextureSampler, UV, <span class="number">0</span>);</span><br><span class="line">    ...</span><br><span class="line">    <span class="keyword">return</span> DecodeGBufferData(GBufferA, GBufferB, GBufferC, ...);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DeferredLightingCommon.usf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/** Calculates lighting for a given position, normal, etc with a fully featured lighting model designed for quality. */</span></span><br><span class="line">FDeferredLightingSplit <span class="title function_">GetDynamicLightingSplit</span><span class="params">(..., FGBufferData GBuffer, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="meta">#<span class="keyword">if</span> NON_DIRECTIONAL_DIRECT_LIGHTING</span></span><br><span class="line">        <span class="type">float</span> Lighting;</span><br><span class="line"></span><br><span class="line">        Lighting = IntegrateLight(...);</span><br><span class="line"></span><br><span class="line">        float3 LightingDiffuse = Diffuse_Lambert( GBuffer.DiffuseColor ) * Lighting;</span><br><span class="line">        LightAccumulator_AddSplit(LightAccumulator, LightingDiffuse, <span class="number">0.0f</span>, <span class="number">0</span>, ...);</span><br><span class="line">    <span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        FDirectLighting Lighting;</span><br><span class="line">        Lighting = IntegrateBxDF( GBuffer, ...);</span><br><span class="line">        Lighting.Specular *= LightData.SpecularScale;</span><br><span class="line">				</span><br><span class="line">        LightAccumulator_AddSplit( LightAccumulator, Lighting.Diffuse, Lighting.Specular, Lighting.Diffuse, LightColor * LightMask * Shadow.SurfaceShadow, ...);</span><br><span class="line">        LightAccumulator_AddSplit( LightAccumulator, Lighting.Transmission, <span class="number">0.0f</span>, Lighting.Transmission, LightColor * LightMask * Shadow.TransmissionShadow, ...);</span><br><span class="line">    <span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h5 id="移动平台"><a href="#移动平台" class="headerlink" title="移动平台"></a>移动平台</h5><h6 id="管线-1"><a href="#管线-1" class="headerlink" title="管线"></a>管线</h6><p>移动端地板<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/Decal/2.webp"><br>移动端贴花<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/D/Decal/3.webp"></p>
<h6 id="C-相关"><a href="#C-相关" class="headerlink" title="C++相关"></a>C++相关</h6><p>准备好Decal Pass所需Shader</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// MobileDecalRendering.cpp: Decals for mobile renderer</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">RenderDeferredDecalsMobile</span><span class="params">(FRHICommandList&amp; RHICmdList, ...)</span></span><br><span class="line">&#123;</span><br><span class="line">    ...</span><br><span class="line">    <span class="comment">// Set shader params</span></span><br><span class="line">    FDecalRendering::SetShader(...);</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>计算移动平台所需的参数, 诸如贴花混合模式、RenderTarget类型等</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">// DecalRenderingCommon.h</span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> ERenderTargetMode <span class="title function_">ComputeRenderTargetMode</span><span class="params">(EShaderPlatform Platform, EDecalBlendMode DecalBlendMode, <span class="type">bool</span> bHasNormal)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (IsMobilePlatform(Platform))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> IsMobileDeferredShadingEnabled(Platform) ? RTM_SceneColorAndGBufferWithNormal : RTM_SceneColor;</span><br><span class="line">    &#125;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// @return DECAL_RENDERTARGET_COUNT for the shader</span></span><br><span class="line"><span class="type">static</span> uint32 <span class="title function_">ComputeRenderTargetCount</span><span class="params">(EShaderPlatform Platform, ERenderTargetMode RenderTargetMode)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// has to be SceneColor on mobile </span></span><br><span class="line">    check(!IsMobilePlatform(Platform) || RenderTargetMode == RTM_SceneColor || IsMobileDeferredShadingEnabled(Platform));</span><br><span class="line">    ...</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="可行性方案探究"><a href="#可行性方案探究" class="headerlink" title="可行性方案探究"></a>可行性方案探究</h4><p>移动端贴花的渲染仅以一定透明度的方式, 叠到SceneColor上去</p>
<h5 id="一"><a href="#一" class="headerlink" title="一"></a>一</h5><ul>
<li>步骤<ul>
<li>延迟贴花渲染Pass上, 转换贴花uv到接受贴花的mesh uv空间, 采样烘培纹理混合</li>
</ul>
</li>
<li>问题<ul>
<li>烘培纹理难获取</li>
<li>uv跨mesh转换难, 尤其针对一贴花跨多mesh</li>
</ul>
</li>
</ul>
<h5 id="二"><a href="#二" class="headerlink" title="二"></a>二</h5><ul>
<li>步骤<ul>
<li>在BasePass前插入Decal Pass, 单独渲染贴花到纹理T0上, (类似PC上贴花渲染到GBufferC上)</li>
<li>以混合T0及SceneColor纹理, 替代延迟贴花渲染Pass</li>
<li>后续Decal Pass去掉</li>
</ul>
</li>
<li>问题<ul>
<li>贴花的着色计算复杂度较高, 后续的着色步骤基本按需移植</li>
</ul>
</li>
</ul>
<h5 id="三"><a href="#三" class="headerlink" title="三"></a>三</h5><ul>
<li>能否使用LightProbe方式?</li>
</ul>
<p>无论哪种方式, 若解决上述问题, 均可保证贴花在移动过程中, 能做到与烘培的投影面混合</p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>UE</category>
      </categories>
      <tags>
        <tag>UnrealEngine</tag>
      </tags>
  </entry>
  <entry>
    <title>阴影算法小结</title>
    <url>//posts/202301/</url>
    <content><![CDATA[<h3 id="PCF-Percentage-Closer-Filtering"><a href="#PCF-Percentage-Closer-Filtering" class="headerlink" title="PCF (Percentage Closer Filtering)"></a>PCF (Percentage Closer Filtering)</h3><p><figure><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/0.webp" alt="复杂的汽车"><figcaption aria-hidden="true">复杂的汽车</figcaption></figure>  </p>
<span id="more"></span>

<p>算法步骤<br>a. 对每个Fragment, 执行多个(例如7x7)深度比较<br>b. 对比较的结果求平均  </p>
<p>计算公式  </p>
<p>卷积公式 (Filter/Convolution)<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex;" xmlns="http://www.w3.org/2000/svg" width="30.225ex" height="5.371ex" role="img" focusable="false" viewBox="0 -950 13359.4 2374.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1216.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mi" transform="translate(1938.4,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(2488.4,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(2766.4,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(3155.4,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(3727.4,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4394.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munder" transform="translate(5450,0)"><g data-mml-node="mo" transform="translate(443.3,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1127,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1780,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(7947.3,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(716,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1105,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1608,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(2052.7,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(2512.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3123.9,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="mi" transform="translate(3624.1,0)"><path data-c="1D453" d="M118 -162Q120 -162 124 -164T135 -167T147 -168Q160 -168 171 -155T187 -126Q197 -99 221 27T267 267T289 382V385H242Q195 385 192 387Q188 390 188 397L195 425Q197 430 203 430T250 431Q298 431 298 432Q298 434 307 482T319 540Q356 705 465 705Q502 703 526 683T550 630Q550 594 529 578T487 561Q443 561 443 603Q443 622 454 636T478 657L487 662Q471 668 457 668Q445 668 434 658T419 630Q412 601 403 552T387 469T380 433Q380 431 435 431Q480 431 487 430T498 424Q499 420 496 407T491 391Q489 386 482 386T428 385H372L349 263Q301 15 282 -47Q255 -132 212 -173Q175 -205 139 -205Q107 -205 81 -186T55 -132Q55 -95 76 -78T118 -61Q162 -61 162 -103Q162 -122 151 -136T127 -157L118 -162Z"></path></g><g data-mml-node="mo" transform="translate(4174.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4563.1,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(5023.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container>  </p>
<p>PCF解决什么问题<br>a. 本影和半影区非柔和的效果<br>b. 若直接对Shadow Map图做PCF, 最终仍是非0即1, 是一种对Shadow比较的结果做滤波</p>
<h3 id="PCSS-Percentage-Closer-Soft-Shadows-3"><a href="#PCSS-Percentage-Closer-Soft-Shadows-3" class="headerlink" title="PCSS (Percentage-Closer Soft Shadows)3"></a>PCSS (Percentage-Closer Soft Shadows)<sup><a href="https://developer.download.nvidia.com/shaderlibrary/docs/shadow_PCSS.pdf">3</a></sup></h3><p><figure><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/1.webp" alt="纸上的阴影"><figcaption aria-hidden="true">纸上的阴影</figcaption></figure></p>
<p>PCSS解决什么问题<br>a. 阴影是否柔和<br>b. 阴影效果什么时候用小Kernel滤波, 什么时候用大Kernel滤波 (实际是否拉近硬, 拉远软而柔和)  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/2.webp"></p>
<p>算法步骤<br>a. Blocker Search, 获取特定区域平均的Blocker深度<br>b. 半影区估计, 基于Blocker深度决定滤波Kernel大小<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.909ex;" xmlns="http://www.w3.org/2000/svg" width="40.056ex" height="5.314ex" role="img" focusable="false" viewBox="0 -1505 17704.8 2348.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(751,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1217,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1817,0)"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2389,0)"><path data-c="1D45A" d="M21 287Q22 293 24 303T36 341T56 388T88 425T132 442T175 435T205 417T221 395T229 376L231 369Q231 367 232 367L243 378Q303 442 384 442Q401 442 415 440T441 433T460 423T475 411T485 398T493 385T497 373T500 364T502 357L510 367Q573 442 659 442Q713 442 746 415T780 336Q780 285 742 178T704 50Q705 36 709 31T724 26Q752 26 776 56T815 138Q818 149 821 151T837 153Q857 153 857 145Q857 144 853 130Q845 101 831 73T785 17T716 -10Q669 -10 648 17T627 73Q627 92 663 193T700 345Q700 404 656 404H651Q565 404 506 303L499 291L466 157Q433 26 428 16Q415 -11 385 -11Q372 -11 364 -4T353 8T350 18Q350 29 384 161L420 307Q423 322 423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 181Q151 335 151 342Q154 357 154 369Q154 405 129 405Q107 405 92 377T69 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(3267,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(3696,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(4147,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4383.2,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5439,0)"><g data-mml-node="mrow" transform="translate(220,755)"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msub" transform="translate(389,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D445" d="M230 637Q203 637 198 638T193 649Q193 676 204 682Q206 683 378 683Q550 682 564 680Q620 672 658 652T712 606T733 563T739 529Q739 484 710 445T643 385T576 351T538 338L545 333Q612 295 612 223Q612 212 607 162T602 80V71Q602 53 603 43T614 25T640 16Q668 16 686 38T712 85Q717 99 720 102T735 105Q755 105 755 93Q755 75 731 36Q693 -21 641 -21H632Q571 -21 531 4T487 82Q487 109 502 166T517 239Q517 290 474 313Q459 320 449 321T378 323H309L277 193Q244 61 244 59Q244 55 245 54T252 50T269 48T302 46H333Q339 38 339 37T336 19Q332 6 326 0H311Q275 2 180 2Q146 2 117 2T71 2T50 1Q33 1 33 10Q33 12 36 24Q41 43 46 45Q50 46 61 46H67Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628Q287 635 230 637ZM630 554Q630 586 609 608T523 636Q521 636 500 636T462 637H440Q393 637 386 627Q385 624 352 494T319 361Q319 360 388 360Q466 361 492 367Q556 377 592 426Q608 449 619 486T630 554Z"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1225,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1658,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2124,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(2469,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(2954,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(3420,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(3951.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(4951.7,0)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1057,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1542,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1975,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(2496,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2962,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7968,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(8579.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msub" transform="translate(9301.5,0)"><g data-mml-node="mi"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="TeXAtom" transform="translate(749,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D43F" d="M228 637Q194 637 192 641Q191 643 191 649Q191 673 202 682Q204 683 217 683Q271 680 344 680Q485 680 506 683H518Q524 677 524 674T522 656Q517 641 513 637H475Q406 636 394 628Q387 624 380 600T313 336Q297 271 279 198T252 88L243 52Q243 48 252 48T311 46H328Q360 46 379 47T428 54T478 72T522 106T564 161Q580 191 594 228T611 270Q616 273 628 273H641Q647 264 647 262T627 203T583 83T557 9Q555 4 553 3T537 0T494 -1Q483 -1 418 -1T294 0H116Q32 0 32 10Q32 17 34 24Q39 43 44 45Q48 46 59 46H65Q92 46 125 49Q139 52 144 61Q147 65 216 339T285 628Q285 635 228 637Z"></path></g><g data-mml-node="mi" transform="translate(681,0)"><path data-c="1D456" d="M184 600Q184 624 203 642T247 661Q265 661 277 649T290 619Q290 596 270 577T226 557Q211 557 198 567T184 600ZM21 287Q21 295 30 318T54 369T98 420T158 442Q197 442 223 419T250 357Q250 340 236 301T196 196T154 83Q149 61 149 51Q149 26 166 26Q175 26 185 29T208 43T235 78T260 137Q263 149 265 151T282 153Q302 153 302 143Q302 135 293 112T268 61T223 11T161 -11Q129 -11 102 10T74 74Q74 91 79 106T122 220Q160 321 166 341T173 380Q173 404 156 404H154Q124 404 99 371T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1026,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g><g data-mml-node="mi" transform="translate(1503,0)"><path data-c="210E" d="M137 683Q138 683 209 688T282 694Q294 694 294 685Q294 674 258 534Q220 386 220 383Q220 381 227 388Q288 442 357 442Q411 442 444 415T478 336Q478 285 440 178T402 50Q403 36 407 31T422 26Q450 26 474 56T513 138Q516 149 519 151T535 153Q555 153 555 145Q555 144 551 130Q535 71 500 33Q466 -10 419 -10H414Q367 -10 346 17T325 74Q325 90 361 192T398 345Q398 404 354 404H349Q266 404 205 306L198 293L164 158Q132 28 127 16Q114 -11 83 -11Q69 -11 59 -2T48 16Q48 30 121 320L195 616Q195 629 188 632T149 637H128Q122 643 122 645T124 664Q129 683 137 683Z"></path></g><g data-mml-node="mi" transform="translate(2079,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></g><g data-mml-node="msub" transform="translate(4624.7,-686)"><g data-mml-node="mi"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="TeXAtom" transform="translate(553,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D435" d="M231 637Q204 637 199 638T194 649Q194 676 205 682Q206 683 335 683Q594 683 608 681Q671 671 713 636T756 544Q756 480 698 429T565 360L555 357Q619 348 660 311T702 219Q702 146 630 78T453 1Q446 0 242 0Q42 0 39 2Q35 5 35 10Q35 17 37 24Q42 43 47 45Q51 46 62 46H68Q95 46 128 49Q142 52 147 61Q150 65 219 339T288 628Q288 635 231 637ZM649 544Q649 574 634 600T585 634Q578 636 493 637Q473 637 451 637T416 636H403Q388 635 384 626Q382 622 352 506Q352 503 351 500L320 374H401Q482 374 494 376Q554 386 601 434T649 544ZM595 229Q595 273 572 302T512 336Q506 337 429 337Q311 337 310 336Q310 334 293 263T258 122L240 52Q240 48 252 48T333 46Q422 46 429 47Q491 54 543 105T595 229Z"></path></g><g data-mml-node="mi" transform="translate(759,0)"><path data-c="1D459" d="M117 59Q117 26 142 26Q179 26 205 131Q211 151 215 152Q217 153 225 153H229Q238 153 241 153T246 151T248 144Q247 138 245 128T234 90T214 43T183 6T137 -11Q101 -11 70 11T38 85Q38 97 39 102L104 360Q167 615 167 623Q167 626 166 628T162 632T157 634T149 635T141 636T132 637T122 637Q112 637 109 637T101 638T95 641T94 647Q94 649 96 661Q101 680 107 682T179 688Q194 689 213 690T243 693T254 694Q266 694 266 686Q266 675 193 386T118 83Q118 81 118 75T117 65V59Z"></path></g><g data-mml-node="mi" transform="translate(1057,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1542,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(1975,0)"><path data-c="1D458" d="M121 647Q121 657 125 670T137 683Q138 683 209 688T282 694Q294 694 294 686Q294 679 244 477Q194 279 194 272Q213 282 223 291Q247 309 292 354T362 415Q402 442 438 442Q468 442 485 423T503 369Q503 344 496 327T477 302T456 291T438 288Q418 288 406 299T394 328Q394 353 410 369T442 390L458 393Q446 405 434 405H430Q398 402 367 380T294 316T228 255Q230 254 243 252T267 246T293 238T320 224T342 206T359 180T365 147Q365 130 360 106T354 66Q354 26 381 26Q429 26 459 145Q461 153 479 153H483Q499 153 499 144Q499 139 496 130Q455 -11 378 -11Q333 -11 305 15T277 90Q277 108 280 121T283 145Q283 167 269 183T234 206T200 217T182 220H180Q168 178 159 139T145 81T136 44T129 20T122 7T111 -2Q98 -11 83 -11Q66 -11 57 -1T48 16Q48 26 85 176T158 471L195 616Q196 629 188 632T149 637H144Q134 637 131 637T124 640T121 647Z"></path></g><g data-mml-node="mi" transform="translate(2496,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(2962,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g></g></g><rect width="12025.8" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><br>c. 执行PCF  </p>
<p>其中,<br>初始特定区域的选择, (锥体)<br>a. 依赖Light大小, 比如点光大小<br>b. Receiver至灯光的距离  </p>
<p>计算公式<br>应用的PCF公式<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -3.222ex;" xmlns="http://www.w3.org/2000/svg" width="44.592ex" height="5.371ex" role="img" focusable="false" viewBox="0 -950 19709.9 2374.1"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(769,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1158,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1661,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2327.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="munder" transform="translate(3383.6,0)"><g data-mml-node="mo" transform="translate(443.3,0)"><path data-c="2211" d="M60 948Q63 950 665 950H1267L1325 815Q1384 677 1388 669H1348L1341 683Q1320 724 1285 761Q1235 809 1174 838T1033 881T882 898T699 902H574H543H251L259 891Q722 258 724 252Q725 250 724 246Q721 243 460 -56L196 -356Q196 -357 407 -357Q459 -357 548 -357T676 -358Q812 -358 896 -353T1063 -332T1204 -283T1307 -196Q1328 -170 1348 -124H1388Q1388 -125 1381 -145T1356 -210T1325 -294L1267 -449L666 -450Q64 -450 61 -448Q55 -446 55 -439Q55 -437 57 -433L590 177Q590 178 557 222T452 366T322 544L56 909L55 924Q55 945 60 948Z"></path></g><g data-mml-node="TeXAtom" transform="translate(0,-1147.3) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(460,0)"><path data-c="2208" d="M84 250Q84 372 166 450T360 539Q361 539 377 539T419 540T469 540H568Q583 532 583 520Q583 511 570 501L466 500Q355 499 329 494Q280 482 242 458T183 409T147 354T129 306T124 272V270H568Q583 262 583 250T568 230H124V228Q124 207 134 177T167 112T231 48T328 7Q355 1 466 0H570Q583 -10 583 -20Q583 -32 568 -40H471Q464 -40 446 -40T417 -41Q262 -41 172 45Q84 127 84 250Z"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(1127,0)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mo" transform="translate(888,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1277,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1780,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(5880.8,0)"><g data-mml-node="mi"><path data-c="1D714" d="M495 384Q495 406 514 424T555 443Q574 443 589 425T604 364Q604 334 592 278T555 155T483 38T377 -11Q297 -11 267 66Q266 68 260 61Q201 -11 125 -11Q15 -11 15 139Q15 230 56 325T123 434Q135 441 147 436Q160 429 160 418Q160 406 140 379T94 306T62 208Q61 202 61 187Q61 124 85 100T143 76Q201 76 245 129L253 137V156Q258 297 317 297Q348 297 348 261Q348 243 338 213T318 158L308 135Q309 133 310 129T318 115T334 97T358 83T393 76Q456 76 501 148T546 274Q546 305 533 325T508 357T495 384Z"></path></g><g data-mml-node="mo" transform="translate(622,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1011,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(1514,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="mi" transform="translate(1958.7,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(2418.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g><g data-mml-node="mo" transform="translate(8910.7,0)"><path data-c="22C5" d="M78 250Q78 274 95 292T138 310Q162 310 180 294T199 251Q199 226 182 208T139 190T96 207T78 250Z"></path></g><g data-mml-node="msup" transform="translate(9411,0)"><g data-mml-node="mi"><path data-c="1D712" d="M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z"></path></g><g data-mml-node="mo" transform="translate(659,413) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g><g data-mml-node="mo" transform="translate(10670.1,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="msub" transform="translate(10948.1,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(645,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g></g></g><g data-mml-node="mo" transform="translate(13058.3,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(13447.3,0)"><path data-c="1D45E" d="M33 157Q33 258 109 349T280 441Q340 441 372 389Q373 390 377 395T388 406T404 418Q438 442 450 442Q454 442 457 439T460 434Q460 425 391 149Q320 -135 320 -139Q320 -147 365 -148H390Q396 -156 396 -157T393 -175Q389 -188 383 -194H370Q339 -192 262 -192Q234 -192 211 -192T174 -192T157 -193Q143 -193 143 -185Q143 -182 145 -170Q149 -154 152 -151T172 -148Q220 -148 230 -141Q238 -136 258 -53T279 32Q279 33 272 29Q224 -10 172 -10Q117 -10 75 30T33 157ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mo" transform="translate(13907.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(14518.6,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(15518.8,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(902,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1368,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1968,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g><g data-mml-node="mo" transform="translate(18150.9,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(18539.9,0)"><path data-c="1D45D" d="M23 287Q24 290 25 295T30 317T40 348T55 381T75 411T101 433T134 442Q209 442 230 378L240 387Q302 442 358 442Q423 442 460 395T497 281Q497 173 421 82T249 -10Q227 -10 210 -4Q199 1 187 11T168 28L161 36Q160 35 139 -51T118 -138Q118 -144 126 -145T163 -148H188Q194 -155 194 -157T191 -175Q188 -187 185 -190T172 -194Q170 -194 161 -194T127 -193T65 -192Q-5 -192 -24 -194H-32Q-39 -187 -39 -183Q-37 -156 -26 -148H-6Q28 -147 33 -136Q36 -130 94 103T155 350Q156 355 156 364Q156 405 131 405Q109 405 94 377T71 316T59 280Q57 278 43 278H29Q23 284 23 287ZM178 102Q200 26 252 26Q282 26 310 49T356 107Q374 141 392 215T411 325V331Q411 405 350 405Q339 405 328 402T306 393T286 380T269 365T254 350T243 336T235 326L232 322Q232 321 229 308T218 264T204 212Q178 106 178 102Z"></path></g><g data-mml-node="mo" transform="translate(19042.9,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(19431.9,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g></g></g></svg></mjx-container><br>其中,<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="33.698ex" height="2.433ex" role="img" focusable="false" viewBox="0 -825.2 14894.7 1075.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D712" d="M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z"></path></g><g data-mml-node="mo" transform="translate(659,413) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g><g data-mml-node="mo" transform="translate(1259.1,0)"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(1537.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(2109.1,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(2664.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mrow" transform="translate(3720.7,0)"><g data-mml-node="mo"><path data-c="7B" d="M434 -231Q434 -244 428 -250H410Q281 -250 230 -184Q225 -177 222 -172T217 -161T213 -148T211 -133T210 -111T209 -84T209 -47T209 0Q209 21 209 53Q208 142 204 153Q203 154 203 155Q189 191 153 211T82 231Q71 231 68 234T65 250T68 266T82 269Q116 269 152 289T203 345Q208 356 208 377T209 529V579Q209 634 215 656T244 698Q270 724 324 740Q361 748 377 749Q379 749 390 749T408 750H428Q434 744 434 732Q434 719 431 716Q429 713 415 713Q362 710 332 689T296 647Q291 634 291 499V417Q291 370 288 353T271 314Q240 271 184 255L170 250L184 245Q202 239 220 230T262 196T290 137Q291 131 291 1Q291 -134 296 -147Q306 -174 339 -192T415 -213Q429 -213 431 -216Q434 -219 434 -231Z"></path></g><g data-mml-node="mtable" transform="translate(500,0)"><g data-mml-node="mtr"><g data-mml-node="mtd"><g data-mml-node="mn"><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z"></path></g><g data-mml-node="mo" transform="translate(500,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g><g data-mml-node="mtd" transform="translate(1778,0)"><g data-mml-node="mrow"><g data-mml-node="mtext"><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(278,0)"></path><path data-c="A0" d="" transform="translate(584,0)"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(834,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mtext" transform="translate(1406,0)"><path data-c="A0" d=""></path><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z" transform="translate(250,0)"></path><path data-c="20" d="" transform="translate(1028,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)"></path></g></g><g data-mml-node="mtext" transform="translate(3184,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mtext" transform="translate(3434,0)"><path data-c="A0" d=""></path></g><g data-mml-node="mn" transform="translate(3684,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(4184,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g></g><g data-mml-node="mtd" transform="translate(7240,0)"><g data-mml-node="mrow"><g data-mml-node="mtext"><path data-c="69" d="M69 609Q69 637 87 653T131 669Q154 667 171 652T188 609Q188 579 171 564T129 549Q104 549 87 564T69 609ZM247 0Q232 3 143 3Q132 3 106 3T56 1L34 0H26V46H42Q70 46 91 49Q100 53 102 60T104 102V205V293Q104 345 102 359T88 378Q74 385 41 385H30V408Q30 431 32 431L42 432Q52 433 70 434T106 436Q123 437 142 438T171 441T182 442H185V62Q190 52 197 50T232 46H255V0H247Z"></path><path data-c="66" d="M273 0Q255 3 146 3Q43 3 34 0H26V46H42Q70 46 91 49Q99 52 103 60Q104 62 104 224V385H33V431H104V497L105 564L107 574Q126 639 171 668T266 704Q267 704 275 704T289 705Q330 702 351 679T372 627Q372 604 358 590T321 576T284 590T270 627Q270 647 288 667H284Q280 668 273 668Q245 668 223 647T189 592Q183 572 182 497V431H293V385H185V225Q185 63 186 61T189 57T194 54T199 51T206 49T213 48T222 47T231 47T241 46T251 46H282V0H273Z" transform="translate(278,0)"></path><path data-c="A0" d="" transform="translate(584,0)"></path></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(834,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g></g><g data-mml-node="mtext" transform="translate(1406,0)"><path data-c="A0" d=""></path><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z" transform="translate(250,0)"></path><path data-c="20" d="" transform="translate(1028,0)"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(1278,0)"></path></g></g><g data-mml-node="mtext" transform="translate(3184,0)"><path data-c="A0" d=""></path></g></g></g></g><g data-mml-node="mo" transform="translate(11174,0) translate(0 250)"></g></g></g></g></svg></mjx-container>  </p>
<p>PCF并不是直接对ShadowMap卷积, 而后比较的<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="35.278ex" height="2.433ex" role="img" focusable="false" viewBox="0 -825.2 15592.9 1075.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mo" transform="translate(769,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1158,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1730,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(2396.8,0)"><path data-c="2260" d="M166 -215T159 -215T147 -212T141 -204T139 -197Q139 -190 144 -183L306 133H70Q56 140 56 153Q56 168 72 173H327L406 327H72Q56 332 56 347Q56 360 70 367H426Q597 702 602 707Q605 716 618 716Q625 716 630 712T636 703T638 696Q638 692 471 367H707Q722 359 722 347Q722 336 708 328L451 327L371 173H708Q722 163 722 153Q722 140 707 133H351Q175 -210 170 -212Q166 -215 159 -215Z"></path></g><g data-mml-node="msup" transform="translate(3452.6,0)"><g data-mml-node="mi"><path data-c="1D712" d="M576 -125Q576 -147 547 -175T487 -204H476Q394 -204 363 -157Q334 -114 293 26L284 59Q283 58 248 19T170 -66T92 -151T53 -191Q49 -194 43 -194Q36 -194 31 -189T25 -177T38 -154T151 -30L272 102L265 131Q189 405 135 405Q104 405 87 358Q86 351 68 351Q48 351 48 361Q48 369 56 386T89 423T148 442Q224 442 258 400Q276 375 297 320T330 222L341 180Q344 180 455 303T573 429Q579 431 582 431Q600 431 600 414Q600 407 587 392T477 270Q356 138 353 134L362 102Q392 -10 428 -89T490 -168Q504 -168 517 -156T536 -126Q539 -116 543 -115T557 -114T571 -115Q576 -118 576 -125Z"></path></g><g data-mml-node="mo" transform="translate(659,413) scale(0.707)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g></g><g data-mml-node="TeXAtom" data-mjx-texclass="ORD" transform="translate(4711.7,0)"><g data-mml-node="mo"><path data-c="5B" d="M118 -250V750H255V710H158V-210H255V-250H118Z"></path></g><g data-mml-node="mi" transform="translate(278,0)"><path data-c="1D464" d="M580 385Q580 406 599 424T641 443Q659 443 674 425T690 368Q690 339 671 253Q656 197 644 161T609 80T554 12T482 -11Q438 -11 404 5T355 48Q354 47 352 44Q311 -11 252 -11Q226 -11 202 -5T155 14T118 53T104 116Q104 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Q21 293 29 315T52 366T96 418T161 441Q204 441 227 416T250 358Q250 340 217 250T184 111Q184 65 205 46T258 26Q301 26 334 87L339 96V119Q339 122 339 128T340 136T341 143T342 152T345 165T348 182T354 206T362 238T373 281Q402 395 406 404Q419 431 449 431Q468 431 475 421T483 402Q483 389 454 274T422 142Q420 131 420 107V100Q420 85 423 71T442 42T487 26Q558 26 600 148Q609 171 620 213T632 273Q632 306 619 325T593 357T580 385Z"></path></g><g data-mml-node="mo" transform="translate(1216.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msub" transform="translate(1938.4,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D446" d="M308 24Q367 24 416 76T466 197Q466 260 414 284Q308 311 278 321T236 341Q176 383 176 462Q176 523 208 573T273 648Q302 673 343 688T407 704H418H425Q521 704 564 640Q565 640 577 653T603 682T623 704Q624 704 627 704T632 705Q645 705 645 698T617 577T585 459T569 456Q549 456 549 465Q549 471 550 475Q550 478 551 494T553 520Q553 554 544 579T526 616T501 641Q465 662 419 662Q362 662 313 616T263 510Q263 480 278 458T319 427Q323 425 389 408T456 390Q490 379 522 342T554 242Q554 216 546 186Q541 164 528 137T492 78T426 18T332 -20Q320 -22 298 -22Q199 -22 144 33L134 44L106 13Q83 -14 78 -18T65 -22Q52 -22 52 -14Q52 -11 110 221Q112 227 130 227H143Q149 221 149 216Q149 214 148 207T144 186T142 153Q144 114 160 87T203 47T255 29T308 24Z"></path></g><g data-mml-node="mi" transform="translate(645,0)"><path data-c="1D440" d="M289 629Q289 635 232 637Q208 637 201 638T194 648Q194 649 196 659Q197 662 198 666T199 671T201 676T203 679T207 681T212 683T220 683T232 684Q238 684 262 684T307 683Q386 683 398 683T414 678Q415 674 451 396L487 117L510 154Q534 190 574 254T662 394Q837 673 839 675Q840 676 842 678T846 681L852 683H948Q965 683 988 683T1017 684Q1051 684 1051 673Q1051 668 1048 656T1045 643Q1041 637 1008 637Q968 636 957 634T939 623Q936 618 867 340T797 59Q797 55 798 54T805 50T822 48T855 46H886Q892 37 892 35Q892 19 885 5Q880 0 869 0Q864 0 828 1T736 2Q675 2 644 2T609 1Q592 1 592 11Q592 13 594 25Q598 41 602 43T625 46Q652 46 685 49Q699 52 704 61Q706 65 742 207T813 490T848 631L654 322Q458 10 453 5Q451 4 449 3Q444 0 433 0Q418 0 415 7Q413 11 374 317L335 624L267 354Q200 88 200 79Q206 46 272 46H282Q288 41 289 37T286 19Q282 3 278 1Q274 0 267 0Q265 0 255 0T221 1T157 2Q127 2 95 1T58 0Q43 0 39 2T35 11Q35 13 38 25T43 40Q45 46 65 46Q135 46 154 86Q158 92 223 354T289 629Z"></path></g></g></g><g data-mml-node="mo" transform="translate(4048.7,0)"><path data-c="5D" d="M22 710V750H159V-250H22V-210H119V710H22Z"></path></g><g data-mml-node="mo" transform="translate(4326.7,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(4715.7,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(5287.7,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(5898.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msub" transform="translate(6899.1,0)"><g data-mml-node="mi"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="TeXAtom" transform="translate(861,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D460" d="M131 289Q131 321 147 354T203 415T300 442Q362 442 390 415T419 355Q419 323 402 308T364 292Q351 292 340 300T328 326Q328 342 337 354T354 372T367 378Q368 378 368 379Q368 382 361 388T336 399T297 405Q249 405 227 379T204 326Q204 301 223 291T278 274T330 259Q396 230 396 163Q396 135 385 107T352 51T289 7T195 -10Q118 -10 86 19T53 87Q53 126 74 143T118 160Q133 160 146 151T160 120Q160 94 142 76T111 58Q109 57 108 57T107 55Q108 52 115 47T146 34T201 27Q237 27 263 38T301 66T318 97T323 122Q323 150 302 164T254 181T195 196T148 231Q131 256 131 289Z"></path></g><g data-mml-node="mi" transform="translate(469,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(902,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g><g data-mml-node="mi" transform="translate(1368,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1968,0)"><path data-c="1D452" d="M39 168Q39 225 58 272T107 350T174 402T244 433T307 442H310Q355 442 388 420T421 355Q421 265 310 237Q261 224 176 223Q139 223 138 221Q138 219 132 186T125 128Q125 81 146 54T209 26T302 45T394 111Q403 121 406 121Q410 121 419 112T429 98T420 82T390 55T344 24T281 -1T205 -11Q126 -11 83 42T39 168ZM373 353Q367 405 305 405Q272 405 244 391T199 357T170 316T154 280T149 261Q149 260 169 260Q282 260 327 284T373 353Z"></path></g></g></g><g data-mml-node="mo" transform="translate(9531.2,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(9920.2,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(10492.2,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></g></svg></mjx-container>  </p>
<p><figure><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/3.webp" alt="Dying Light"><figcaption aria-hidden="true">Dying Light</figcaption></figure></p>
<h3 id="VSSM-Variance-Soft-Shadow-Mapping-4"><a href="#VSSM-Variance-Soft-Shadow-Mapping-4" class="headerlink" title="VSSM (Variance Soft Shadow Mapping)4"></a>VSSM (Variance Soft Shadow Mapping)<sup><a href="https://jankautz.com/publications/VSSM_PG2010.pdf">4</a></sup></h3><p>VSSM解决什么问题<br>a. 加快Blocker Search (PCSS第一步)<br>b. 加快Filter (PCSS第三步)  </p>
<p>通过期望和方差, 构造一近正态分布函数, 来近似各Fragment的可见性概率<br>期望的获取<br>a. Hardware MIPMAPing<br>b. Summed Area Tables (SAT)<br>方差的获取<br>a. <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="26.467ex" height="2.452ex" role="img" focusable="false" viewBox="0 -833.9 11698.6 1083.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D449" d="M52 648Q52 670 65 683H76Q118 680 181 680Q299 680 320 683H330Q336 677 336 674T334 656Q329 641 325 637H304Q282 635 274 635Q245 630 242 620Q242 618 271 369T301 118L374 235Q447 352 520 471T595 594Q599 601 599 609Q599 633 555 637Q537 637 537 648Q537 649 539 661Q542 675 545 679T558 683Q560 683 570 683T604 682T668 681Q737 681 755 683H762Q769 676 769 672Q769 655 760 640Q757 637 743 637Q730 636 719 635T698 630T682 623T670 615T660 608T652 599T645 592L452 282Q272 -9 266 -16Q263 -18 259 -21L241 -22H234Q216 -22 216 -15Q213 -9 177 305Q139 623 138 626Q133 637 76 637H59Q52 642 52 648Z"></path></g><g data-mml-node="mi" transform="translate(769,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mi" transform="translate(1298,0)"><path data-c="1D45F" d="M21 287Q22 290 23 295T28 317T38 348T53 381T73 411T99 433T132 442Q161 442 183 430T214 408T225 388Q227 382 228 382T236 389Q284 441 347 441H350Q398 441 422 400Q430 381 430 363Q430 333 417 315T391 292T366 288Q346 288 334 299T322 328Q322 376 378 392Q356 405 342 405Q286 405 239 331Q229 315 224 298T190 165Q156 25 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 114 189T154 366Q154 405 128 405Q107 405 92 377T68 316T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mo" transform="translate(1749,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2138,0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(2990,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(3656.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(4712.6,0)"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mo" transform="translate(5476.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="msup" transform="translate(5865.6,0)"><g data-mml-node="mi"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mn" transform="translate(936.2,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(7205.3,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(7816.5,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="msup" transform="translate(8816.8,0)"><g data-mml-node="mi"><path data-c="1D438" d="M492 213Q472 213 472 226Q472 230 477 250T482 285Q482 316 461 323T364 330H312Q311 328 277 192T243 52Q243 48 254 48T334 46Q428 46 458 48T518 61Q567 77 599 117T670 248Q680 270 683 272Q690 274 698 274Q718 274 718 261Q613 7 608 2Q605 0 322 0H133Q31 0 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H757Q764 676 764 669Q764 664 751 557T737 447Q735 440 717 440H705Q698 445 698 453L701 476Q704 500 704 528Q704 558 697 578T678 609T643 625T596 632T532 634H485Q397 633 392 631Q388 629 386 622Q385 619 355 499T324 377Q347 376 372 376H398Q464 376 489 391T534 472Q538 488 540 490T557 493Q562 493 565 493T570 492T572 491T574 487T577 483L544 351Q511 218 508 216Q505 213 492 213Z"></path></g><g data-mml-node="mn" transform="translate(848.3,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(10068.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(10457.6,0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(11309.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container></p>
<p>估算可见性的概率, 实际可转换为求<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="5.287ex" height="1.645ex" role="img" focusable="false" viewBox="0 -705 2337 727"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(760,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(1588,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.044ex;" xmlns="http://www.w3.org/2000/svg" width="52.987ex" height="5.616ex" role="img" focusable="false" viewBox="0 -1578.8 23420.1 2482.2"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(1946.8,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(3002.6,0)"><path data-c="1D44B" d="M42 0H40Q26 0 26 11Q26 15 29 27Q33 41 36 43T55 46Q141 49 190 98Q200 108 306 224T411 342Q302 620 297 625Q288 636 234 637H206Q200 643 200 645T202 664Q206 677 212 683H226Q260 681 347 681Q380 681 408 681T453 682T473 682Q490 682 490 671Q490 670 488 658Q484 643 481 640T465 637Q434 634 411 620L488 426L541 485Q646 598 646 610Q646 628 622 635Q617 635 609 637Q594 637 594 648Q594 650 596 664Q600 677 606 683H618Q619 683 643 683T697 681T738 680Q828 680 837 683H845Q852 676 852 672Q850 647 840 637H824Q790 636 763 628T722 611T698 593L687 584Q687 585 592 480L505 384Q505 383 536 304T601 142T638 56Q648 47 699 46Q734 46 734 37Q734 35 732 23Q728 7 725 4T711 1Q708 1 678 1T589 2Q528 2 496 2T461 1Q444 1 444 10Q444 11 446 25Q448 35 450 39T455 44T464 46T480 47T506 54Q523 62 523 64Q522 64 476 181L429 299Q241 95 236 84Q232 76 232 72Q232 53 261 47Q262 47 267 47T273 46Q276 46 277 46T280 45T283 42T284 35Q284 26 282 19Q279 6 276 4T261 1Q258 1 243 1T201 2T142 2Q64 2 42 0Z"></path></g><g data-mml-node="mo" transform="translate(4132.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mi" transform="translate(5188.1,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(5617.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(6283.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="msubsup" transform="translate(7339.7,0)"><g data-mml-node="mo" transform="translate(0 1)"><path data-c="222B" d="M114 -798Q132 -824 165 -824H167Q195 -824 223 -764T275 -600T320 -391T362 -164Q365 -143 367 -133Q439 292 523 655T645 1127Q651 1145 655 1157T672 1201T699 1257T733 1306T777 1346T828 1360Q884 1360 912 1325T944 1245Q944 1220 932 1205T909 1186T887 1183Q866 1183 849 1198T832 1239Q832 1287 885 1296L882 1300Q879 1303 874 1307T866 1313Q851 1323 833 1323Q819 1323 807 1311T775 1255T736 1139T689 936T633 628Q574 293 510 -5T410 -437T355 -629Q278 -862 165 -862Q125 -862 92 -831T55 -746Q55 -711 74 -698T112 -685Q133 -685 150 -700T167 -741Q167 -789 114 -798Z"></path></g><g data-mml-node="mi" transform="translate(1046.4,1088.1) scale(0.707)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mi" transform="translate(589,-896.4) scale(0.707)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g></g><g data-mml-node="mi" transform="translate(8906.1,0)"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mi" transform="translate(9657.1,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(10485.1,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(11234.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(11623.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(12195.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mi" transform="translate(12584.1,0)"><path data-c="1D451" d="M366 683Q367 683 438 688T511 694Q523 694 523 686Q523 679 450 384T375 83T374 68Q374 26 402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487H491Q506 153 506 145Q506 140 503 129Q490 79 473 48T445 8T417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157Q33 205 53 255T101 341Q148 398 195 420T280 442Q336 442 364 400Q369 394 369 396Q370 400 396 505T424 616Q424 629 417 632T378 637H357Q351 643 351 645T353 664Q358 683 366 683ZM352 326Q329 405 277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q233 26 290 98L298 109L352 326Z"></path></g><g data-mml-node="mi" transform="translate(13104.1,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(13953.9,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(15009.6,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(15769.6,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(16597.6,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(17346.6,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(17735.6,0)"><path data-c="1D44F" d="M73 647Q73 657 77 670T89 683Q90 683 161 688T234 694Q246 694 246 685T212 542Q204 508 195 472T180 418L176 399Q176 396 182 402Q231 442 283 442Q345 442 383 396T422 280Q422 169 343 79T173 -11Q123 -11 82 27T40 150V159Q40 180 48 217T97 414Q147 611 147 623T109 637Q104 637 101 637H96Q86 637 83 637T76 640T73 647ZM336 325V331Q336 405 275 405Q258 405 240 397T207 376T181 352T163 330L157 322L136 236Q114 150 114 114Q114 66 138 42Q154 26 178 26Q211 26 245 58Q270 81 285 114T318 219Q336 291 336 325Z"></path></g><g data-mml-node="mo" transform="translate(18164.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(18775.9,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(19776.1,0)"><path data-c="1D436" d="M50 252Q50 367 117 473T286 641T490 704Q580 704 633 653Q642 643 648 636T656 626L657 623Q660 623 684 649Q691 655 699 663T715 679T725 690L740 705H746Q760 705 760 698Q760 694 728 561Q692 422 692 421Q690 416 687 415T669 413H653Q647 419 647 422Q647 423 648 429T650 449T651 481Q651 552 619 605T510 659Q484 659 454 652T382 628T299 572T226 479Q194 422 175 346T156 222Q156 108 232 58Q280 24 350 24Q441 24 512 92T606 240Q610 253 612 255T628 257Q648 257 648 248Q648 243 647 239Q618 132 523 55T319 -22Q206 -22 128 53T50 252Z"></path></g><g data-mml-node="mi" transform="translate(20536.1,0)"><path data-c="1D437" d="M287 628Q287 635 230 637Q207 637 200 638T193 647Q193 655 197 667T204 682Q206 683 403 683Q570 682 590 682T630 676Q702 659 752 597T803 431Q803 275 696 151T444 3L430 1L236 0H125H72Q48 0 41 2T33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM703 469Q703 507 692 537T666 584T629 613T590 629T555 636Q553 636 541 636T512 636T479 637H436Q392 637 386 627Q384 623 313 339T242 52Q242 48 253 48T330 47Q335 47 349 47T373 46Q499 46 581 128Q617 164 640 212T683 339T703 469Z"></path></g><g data-mml-node="mi" transform="translate(21364.1,0)"><path data-c="1D439" d="M48 1Q31 1 31 11Q31 13 34 25Q38 41 42 43T65 46Q92 46 125 49Q139 52 144 61Q146 66 215 342T285 622Q285 629 281 629Q273 632 228 634H197Q191 640 191 642T193 659Q197 676 203 680H742Q749 676 749 669Q749 664 736 557T722 447Q720 440 702 440H690Q683 445 683 453Q683 454 686 477T689 530Q689 560 682 579T663 610T626 626T575 633T503 634H480Q398 633 393 631Q388 629 386 623Q385 622 352 492L320 363H375Q378 363 398 363T426 364T448 367T472 374T489 386Q502 398 511 419T524 457T529 475Q532 480 548 480H560Q567 475 567 470Q567 467 536 339T502 207Q500 200 482 200H470Q463 206 463 212Q463 215 468 234T473 274Q473 303 453 310T364 317H309L277 190Q245 66 245 60Q245 46 334 46H359Q365 40 365 39T363 19Q359 6 353 0H336Q295 2 185 2Q120 2 86 2T48 1Z"></path></g><g data-mml-node="mo" transform="translate(22113.1,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(22502.1,0)"><path data-c="1D44E" d="M33 157Q33 258 109 349T280 441Q331 441 370 392Q386 422 416 422Q429 422 439 414T449 394Q449 381 412 234T374 68Q374 43 381 35T402 26Q411 27 422 35Q443 55 463 131Q469 151 473 152Q475 153 483 153H487Q506 153 506 144Q506 138 501 117T481 63T449 13Q436 0 417 -8Q409 -10 393 -10Q359 -10 336 5T306 36L300 51Q299 52 296 50Q294 48 292 46Q233 -10 172 -10Q117 -10 75 30T33 157ZM351 328Q351 334 346 350T323 385T277 405Q242 405 210 374T160 293Q131 214 119 129Q119 126 119 118T118 106Q118 61 136 44T179 26Q217 26 254 59T298 110Q300 114 325 217T351 328Z"></path></g><g data-mml-node="mo" transform="translate(23031.1,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/5.webp">  </p>
<p>切比雪夫不等式来估计概率<br><mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -2.194ex;" xmlns="http://www.w3.org/2000/svg" width="25.34ex" height="5.611ex" role="img" focusable="false" viewBox="0 -1509.9 11200.1 2479.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1989.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mi" transform="translate(3045.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(3406.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4073.3,0)"><path data-c="2264" d="M674 636Q682 636 688 630T694 615T687 601Q686 600 417 472L151 346L399 228Q687 92 691 87Q694 81 694 76Q694 58 676 56H670L382 192Q92 329 90 331Q83 336 83 348Q84 359 96 365Q104 369 382 500T665 634Q669 636 674 636ZM84 -118Q84 -108 99 -98H678Q694 -104 694 -118Q694 -130 679 -138H98Q84 -131 84 -118Z"></path></g><g data-mml-node="mfrac" transform="translate(5129.1,0)"><g data-mml-node="msup" transform="translate(2531.7,676)"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(604,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mrow" transform="translate(220,-719.9)"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(604,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(1229.8,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mo" transform="translate(2230,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(2619,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(3202.2,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mi" transform="translate(4202.4,0)"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g><g data-mml-node="msup" transform="translate(4805.4,0)"><g data-mml-node="mo"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mn" transform="translate(422,289) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g><rect width="5831" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><br>其中,<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.489ex;" xmlns="http://www.w3.org/2000/svg" width="1.364ex" height="1.489ex" role="img" focusable="false" viewBox="0 -442 603 658"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D707" d="M58 -216Q44 -216 34 -208T23 -186Q23 -176 96 116T173 414Q186 442 219 442Q231 441 239 435T249 423T251 413Q251 401 220 279T187 142Q185 131 185 107V99Q185 26 252 26Q261 26 270 27T287 31T302 38T315 45T327 55T338 65T348 77T356 88T365 100L372 110L408 253Q444 395 448 404Q461 431 491 431Q504 431 512 424T523 412T525 402L449 84Q448 79 448 68Q448 43 455 35T476 26Q485 27 496 35Q517 55 537 131Q543 151 547 152Q549 153 557 153H561Q580 153 580 144Q580 138 575 117T555 63T523 13Q510 0 491 -8Q483 -10 467 -10Q446 -10 429 -4T402 11T385 29T376 44T374 51L368 45Q362 39 350 30T324 12T288 -4T246 -11Q199 -11 153 12L129 -85Q108 -167 104 -180T92 -202Q76 -216 58 -216Z"></path></g></g></g></svg></mjx-container>是期望<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.025ex;" xmlns="http://www.w3.org/2000/svg" width="2.28ex" height="1.912ex" role="img" focusable="false" viewBox="0 -833.9 1007.6 844.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mi"><path data-c="1D70E" d="M184 -11Q116 -11 74 34T31 147Q31 247 104 333T274 430Q275 431 414 431H552Q553 430 555 429T559 427T562 425T565 422T567 420T569 416T570 412T571 407T572 401Q572 357 507 357Q500 357 490 357T476 358H416L421 348Q439 310 439 263Q439 153 359 71T184 -11ZM361 278Q361 358 276 358Q152 358 115 184Q114 180 114 178Q106 141 106 117Q106 67 131 47T188 26Q242 26 287 73Q316 103 334 153T356 233T361 278Z"></path></g><g data-mml-node="mn" transform="translate(604,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>是方差  </p>
<p><figure><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/7.webp" alt="切比雪夫曲线"><figcaption aria-hidden="true">切比雪夫曲线</figcaption></figure>  </p>
<p>即可了解<br>a. Blocker概率 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.646ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2937.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1131.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(2187.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(2548.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, 平均 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="3.894ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 1721.3 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(485,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></g></svg></mjx-container><br>b. 非Blocker概率 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.566ex;" xmlns="http://www.w3.org/2000/svg" width="6.646ex" height="2.262ex" role="img" focusable="false" viewBox="0 -750 2937.6 1000"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mo"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(389,0)"><path data-c="1D467" d="M347 338Q337 338 294 349T231 360Q211 360 197 356T174 346T162 335T155 324L153 320Q150 317 138 317Q117 317 117 325Q117 330 120 339Q133 378 163 406T229 440Q241 442 246 442Q271 442 291 425T329 392T367 375Q389 375 411 408T434 441Q435 442 449 442H462Q468 436 468 434Q468 430 463 420T449 399T432 377T418 358L411 349Q368 298 275 214T160 106L148 94L163 93Q185 93 227 82T290 71Q328 71 360 90T402 140Q406 149 409 151T424 153Q443 153 443 143Q443 138 442 134Q425 72 376 31T278 -11Q252 -11 232 6T193 40T155 57Q111 57 76 -3Q70 -11 59 -11H54H41Q35 -5 35 -2Q35 13 93 84Q132 129 225 214T340 322Q352 338 347 338Z"></path></g><g data-mml-node="mo" transform="translate(1131.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mi" transform="translate(2187.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(2548.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g></g></g></svg></mjx-container>, 平均 <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="5.769ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 2550 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1172,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1657,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></g></svg></mjx-container>  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/8.webp">   </p>
<p>平均可见性<br>  <mjx-container class="MathJax" jax="SVG" display="true"><svg style="vertical-align: -1.552ex;" xmlns="http://www.w3.org/2000/svg" width="27.518ex" height="4.627ex" role="img" focusable="false" viewBox="0 -1359 12163 2045"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-152.7) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D434" d="M208 74Q208 50 254 46Q272 46 272 35Q272 34 270 22Q267 8 264 4T251 0Q249 0 239 0T205 1T141 2Q70 2 50 0H42Q35 7 35 11Q37 38 48 46H62Q132 49 164 96Q170 102 345 401T523 704Q530 716 547 716H555H572Q578 707 578 706L606 383Q634 60 636 57Q641 46 701 46Q726 46 726 36Q726 34 723 22Q720 7 718 4T704 0Q701 0 690 0T651 1T578 2Q484 2 455 0H443Q437 6 437 9T439 27Q443 40 445 43L449 46H469Q523 49 533 63L521 213H283L249 155Q208 86 208 74ZM516 260Q516 271 504 416T490 562L463 519Q447 492 400 412L310 260L413 259Q516 259 516 260Z"></path></g><g data-mml-node="mi" transform="translate(750,0)"><path data-c="1D463" d="M173 380Q173 405 154 405Q130 405 104 376T61 287Q60 286 59 284T58 281T56 279T53 278T49 278T41 278H27Q21 284 21 287Q21 294 29 316T53 368T97 419T160 441Q202 441 225 417T249 361Q249 344 246 335Q246 329 231 291T200 202T182 113Q182 86 187 69Q200 26 250 26Q287 26 319 60T369 139T398 222T409 277Q409 300 401 317T383 343T365 361T357 383Q357 405 376 424T417 443Q436 443 451 425T467 367Q467 340 455 284T418 159T347 40T241 -11Q177 -11 139 22Q102 54 102 117Q102 148 110 181T151 298Q173 362 173 380Z"></path></g><g data-mml-node="mi" transform="translate(1235,0)"><path data-c="1D454" d="M311 43Q296 30 267 15T206 0Q143 0 105 45T66 160Q66 265 143 353T314 442Q361 442 401 394L404 398Q406 401 409 404T418 412T431 419T447 422Q461 422 470 413T480 394Q480 379 423 152T363 -80Q345 -134 286 -169T151 -205Q10 -205 10 -137Q10 -111 28 -91T74 -71Q89 -71 102 -80T116 -111Q116 -121 114 -130T107 -144T99 -154T92 -162L90 -164H91Q101 -167 151 -167Q189 -167 211 -155Q234 -144 254 -122T282 -75Q288 -56 298 -13Q311 35 311 43ZM384 328L380 339Q377 350 375 354T369 368T359 382T346 393T328 402T306 405Q262 405 221 352Q191 313 171 233T151 117Q151 38 213 38Q269 38 323 108L331 118L384 328Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2254.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(3310.1,0)"><g data-mml-node="msub" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(836,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(395.8,-686)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1439.6" height="60" x="120" y="220"></rect></g><g data-mml-node="msub" transform="translate(4989.7,0)"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1172,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1657,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g><g data-mml-node="mo" transform="translate(7761.9,0)"><path data-c="2B" d="M56 237T56 250T70 270H369V420L370 570Q380 583 389 583Q402 583 409 568V270H707Q722 262 722 250T707 230H409V-68Q401 -82 391 -82H389H387Q375 -82 369 -68V230H70Q56 237 56 250Z"></path></g><g data-mml-node="mfrac" transform="translate(8762.2,0)"><g data-mml-node="msub" transform="translate(220,676)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(836,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(395.8,-686)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1439.6" height="60" x="120" y="220"></rect></g><g data-mml-node="msub" transform="translate(10441.7,0)"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(485,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(918,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g></g></g></svg></mjx-container></p>
<p>其中,<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="14.583ex" height="2.882ex" role="img" focusable="false" viewBox="0 -929 6445.6 1274"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1989.8,0)"><path data-c="3E" d="M84 520Q84 528 88 533T96 539L99 540Q106 540 253 471T544 334L687 265Q694 260 694 250T687 235Q685 233 395 96L107 -40H101Q83 -38 83 -20Q83 -19 83 -17Q82 -10 98 -1Q117 9 248 71Q326 108 378 132L626 250L378 368Q90 504 86 509Q84 513 84 520Z"></path></g><g data-mml-node="mi" transform="translate(3045.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(3406.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4073.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5129.1,0)"><g data-mml-node="msub" transform="translate(220,446.1) scale(0.707)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(836,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(344.3,-345) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1076.5" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container>, 可近似等价求切比雪夫不等式（Chebychev）<br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.781ex;" xmlns="http://www.w3.org/2000/svg" width="24.475ex" height="2.882ex" role="img" focusable="false" viewBox="0 -929 10818.1 1274"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D443" d="M287 628Q287 635 230 637Q206 637 199 638T192 648Q192 649 194 659Q200 679 203 681T397 683Q587 682 600 680Q664 669 707 631T751 530Q751 453 685 389Q616 321 507 303Q500 302 402 301H307L277 182Q247 66 247 59Q247 55 248 54T255 50T272 48T305 46H336Q342 37 342 35Q342 19 335 5Q330 0 319 0Q316 0 282 1T182 2Q120 2 87 2T51 1Q33 1 33 11Q33 13 36 25Q40 41 44 43T67 46Q94 46 127 49Q141 52 146 61Q149 65 218 339T287 628ZM645 554Q645 567 643 575T634 597T609 619T560 635Q553 636 480 637Q463 637 445 637T416 636T404 636Q391 635 386 627Q384 621 367 550T332 412T314 344Q314 342 395 342H407H430Q542 342 590 392Q617 419 631 471T645 554Z"></path></g><g data-mml-node="mo" transform="translate(751,0)"><path data-c="28" d="M94 250Q94 319 104 381T127 488T164 576T202 643T244 695T277 729T302 750H315H319Q333 750 333 741Q333 738 316 720T275 667T226 581T184 443T167 250T184 58T225 -81T274 -167T316 -220T333 -241Q333 -250 318 -250H315H302L274 -226Q180 -141 137 -14T94 250Z"></path></g><g data-mml-node="mi" transform="translate(1140,0)"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(1989.8,0)"><path data-c="3C" d="M694 -11T694 -19T688 -33T678 -40Q671 -40 524 29T234 166L90 235Q83 240 83 250Q83 261 91 266Q664 540 678 540Q681 540 687 534T694 519T687 505Q686 504 417 376L151 250L417 124Q686 -4 687 -5Q694 -11 694 -19Z"></path></g><g data-mml-node="mi" transform="translate(3045.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g><g data-mml-node="mo" transform="translate(3406.6,0)"><path data-c="29" d="M60 749L64 750Q69 750 74 750H86L114 726Q208 641 251 514T294 250Q294 182 284 119T261 12T224 -76T186 -143T145 -194T113 -227T90 -246Q87 -249 86 -250H74Q66 -250 63 -250T58 -247T55 -238Q56 -237 66 -225Q221 -64 221 250T66 725Q56 737 55 738Q55 746 60 749Z"></path></g><g data-mml-node="mo" transform="translate(4073.3,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mfrac" transform="translate(5129.1,0)"><g data-mml-node="msub" transform="translate(220,446.1) scale(0.707)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(836,-150) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mi" transform="translate(344.3,-345) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1076.5" height="60" x="120" y="220"></rect></g><g data-mml-node="mo" transform="translate(6723.4,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mn" transform="translate(7779.2,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g><g data-mml-node="mo" transform="translate(8501.4,0)"><path data-c="2212" d="M84 237T84 250T98 270H679Q694 262 694 250T679 230H98Q84 237 84 250Z"></path></g><g data-mml-node="mfrac" transform="translate(9501.6,0)"><g data-mml-node="msub" transform="translate(220,446.1) scale(0.707)"><g data-mml-node="mi"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><g data-mml-node="mn" transform="translate(836,-150) scale(0.707)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path></g></g><g data-mml-node="mi" transform="translate(344.3,-345) scale(0.707)"><path data-c="1D441" d="M234 637Q231 637 226 637Q201 637 196 638T191 649Q191 676 202 682Q204 683 299 683Q376 683 387 683T401 677Q612 181 616 168L670 381Q723 592 723 606Q723 633 659 637Q635 637 635 648Q635 650 637 660Q641 676 643 679T653 683Q656 683 684 682T767 680Q817 680 843 681T873 682Q888 682 888 672Q888 650 880 642Q878 637 858 637Q787 633 769 597L620 7Q618 0 599 0Q585 0 582 2Q579 5 453 305L326 604L261 344Q196 88 196 79Q201 46 268 46H278Q284 41 284 38T282 19Q278 6 272 0H259Q228 2 151 2Q123 2 100 2T63 2T46 1Q31 1 31 10Q31 14 34 26T39 40Q41 46 62 46Q130 49 150 85Q154 91 221 362L289 634Q287 635 234 637Z"></path></g><rect width="1076.5" height="60" x="120" y="220"></rect></g></g></g></svg></mjx-container><br><mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.357ex;" xmlns="http://www.w3.org/2000/svg" width="9.603ex" height="1.902ex" role="img" focusable="false" viewBox="0 -683 4244.6 840.8"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msub"><g data-mml-node="mi"><path data-c="1D44D" d="M58 8Q58 23 64 35Q64 36 329 334T596 635L586 637Q575 637 512 637H500H476Q442 637 420 635T365 624T311 598T266 548T228 469Q227 466 226 463T224 458T223 453T222 450L221 448Q218 443 202 443Q185 443 182 453L214 561Q228 606 241 651Q249 679 253 681Q256 683 487 683H718Q723 678 723 675Q723 673 717 649Q189 54 188 52L185 49H274Q369 50 377 51Q452 60 500 100T579 247Q587 272 590 277T603 282H607Q628 282 628 271Q547 5 541 2Q538 0 300 0H124Q58 0 58 8Z"></path></g><g data-mml-node="TeXAtom" transform="translate(716,-150) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mi"><path data-c="1D462" d="M21 287Q21 295 30 318T55 370T99 420T158 442Q204 442 227 417T250 358Q250 340 216 246T182 105Q182 62 196 45T238 27T291 44T328 78L339 95Q341 99 377 247Q407 367 413 387T427 416Q444 431 463 431Q480 431 488 421T496 402L420 84Q419 79 419 68Q419 43 426 35T447 26Q469 29 482 57T512 145Q514 153 532 153Q551 153 551 144Q550 139 549 130T540 98T523 55T498 17T462 -8Q454 -10 438 -10Q372 -10 347 46Q345 45 336 36T318 21T296 6T267 -6T233 -11Q189 -11 155 7Q103 38 103 113Q103 170 138 262T173 379Q173 380 173 381Q173 390 173 393T169 400T158 404H154Q131 404 112 385T82 344T65 302T57 280Q55 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(572,0)"><path data-c="1D45B" d="M21 287Q22 293 24 303T36 341T56 388T89 425T135 442Q171 442 195 424T225 390T231 369Q231 367 232 367L243 378Q304 442 382 442Q436 442 469 415T503 336T465 179T427 52Q427 26 444 26Q450 26 453 27Q482 32 505 65T540 145Q542 153 560 153Q580 153 580 145Q580 144 576 130Q568 101 554 73T508 17T439 -10Q392 -10 371 17T350 73Q350 92 386 193T423 345Q423 404 379 404H374Q288 404 229 303L222 291L189 157Q156 26 151 16Q138 -11 108 -11Q95 -11 87 -5T76 7T74 17Q74 30 112 180T152 343Q153 348 153 366Q153 405 129 405Q91 405 66 305Q60 285 60 284Q58 278 41 278H27Q21 284 21 287Z"></path></g><g data-mml-node="mi" transform="translate(1172,0)"><path data-c="1D45C" d="M201 -11Q126 -11 80 38T34 156Q34 221 64 279T146 380Q222 441 301 441Q333 441 341 440Q354 437 367 433T402 417T438 387T464 338T476 268Q476 161 390 75T201 -11ZM121 120Q121 70 147 48T206 26Q250 26 289 58T351 142Q360 163 374 216T388 308Q388 352 370 375Q346 405 306 405Q243 405 195 347Q158 303 140 230T121 120Z"></path></g><g data-mml-node="mi" transform="translate(1657,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g><g data-mml-node="mi" transform="translate(2090,0)"><path data-c="1D450" d="M34 159Q34 268 120 355T306 442Q362 442 394 418T427 355Q427 326 408 306T360 285Q341 285 330 295T319 325T330 359T352 380T366 386H367Q367 388 361 392T340 400T306 404Q276 404 249 390Q228 381 206 359Q162 315 142 235T121 119Q121 73 147 50Q169 26 205 26H209Q321 26 394 111Q403 121 406 121Q410 121 419 112T429 98T420 83T391 55T346 25T282 0T202 -11Q127 -11 81 37T34 159Z"></path></g></g></g><g data-mml-node="mo" transform="translate(2827.8,0)"><path data-c="3D" d="M56 347Q56 360 70 367H707Q722 359 722 347Q722 336 708 328L390 327H72Q56 332 56 347ZM56 153Q56 168 72 173H708Q722 163 722 153Q722 140 707 133H70Q56 140 56 153Z"></path></g><g data-mml-node="mi" transform="translate(3883.6,0)"><path data-c="1D461" d="M26 385Q19 392 19 395Q19 399 22 411T27 425Q29 430 36 430T87 431H140L159 511Q162 522 166 540T173 566T179 586T187 603T197 615T211 624T229 626Q247 625 254 615T261 596Q261 589 252 549T232 470L222 433Q222 431 272 431H323Q330 424 330 420Q330 398 317 385H210L174 240Q135 80 135 68Q135 26 162 26Q197 26 230 60T283 144Q285 150 288 151T303 153H307Q322 153 322 145Q322 142 319 133Q314 117 301 95T267 48T216 6T155 -11Q125 -11 98 4T59 56Q57 64 57 83V101L92 241Q127 382 128 383Q128 385 77 385H26Z"></path></g></g></g></svg></mjx-container>, 可假设Shadow Receiver为平面  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/6.webp">   </p>
<h4 id="Summed-Area-Tables-SAT"><a href="#Summed-Area-Tables-SAT" class="headerlink" title="Summed Area Tables (SAT)"></a>Summed Area Tables (SAT)</h4><p>范围查询算法<br>a. 前缀和<br>b. 树状数据<br>c. 线段树  </p>
<h3 id="Moment-Shadow-Mapping"><a href="#Moment-Shadow-Mapping" class="headerlink" title="Moment Shadow Mapping"></a>Moment Shadow Mapping</h3><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/11.webp">   </p>
<p>定义一系列变量, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="14.186ex" height="2.343ex" role="img" focusable="false" viewBox="0 -841.7 6270.3 1035.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1016.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g><g data-mml-node="mo" transform="translate(2025.2,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(2469.9,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="33" d="M127 463Q100 463 85 480T69 524Q69 579 117 622T233 665Q268 665 277 664Q351 652 390 611T430 522Q430 470 396 421T302 350L299 348Q299 347 308 345T337 336T375 315Q457 262 457 175Q457 96 395 37T238 -22Q158 -22 100 21T42 130Q42 158 60 175T105 193Q133 193 151 175T169 130Q169 119 166 110T159 94T148 82T136 74T126 70T118 67L114 66Q165 21 238 21Q293 21 321 74Q338 107 338 175V195Q338 290 274 322Q259 328 213 329L171 330L168 332Q166 335 166 348Q166 366 174 366Q202 366 232 371Q266 376 294 413T322 525V533Q322 590 287 612Q265 626 240 626Q208 626 181 615T143 592T132 580H135Q138 579 143 578T153 573T165 566T175 555T183 540T186 520Q186 498 172 481T127 463Z"></path></g></g><g data-mml-node="mo" transform="translate(3478.4,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(3923.1,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(5098.3,0)"><path data-c="2026" d="M78 60Q78 84 95 102T138 120Q162 120 180 104T199 61Q199 36 182 18T139 0T96 17T78 60ZM525 60Q525 84 542 102T585 120Q609 120 627 104T646 61Q646 36 629 18T586 0T543 17T525 60ZM972 60Q972 84 989 102T1032 120Q1056 120 1074 104T1093 61Q1093 36 1076 18T1033 0T990 17T972 60Z"></path></g></g></g></svg></mjx-container><br>VSSM仅使用了前两阶, <mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.439ex;" xmlns="http://www.w3.org/2000/svg" width="4.582ex" height="2.326ex" role="img" focusable="false" viewBox="0 -833.9 2025.2 1027.9"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mo" transform="translate(572,0)"><path data-c="2C" d="M78 35T78 60T94 103T137 121Q165 121 187 96T210 8Q210 -27 201 -60T180 -117T154 -158T130 -185T117 -194Q113 -194 104 -185T95 -172Q95 -168 106 -156T131 -126T157 -76T173 -3V9L172 8Q170 7 167 6T161 3T152 1T140 0Q113 0 96 17Z"></path></g><g data-mml-node="msup" transform="translate(1016.7,0)"><g data-mml-node="mi"><path data-c="1D465" d="M52 289Q59 331 106 386T222 442Q257 442 286 424T329 379Q371 442 430 442Q467 442 494 420T522 361Q522 332 508 314T481 292T458 288Q439 288 427 299T415 328Q415 374 465 391Q454 404 425 404Q412 404 406 402Q368 386 350 336Q290 115 290 78Q290 50 306 38T341 26Q378 26 414 59T463 140Q466 150 469 151T485 153H489Q504 153 504 145Q504 144 502 134Q486 77 440 33T333 -11Q263 -11 227 52Q186 -10 133 -10H127Q78 -10 57 16T35 71Q35 103 54 123T99 143Q142 143 142 101Q142 81 130 66T107 46T94 41L91 40Q91 39 97 36T113 29T132 26Q168 26 194 71Q203 87 217 139T245 247T261 313Q266 340 266 352Q266 380 251 392T217 404Q177 404 142 372T93 290Q91 281 88 280T72 278H58Q52 284 52 289Z"></path></g><g data-mml-node="mn" transform="translate(605,363) scale(0.707)"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g></g></g></g></svg></mjx-container>描述期望和方差.  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/12.webp">   </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/S/Shadow/13.webp">   </p>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>渲染</category>
      </categories>
  </entry>
  <entry>
    <title>Hexo博客搭建记录</title>
    <url>//posts/202302/</url>
    <content><![CDATA[<h2 id="域名绑定GitHub-Pages"><a href="#域名绑定GitHub-Pages" class="headerlink" title="域名绑定GitHub Pages"></a>域名绑定GitHub Pages</h2><h3 id="1-云控制台设置"><a href="#1-云控制台设置" class="headerlink" title="1. 云控制台设置"></a>1. 云控制台设置</h3><p>主要是添加俩记录条目, 指向Pages地址<br>其记录值对应填入<br>a. xxx.github.io<br>b. ip address, 通过ping xxx.github.io获取后填入  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/Hexo/1.webp"></p>
<span id="more"></span>

<h3 id="2-GitHub-Pages设置"><a href="#2-GitHub-Pages设置" class="headerlink" title="2. GitHub Pages设置"></a>2. GitHub Pages设置</h3><p>修改为自定义的域名  </p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/H/Hexo/0.webp"></p>
<h3 id="3-记录描述"><a href="#3-记录描述" class="headerlink" title="3. 记录描述"></a>3. 记录描述</h3><p>记录类型</p>
<table>
<thead>
<tr>
<th align="center">记录类型</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">A</td>
<td>将域名指向一个 IP 地址</td>
</tr>
<tr>
<td align="center">CNAME</td>
<td>将域名指向另一个域名，再由另一个域名提供 IP 地址</td>
</tr>
<tr>
<td align="center">MX</td>
<td>设置邮箱，让邮箱能收到邮件</td>
</tr>
<tr>
<td align="center">NS</td>
<td>将子域名交给其他 DNS 服务商解析</td>
</tr>
<tr>
<td align="center">AAAA</td>
<td>将域名指向一个 IPv6 地址</td>
</tr>
<tr>
<td align="center">SRV</td>
<td>用来标识某台服务器使用了某个服务，常见于微软系统的目录管理</td>
</tr>
<tr>
<td align="center">TXT</td>
<td>对域名进行标识和说明，绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）</td>
</tr>
</tbody></table>
<p>主机记录  </p>
<table>
<thead>
<tr>
<th align="center">主机记录</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td align="center">www</td>
<td>解析后的域名为<a href="http://www.xxx.com/">www.xxx.com</a></td>
</tr>
<tr>
<td align="center">@</td>
<td>直接解析主域名xxx.com</td>
</tr>
<tr>
<td align="center">*</td>
<td>泛解析, 匹配其他所有域名*.xxx.com</td>
</tr>
<tr>
<td align="center">mail</td>
<td>将域名解析为mail.xxx.com</td>
</tr>
<tr>
<td align="center">二级域名</td>
<td>如: abc.xxx.com, 填写abc</td>
</tr>
<tr>
<td align="center">手机网站</td>
<td>如: m.xxx.com, 填写m</td>
</tr>
</tbody></table>
<h2 id="插件及扩展清单"><a href="#插件及扩展清单" class="headerlink" title="插件及扩展清单"></a>插件及扩展清单</h2><ul>
<li><a href="https://twikoo.js.org/">hexo-next-twikoo</a> 评论系统,  <a href="https://yzs020220.gitee.io/posts/44102/">Hexo评论系统对比推荐</a>, 依赖  <ul>
<li><a href="https://www.mongodb.com/">MongoDB</a> 数据库</li>
<li><a href="https://huggingface.co/">Hugging Face</a> Docker空间</li>
</ul>
</li>
<li><a href="https://github.com/next-theme/hexo-generator-searchdb">hexo-generator-searchdb</a> 站内搜索  </li>
<li><a href="https://github.com/next-theme/hexo-filter-mathjax">hexo-filter-mathjax</a> 数学公式  </li>
<li><a href="https://github.com/next-theme/hexo-word-counter">hexo-word-counter</a>, 字数统计  </li>
<li><a href="https://github.com/Molunerfinn/PicGo">PicGo</a>, 用于快速上传图片并获取图片 URL 链接的工具</li>
</ul>
<h3 id="插件注意事项"><a href="#插件注意事项" class="headerlink" title="插件注意事项"></a>插件注意事项</h3><p><code>hexo-filter-mathjax</code><br>使用的是<code>LaTeX</code>, 用VSCode等预览渲染时, 注意插件是否是用的<code>LaTeX</code>, 安装插件<a href="https://github.com/James-Yu/LaTeX-Workshop/wiki/Install#installation">LaTeX-Workshop</a></p>
]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>UnrealVDB</title>
    <url>//posts/202401/</url>
    <content><![CDATA[<p><strong>UE 5.3 OpenVDB代码浅析</strong></p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/0.webp"></p>
<span id="more"></span>

<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p><strong>UE官方支持VDB的最低版本是5.3</strong>, 用的是OpenVDB v8.1.0版本（此版本不支持NanoVDB, NanoVDB的支持得在 OpenVDB v9.0.0版本）<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/1.webp">  </p>
<p><strong>UE5.0、5.1有第三方插件<a href="https://github.com/eidosmontreal/unreal-vdb/tree/main">unreal-vdb</a>支持了OpenVDB及NanoVDB</strong><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/2.webp">  </p>
<p><em>接下来分析的是基于UE5.3官方支持的VDB功能</em></p>
<h3 id="1-导入-存储"><a href="#1-导入-存储" class="headerlink" title="1. 导入&存储"></a>1. 导入&amp;存储</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">1.</span> USparseVolumeTextureFactory类, 导入或重导VDB, 包括UAnimatedSparseVolumeTexture及UStaticSparseVolumeTexture</span><br><span class="line"><span class="number">2.</span> 核心导入方法是ConvertOpenVDBToSparseVolumeTexture, 序列和静态VDB都用该方法处理导入</span><br><span class="line"><span class="number">3.</span> 每一个VDB文件都会对应一个FTextureData类实例, 用来缓存导入的数据</span><br></pre></td></tr></table></figure>

<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/3.webp"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">FSparseVolumeTextureDataProviderOpenVDB, 在Initialize方法里包装了FTextureData创建信息, 而后Create时生成FTextureData</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/4.webp"></p>
<h4 id="1-1-页表和TileData数量设置"><a href="#1-1-页表和TileData数量设置" class="headerlink" title="1.1 页表和TileData数量设置"></a>1.1 页表和TileData数量设置</h4><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/5.webp"></p>
<h5 id="1-1-1-PageTable数量设置"><a href="#1-1-1-PageTable数量设置" class="headerlink" title="1.1.1 PageTable数量设置"></a>1.1.1 PageTable数量设置</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">页表的数量是分辨率内积直接得到, 而页表分辨率是默认构造FHeader时（用CreateInfo里的VirtualVolumeAABB等信息）计算, 每个页表元素是uint32</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SPARSE_VOLUME_TILE_RES 16</span></span><br><span class="line">PageTableVolumeResolution.xyz = VirtualVolumeSize.xyz / SPARSE_VOLUME_TILE_RES;</span><br><span class="line">PageTableVolumeResolution.xyz = <span class="built_in">RoundUpToPowerOfTwo</span>(PageTableVolumeResolution.xyz);</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/6.webp"></p>
<h5 id="1-1-2-TileData数量设置"><a href="#1-1-2-TileData数量设置" class="headerlink" title="1.1.2 TileData数量设置"></a>1.1.2 TileData数量设置</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">TileDataA及TileDataB, 每个TileData是uint8</span><br><span class="line">TileData数量 = 非空Tile数（即有效页数）* 每PaddedTile所含的Voxel数量 * 每Voxel所占用uint8的数量</span><br><span class="line">每个PaddedTile的Voxel数量为</span><br><span class="line">NumVoxelsPerPaddedTile = (<span class="number">16</span>+<span class="number">2</span>*<span class="number">1</span>)*(<span class="number">16</span>+<span class="number">2</span>*<span class="number">1</span>)*(<span class="number">16</span>+<span class="number">2</span>*<span class="number">1</span>);</span><br><span class="line">也就是SPARSE_VOLUME_TILE_RES+上下左右前后各自补一个Voxel</span><br><span class="line">每个Voxel占的大小基于VDB导入设置里属性来</span><br><span class="line">FormatSize[<span class="number">2</span>] = {GPixelFormats[Header.AttributesFormats[<span class="number">0</span>]].BlockBytes, GPixelFormats[Header.AttributesFormats[<span class="number">1</span>]].BlockBytes}</span><br><span class="line">若如下图导入配置, 则FormatSize[<span class="number">0</span>] = <span class="number">1B</span>yte, FormatSize[<span class="number">1</span>] = <span class="number">0B</span>yte</span><br><span class="line">Tips: 不支持三通道属性, 若面板每属性配置<span class="number">3</span>通道值, 该属性将占用<span class="number">4</span>通道空间</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/7.webp"></p>
<h4 id="1-2-页表及TilesData的压缩-及存储流式数据"><a href="#1-2-页表及TilesData的压缩-及存储流式数据" class="headerlink" title="1.2 页表及TilesData的压缩, 及存储流式数据"></a>1.2 页表及TilesData的压缩, 及存储流式数据</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">FResource::Build方法中, 数据导入完成后, 先压缩数据进StreamableBulkData, 而后存储StreamableBulkData至StreamableMipLevels. (SparseVolumeTexture.cpp)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/8.webp"></p>
<h5 id="1-2-1-页表的压缩"><a href="#1-2-1-页表的压缩" class="headerlink" title="1.2.1 页表的压缩"></a>1.2.1 页表的压缩</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CompressPageTable方法, 压缩页表数据进StreamableBulkData</span><br><span class="line">分配两倍非空页表线性连续空间M、N, M每空间用<span class="number">32b</span>it存储三维坐标（X/Y/Z分别占用<span class="number">11</span>/<span class="number">11</span>/<span class="number">10</span>位）, N每空间用<span class="number">32b</span>it存储物理Tile的索引</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/9.webp"></p>
<h5 id="1-2-2-TileData的压缩"><a href="#1-2-2-TileData的压缩" class="headerlink" title="1.2.2 TileData的压缩"></a>1.2.2 TileData的压缩</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">CompressTiles方法, 压缩TileData进StreamableBulkData</span><br><span class="line">先将默认FallbackValue从Vector4转成uint8值数组, 用于后续直接与PhysicalTileData数据比对, 过滤掉空Voxel</span><br><span class="line"></span><br><span class="line">对非空Voxel全局索引按字（Word）编码成 Key = VIndex / <span class="number">32</span>, Value = <span class="number">1u</span> &lt;&lt; VIndex % <span class="number">32</span></span><br><span class="line"><span class="type">const</span> int64 WordIndex = TileIndex * SVT::NumOccupancyWordsPerPaddedTile + (VoxelIndex / <span class="number">32</span>);</span><br><span class="line">OccupancyBits[AttributesIdx][WordIndex] |= <span class="number">1u</span> &lt;&lt; (<span class="built_in">static_cast</span>&lt;uint32&gt;(VoxelIndex) % <span class="number">32u</span>);</span><br><span class="line"></span><br><span class="line">同时统计每Tile下非空Voxel数量</span><br><span class="line">PrefixSums[AttributesIdx][TileIndex]++;</span><br></pre></td></tr></table></figure>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">Tile非空体素统计及置位</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/10.webp"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">压缩所有非空Voxel数据</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/11.webp"></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">压缩数据内存布局, 从左到右依次存储</span><br><span class="line">OccupancyBits描述物理Volume全局体素非空置位表, 即非空的体素, 索引所在字（Word）, 并对其相应bit置位, bit的数量等同于所有Voxel包括非空的数量</span><br><span class="line">TileDataOffsets描述Voxel数量偏移, 俩临近TileDataOffset差表示前一个TileData的非空Voxel数量</span><br><span class="line">TileData描述每Voxel的密度、温度等数据</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>OccupancyBits</th>
<th></th>
<th>TileDataOffsets</th>
<th></th>
<th>TileData</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>OccupancyBitsOffset[0]</td>
<td>OccupancyBitsOffset[1]</td>
<td>TileDataOffsetsOffset[0]</td>
<td>TileDataOffsetsOffset[1]</td>
<td>TileDataOffset[0]</td>
<td>TileDataOffset[1]</td>
</tr>
<tr>
<td>OccupancyBitsSize[0]</td>
<td>OccupancyBitsSize[1]</td>
<td>TileDataOffsetsSize[0]</td>
<td>TileDataOffsetsSize[1]</td>
<td>TileDataSize[0]</td>
<td>TileDataSize[1]</td>
</tr>
</tbody></table>
<h5 id="1-2-3-存储流式数据"><a href="#1-2-3-存储流式数据" class="headerlink" title="1.2.3 存储流式数据"></a>1.2.3 存储流式数据</h5><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">FResources::Cache（SparseVolumeTexture.cpp）保存磁盘前, 进一步压缩BulkData</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/12.webp"></p>
<h3 id="2-纹理"><a href="#2-纹理" class="headerlink" title="2. 纹理"></a>2. 纹理</h3><h4 id="2-1-数据更新至RHI"><a href="#2-1-数据更新至RHI" class="headerlink" title="2.1 数据更新至RHI"></a>2.1 数据更新至RHI</h4><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">FStreamingManager::AddInternal方法（SparseVolumeTextureStreamingManager.cpp）中, 拷StreamableMipLevels数据, 通过RootTileUploader上传至CS, 以更新TileDataTextureRHI</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/13.webp"></p>
<h4 id="2-2-渲染页表及Tile纹理"><a href="#2-2-渲染页表及Tile纹理" class="headerlink" title="2.2 渲染页表及Tile纹理"></a>2.2 渲染页表及Tile纹理</h4><p>Shader文件 UpdateSparseVolumeTexture.usf</p>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/14.webp"></p>
<h4 id="2-3-采样页表及Tile纹理"><a href="#2-3-采样页表及Tile纹理" class="headerlink" title="2.3 采样页表及Tile纹理"></a>2.3 采样页表及Tile纹理</h4><p>用ComputeShader, 渲染至LightTexture<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/15.webp"><br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/16.webp"><br>采样HeterogeneousVolumeRadiance纹理, 混合至SceneColor<br><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/17.webp"></p>
<h3 id="3-其他"><a href="#3-其他" class="headerlink" title="3. 其他"></a>3. 其他</h3><h4 id="UE5-3-SVT的一些限制"><a href="#UE5-3-SVT的一些限制" class="headerlink" title="UE5.3 SVT的一些限制"></a>UE5.3 SVT的一些限制</h4><p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/18.webp"></p>
<p>页表纹理大小限制2GB内, SVT的X、Y值禁止超过32K, Z值禁止超过16K<br>这个通过上面的分析也好理解, 上面提到VDB的数据在UE5.3里是分Tile, 每Tile分辨率是<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: -0.05ex;" xmlns="http://www.w3.org/2000/svg" width="11.061ex" height="1.557ex" role="img" focusable="false" viewBox="0 -666 4888.9 688"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(1222.2,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(1944.4,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g><g data-mml-node="mo" transform="translate(3166.7,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="mn" transform="translate(3888.9,0)"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="36" d="M42 313Q42 476 123 571T303 666Q372 666 402 630T432 550Q432 525 418 510T379 495Q356 495 341 509T326 548Q326 592 373 601Q351 623 311 626Q240 626 194 566Q147 500 147 364L148 360Q153 366 156 373Q197 433 263 433H267Q313 433 348 414Q372 400 396 374T435 317Q456 268 456 210V192Q456 169 451 149Q440 90 387 34T253 -22Q225 -22 199 -14T143 16T92 75T56 172T42 313ZM257 397Q227 397 205 380T171 335T154 278T148 216Q148 133 160 97T198 39Q222 21 251 21Q302 21 329 59Q342 77 347 104T352 209Q352 289 347 316T329 361Q302 397 257 397Z" transform="translate(500,0)"></path></g></g></g></svg></mjx-container>, 即<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="10.63ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 4698.5 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(1881,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(3039.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(3762,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g></g></g></svg></mjx-container>， 且页表存储的数据X、Y维被压缩至11bit, Z维被压缩至10bit, 也就等同于Voxel的索引X、Y、Z维最大限制分别为32K（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="7.174ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 3171.1 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(1881,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container>）、32K（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="7.174ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 3171.1 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(1881,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container>）、16K（<mjx-container class="MathJax" jax="SVG"><svg style="vertical-align: 0;" xmlns="http://www.w3.org/2000/svg" width="7.174ex" height="1.904ex" role="img" focusable="false" viewBox="0 -841.7 3171.1 841.7"><g stroke="currentColor" fill="currentColor" stroke-width="0" transform="scale(1,-1)"><g data-mml-node="math"><g data-mml-node="msup"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="mn" transform="translate(533,363) scale(0.707)"><path data-c="34" d="M462 0Q444 3 333 3Q217 3 199 0H190V46H221Q241 46 248 46T265 48T279 53T286 61Q287 63 287 115V165H28V211L179 442Q332 674 334 675Q336 677 355 677H373L379 671V211H471V165H379V114Q379 73 379 66T385 54Q393 47 442 46H471V0H462ZM293 211V545L74 212L183 211H293Z"></path></g></g><g data-mml-node="mo" transform="translate(1158.8,0)"><path data-c="2217" d="M229 286Q216 420 216 436Q216 454 240 464Q241 464 245 464T251 465Q263 464 273 456T283 436Q283 419 277 356T270 286L328 328Q384 369 389 372T399 375Q412 375 423 365T435 338Q435 325 425 315Q420 312 357 282T289 250L355 219L425 184Q434 175 434 161Q434 146 425 136T401 125Q393 125 383 131T328 171L270 213Q283 79 283 63Q283 53 276 44T250 35Q231 35 224 44T216 63Q216 80 222 143T229 213L171 171Q115 130 110 127Q106 124 100 124Q87 124 76 134T64 161Q64 166 64 169T67 175T72 181T81 188T94 195T113 204T138 215T170 230T210 250L74 315Q65 324 65 338Q65 353 74 363T98 374Q106 374 116 368T171 328L229 286Z"></path></g><g data-mml-node="msup" transform="translate(1881,0)"><g data-mml-node="mn"><path data-c="32" d="M109 429Q82 429 66 447T50 491Q50 562 103 614T235 666Q326 666 387 610T449 465Q449 422 429 383T381 315T301 241Q265 210 201 149L142 93L218 92Q375 92 385 97Q392 99 409 186V189H449V186Q448 183 436 95T421 3V0H50V19V31Q50 38 56 46T86 81Q115 113 136 137Q145 147 170 174T204 211T233 244T261 278T284 308T305 340T320 369T333 401T340 431T343 464Q343 527 309 573T212 619Q179 619 154 602T119 569T109 550Q109 549 114 549Q132 549 151 535T170 489Q170 464 154 447T109 429Z"></path></g><g data-mml-node="TeXAtom" transform="translate(533,363) scale(0.707)" data-mjx-texclass="ORD"><g data-mml-node="mn"><path data-c="31" d="M213 578L200 573Q186 568 160 563T102 556H83V602H102Q149 604 189 617T245 641T273 663Q275 666 285 666Q294 666 302 660V361L303 61Q310 54 315 52T339 48T401 46H427V0H416Q395 3 257 3Q121 3 100 0H88V46H114Q136 46 152 46T177 47T193 50T201 52T207 57T213 61V578Z"></path><path data-c="30" d="M96 585Q152 666 249 666Q297 666 345 640T423 548Q460 465 460 320Q460 165 417 83Q397 41 362 16T301 -15T250 -22Q224 -22 198 -16T137 16T82 83Q39 165 39 320Q39 494 96 585ZM321 597Q291 629 250 629Q208 629 178 597Q153 571 145 525T137 333Q137 175 145 125T181 46Q209 16 250 16Q290 16 318 46Q347 76 354 130T362 333Q362 478 354 524T321 597Z" transform="translate(500,0)"></path></g></g></g></g></g></svg></mjx-container>）.</p>
<h3 id="4-小结"><a href="#4-小结" class="headerlink" title="4. 小结"></a>4. 小结</h3><p>目前重心探索VDB的压缩存储方面, 具体渲染没过多深入, 一般镂空Voxel大概占比30%~50%<br>目前测试的数据不多, 动态的VDB暂没深究, 测试资产包网盘地址见 <a href="https://pan.baidu.com/s/1gd9VHF-pzLK6XFPHCPgnNg?pwd=h7vn">CloudPackVDB</a></p>
<table>
<thead>
<tr>
<th align="center"></th>
<th align="center">压缩前[vdb]</th>
<th align="center">打包前[内部压缩]Mip0</th>
<th align="center">打包后[打包压缩, uasset]</th>
<th align="center">压缩比</th>
</tr>
</thead>
<tbody><tr>
<td align="center">静态云样例0</td>
<td align="center">19.2MB</td>
<td align="center">约10MB</td>
<td align="center">4.39MB</td>
<td align="center">22.86%</td>
</tr>
</tbody></table>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">样例, 原始数据<span class="number">19.2</span>MB, 截图为TileData及PageTable数据压缩后, 打包压缩前</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VDB/19.webp"></p>
<h3 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h3><ol>
<li><a href="https://www.openvdb.org/documentation/doxygen/overview.html">OpenVDB说明文档</a></li>
<li><a href="https://docs.unrealengine.com/5.3/en-US/sparse-volume-textures-in-unreal-engine/">UE5.3 Sparse Volume Texture</a></li>
</ol>
]]></content>
      <categories>
        <category>开发</category>
        <category>引擎</category>
        <category>UE</category>
      </categories>
      <tags>
        <tag>UnrealEngine</tag>
      </tags>
  </entry>
  <entry>
    <title>梯子自用整理</title>
    <url>//posts/202402/</url>
    <content><![CDATA[<h3 id="购服务器"><a href="#购服务器" class="headerlink" title="购服务器"></a>购服务器</h3><h4 id="腾讯云"><a href="#腾讯云" class="headerlink" title="腾讯云"></a>腾讯云</h4><p>a. 购买<a href="https://cloud.tencent.com/login?s_url=https://buy.cloud.tencent.com/lighthouse?blueprintType=APP_OS&blueprintOfficialId=lhbp-8l0svtzc&regionId=9&zone=ap-singapore-3&bundleId=bundle_starter_nmc_lin_med2_01&loginSet=AUTO&timeSpan=10&from=lh-console">链接</a></p>
<p>b. 选择亚太地区-新加波, 基础型30RMB</p>
<span id="more"></span>

<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VPN/0.webp"></p>
<h3 id="搭建梯子"><a href="#搭建梯子" class="headerlink" title="搭建梯子"></a>搭建梯子</h3><h4 id="V2Ray"><a href="#V2Ray" class="headerlink" title="V2Ray"></a><a href="https://github.com/233boy/v2ray">V2Ray</a></h4><p>执行俩句脚本命令, 教程可见<a href="https://www.techxiaofei.com/post/vpn/v2ray">V2Ray</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo su</span><br><span class="line">bash &lt;(curl -s -L https://git.io/v2ray.sh)</span><br></pre></td></tr></table></figure>
<p><img data-src="https://media.githubusercontent.com/media/2015winter/MarkDownImages/master/V/VPN/1.webp"></p>
<h3 id="各客户端"><a href="#各客户端" class="headerlink" title="各客户端"></a>各客户端</h3><h4 id="IOS"><a href="#IOS" class="headerlink" title="IOS"></a>IOS</h4><p><a href="https://apps.apple.com/us/app/shadowrocket/id932747118">Shadowrocket</a> 小火箭, 需在非大陆区AppleStore下载, 美区2.99USD</p>
<p>将脚本生成的链接URL整个复制, 打开软件后, 软件检测到会自动填充</p>
<h4 id="Mac"><a href="#Mac" class="headerlink" title="Mac"></a>Mac</h4><p><a href="https://github.com/Loyalsoldier/clash-rules/tree/hidden/software/clashx-pro">ClashX Pro</a></p>
<p>Vmess还需通过<a href="https://acl4ssr-sub.github.io/">订阅转换工具</a>转成Clash配置, 也可寻找其他后端来转换</p>
<h4 id="Android"><a href="#Android" class="headerlink" title="Android"></a>Android</h4><p>有点忘记了</p>
<h4 id="Win-10"><a href="#Win-10" class="headerlink" title="Win 10"></a>Win 10</h4><p><a href="https://github.com/Loyalsoldier/clash-rules/tree/hidden/software/clash-for-windows">Clash For Windows</a></p>
<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>公网固定IP容易被墙, 轻量应用服务器只能更换一次IP, 续费时间不建议太长, 否则被砸时亏损多, 轻量服务器建议走少流量, 可同时月付一台大流量, 降低风险</p>
]]></content>
      <categories>
        <category>随记</category>
        <category>工具</category>
      </categories>
      <tags>
        <tag>VPN</tag>
      </tags>
  </entry>
</search>
